{
  "version": 3,
  "sources": ["../../src/components/shortcutPill.ts", "../../src/components/header.ts", "../../src/types.ts", "../../src/utils/format.ts", "../../node_modules/dinero.js/build/esm/dinero.js", "../../src/utils/monetary.ts", "../../src/utils/highlight.ts", "../../src/utils/query.ts", "../../src/utils/time.ts", "../../src/data/recentSearches.ts", "../../src/config/defaults.json", "../../src/state/store.ts", "../../src/state/settingsStore.ts", "../../src/components/searchDialog.ts", "../../src/utils/relationshipEngine.ts", "../../src/data/searchService.ts", "../../src/components/resultsView.ts", "../../src/components/settingsView.ts", "../../src/components/skeletonComponents.ts", "../../src/components/homeSkeleton.ts", "../../src/state/appState.ts", "../../src/main.ts"],
  "sourcesContent": ["export interface ShortcutPillOptions {\n  onFocus?: () => void;\n}\n\nexport interface ShortcutPillHandles {\n  element: HTMLElement;\n}\n\n// Detect OS to show the correct shortcut\nfunction detectOS(): 'mac' | 'windows' | 'linux' | 'other' {\n  const userAgent = navigator.userAgent.toLowerCase();\n  \n  if (userAgent.includes('mac')) {\n    return 'mac';\n  } else if (userAgent.includes('win')) {\n    return 'windows';\n  } else if (userAgent.includes('linux')) {\n    return 'linux';\n  }\n  \n  return 'other';\n}\n\n// Get the appropriate shortcut display based on OS\nfunction getShortcutDisplay(os: 'mac' | 'windows' | 'linux' | 'other'): string {\n  switch (os) {\n    case 'mac':\n      return '\u2318K';\n    case 'windows':\n    case 'linux':\n      return 'Ctrl+K';\n    case 'other':\n      return '\u2318K';\n    default:\n      return '\u2318K';\n  }\n}\n\n// Get tooltip text based on OS\nfunction getTooltipText(os: 'mac' | 'windows' | 'linux' | 'other'): string {\n  switch (os) {\n    case 'mac':\n      return 'Press / or \u2318K to focus search';\n    case 'windows':\n    case 'linux':\n      return 'Press / or Ctrl+K to focus search';\n    case 'other':\n      return 'Press / or \u2318K to focus search';\n    default:\n      return 'Press / or \u2318K to focus search';\n  }\n}\n\nexport function createShortcutPill(options: ShortcutPillOptions = {}): ShortcutPillHandles {\n  const os = detectOS();\n  const shortcutDisplay = getShortcutDisplay(os);\n  const tooltipText = getTooltipText(os);\n\n  const pill = document.createElement('div');\n  pill.className = 'shortcut-pill';\n  pill.setAttribute('title', tooltipText);\n  pill.setAttribute('aria-label', tooltipText);\n  pill.setAttribute('role', 'img');\n  \n  // Create the shortcut key elements\n  const keys = shortcutDisplay.split('+');\n  keys.forEach((key, index) => {\n    if (index > 0) {\n      const plus = document.createElement('span');\n      plus.className = 'shortcut-pill__plus';\n      plus.textContent = '+';\n      pill.appendChild(plus);\n    }\n    \n    const keyElement = document.createElement('kbd');\n    keyElement.className = 'shortcut-pill__key';\n    keyElement.textContent = key;\n    pill.appendChild(keyElement);\n  });\n\n  return {\n    element: pill,\n  };\n}\n", "import { ScreenRoute } from '../types';\nimport { createShortcutPill } from './shortcutPill';\n\nexport interface HeaderOptions {\n  onNavigate(route: ScreenRoute): void;\n  onHome(): void;\n  onSearchChange(value: string): void;\n  onSearchSubmit(): void;\n  onSearchFocus?(): void;\n  onSearchBlur?(): void;\n  onSearchKeyDown?(event: KeyboardEvent): void;\n}\n\nexport interface HeaderHandles {\n  element: HTMLElement;\n  searchInput: HTMLInputElement;\n  dialogHost: HTMLDivElement;\n  setActiveRoute(route: ScreenRoute): void;\n  setMonetarySearchMode(isMonetary: boolean): void;\n}\n\nexport function createHeader(options: HeaderOptions): HeaderHandles {\n  const header = document.createElement('header');\n  header.className = 'app-header';\n\n  const nav = document.createElement('nav');\n  nav.className = 'app-nav';\n\n  const brand = document.createElement('div');\n  brand.className = 'brand';\n  \n  const logoLink = document.createElement('button');\n  logoLink.type = 'button';\n  logoLink.className = 'logo-link';\n  logoLink.setAttribute('aria-label', 'Go to Home');\n  \n  const logoSvg = document.createElement('div');\n  logoSvg.className = 'logo-svg';\n  logoSvg.innerHTML = `<svg id=\"btLogoIcon\" aria-label=\"Logo SVG\" fill=\"none\" viewBox=\"0 0 78 97\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><path d=\"M32.058 18.013H15.706V.026H0V49.726c0 17.513 14.198 31.71 31.711 31.71 17.514 0 31.711-14.198 31.711-31.711 0-17.398-14.01-31.525-31.364-31.712Zm-.347 47.67c-8.813 0-15.958-7.145-15.958-15.958 0-8.814 7.145-15.958 15.958-15.958 8.814 0 15.958 7.144 15.958 15.958 0 8.813-7.144 15.958-15.958 15.958Z\" fill=\"#001A43\"></path><path d=\"m54.336 9.411-3.19 5.524c12.206 6.823 20.46 19.87 20.46 34.846 0 22.033-17.861 39.895-39.895 39.895-7.48 0-14.477-2.06-20.46-5.641l-3.188 5.523A46.004 46.004 0 0 0 31.71 96.07C57.235 96.07 78 75.305 78 49.781c0-17.311-9.554-32.43-23.664-40.37Z\" fill=\"#00D8D8\"></path></svg>`;\n  \n  logoLink.appendChild(logoSvg);\n  brand.appendChild(logoLink);\n\n  const searchArea = document.createElement('div');\n  searchArea.className = 'search-area';\n\n  const searchForm = document.createElement('form');\n  searchForm.className = 'search-form';\n  searchForm.setAttribute('role', 'search');\n\n  const searchInput = document.createElement('input');\n  searchInput.type = 'search';\n  searchInput.name = 'global-search';\n  searchInput.id = 'global-search';\n  searchInput.placeholder = 'Search projects, invoices, documents\u2026';\n  searchInput.autocomplete = 'off';\n\n  const searchIcon = document.createElement('i');\n  searchIcon.className = 'search-icon';\n  searchIcon.setAttribute('data-lucide', 'search');\n\n  // Create shortcut pill\n  const shortcutPill = createShortcutPill();\n  shortcutPill.element.className += ' search-shortcut-pill';\n\n  const dialogHost = document.createElement('div');\n  dialogHost.className = 'search-dialog-host';\n\n  searchForm.append(searchIcon, searchInput, shortcutPill.element);\n  searchArea.append(searchForm, dialogHost);\n\n  const navActions = document.createElement('div');\n  navActions.className = 'nav-actions';\n\n  const homeButton = document.createElement('button');\n  homeButton.type = 'button';\n  homeButton.className = 'home-button';\n  homeButton.textContent = 'Home';\n\n  const resultsButton = document.createElement('button');\n  resultsButton.type = 'button';\n  resultsButton.dataset.route = 'results';\n  resultsButton.textContent = 'Results';\n\n  const settingsButton = document.createElement('button');\n  settingsButton.type = 'button';\n  settingsButton.dataset.route = 'settings';\n  settingsButton.textContent = 'Settings';\n\n  navActions.append(homeButton, resultsButton, settingsButton);\n  nav.append(brand, searchArea, navActions);\n  header.append(nav);\n\n  searchInput.addEventListener('input', () => {\n    options.onSearchChange(searchInput.value);\n  });\n\n  searchInput.addEventListener('focus', () => {\n    // Hide shortcut pill when search input is focused\n    shortcutPill.element.style.display = 'none';\n    options.onSearchFocus?.();\n  });\n\n  searchInput.addEventListener('blur', () => {\n    // Show shortcut pill when search input loses focus\n    shortcutPill.element.style.display = 'inline-flex';\n    options.onSearchBlur?.();\n  });\n\n  searchInput.addEventListener('keydown', (event) => {\n    options.onSearchKeyDown?.(event);\n  });\n\n  searchForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    options.onSearchSubmit();\n  });\n\n  homeButton.addEventListener('click', () => {\n    options.onHome();\n  });\n\n  logoLink.addEventListener('click', () => {\n    options.onHome();\n  });\n\n  navActions.addEventListener('click', (event) => {\n    const target = event.target as HTMLElement;\n    if (!(target instanceof HTMLButtonElement)) {\n      return;\n    }\n\n    const route = target.dataset.route as ScreenRoute | undefined;\n    if (!route) {\n      return;\n    }\n\n    options.onNavigate(route);\n  });\n\n  const setActiveRoute = (route: ScreenRoute) => {\n    // Handle Home button\n    const isHomeActive = route === 'home';\n    homeButton.classList.toggle('is-active', isHomeActive);\n    homeButton.setAttribute('aria-pressed', String(isHomeActive));\n\n    // Handle other navigation buttons\n    for (const button of navActions.querySelectorAll<HTMLButtonElement>('button[data-route]')) {\n      const isActive = button.dataset.route === route;\n      button.classList.toggle('is-active', isActive);\n      button.setAttribute('aria-pressed', String(isActive));\n    }\n  };\n\n  const setMonetarySearchMode = (isMonetary: boolean) => {\n    searchForm.classList.toggle('monetary-search', isMonetary);\n    searchInput.classList.toggle('monetary-search', isMonetary);\n  };\n\n  return {\n    element: header,\n    searchInput,\n    dialogHost,\n    setActiveRoute,\n    setMonetarySearchMode,\n  };\n}\n", "export type SearchEntityType =\n  | 'Document'\n  | 'ClientInvoice'\n  | 'PurchaseOrder'\n  | 'Bill'\n  | 'Receipt'\n  | 'Payment'\n  | 'Person'\n  | 'Organization'\n  | 'Buildertrend';\n\nexport type LineItemType = 'Labor' | 'Material' | 'Subcontractor' | 'Other';\n\nexport interface LineItem {\n  lineItemId: string;\n  lineItemTitle: string;\n  lineItemDescription: string;\n  lineItemQuantity: number;\n  lineItemQuantityUnitOfMeasure: string;\n  lineItemUnitPrice: number;\n  lineItemTotal: number;\n  lineItemType: LineItemType;\n  // Cost code metadata\n  costCode?: string; // The code number (e.g., \"1000\")\n  costCodeName?: string; // The full name (e.g., \"1000 - Permits\")\n  costCodeCategory?: string; // The category ID (e.g., \"1000-1999\")\n  costCodeCategoryName?: string; // The category name (e.g., \"1000 - 1999 Preparation Preliminaries\")\n  // Metadata to mark which fields are monetary for search purposes\n  fieldMetadata?: {\n    lineItemTitle: 'monetary' | 'non-monetary';\n    lineItemDescription: 'monetary' | 'non-monetary';\n    lineItemQuantity: 'monetary' | 'non-monetary';\n    lineItemQuantityUnitOfMeasure: 'monetary' | 'non-monetary';\n    lineItemUnitPrice: 'monetary' | 'non-monetary';\n    lineItemTotal: 'monetary' | 'non-monetary';\n    lineItemType: 'monetary' | 'non-monetary';\n  };\n}\n\nexport interface SearchRecordBase {\n  id: string;\n  entityType: SearchEntityType;\n  title: string;\n  summary: string;\n  project: string;\n  client: string;\n  status: string;\n  updatedAt: string;\n  createdAt: string;\n  tags: string[];\n  metadata: Record<string, string | number | boolean | null>;\n}\n\nexport interface DocumentRecord extends SearchRecordBase {\n  entityType: 'Document';\n  documentType: string;\n  author: string;\n}\n\nexport interface FinancialRecord extends SearchRecordBase {\n  entityType: 'ClientInvoice' | 'PurchaseOrder' | 'Bill' | 'Receipt' | 'Payment';\n  totalValue: number;\n  issuedDate: string;\n  dueDate?: string;\n  lineItems: LineItem[];\n  // Metadata to mark which fields are monetary for search purposes\n  fieldMetadata?: {\n    title: 'monetary' | 'non-monetary';\n    summary: 'monetary' | 'non-monetary';\n    totalValue: 'monetary' | 'non-monetary';\n  };\n}\n\nexport type PersonType = 'Client' | 'Contact';\n\nexport interface PersonRecord extends SearchRecordBase {\n  entityType: 'Person';\n  personType: PersonType;\n  jobTitle: string;\n  associatedOrganization?: string;\n  email: string;\n  phone: string;\n  location: string;\n  tradeFocus?: string;\n}\n\nexport type OrganizationType = 'Subcontractor' | 'Vendor';\n\nexport interface OrganizationRecord extends SearchRecordBase {\n  entityType: 'Organization';\n  organizationType: OrganizationType;\n  tradeFocus: string;\n  serviceArea: string;\n  primaryContact: string;\n  phone: string;\n  email: string;\n  website?: string;\n}\n\nexport interface BuildertrendRecord extends SearchRecordBase {\n  entityType: 'Buildertrend';\n  path: string;\n  description: string;\n  icon: string;\n  url: string;\n  triggerQueries: string[];\n}\n\nexport type SearchRecord =\n  | DocumentRecord\n  | FinancialRecord\n  | PersonRecord\n  | OrganizationRecord\n  | BuildertrendRecord;\n\nexport function isFinancialRecord(record: SearchRecord): record is FinancialRecord {\n  return (\n    record.entityType === 'ClientInvoice' ||\n    record.entityType === 'PurchaseOrder' ||\n    record.entityType === 'Bill' ||\n    record.entityType === 'Receipt' ||\n    record.entityType === 'Payment'\n  );\n}\n\nexport function isPersonRecord(record: SearchRecord): record is PersonRecord {\n  return record.entityType === 'Person';\n}\n\nexport function isOrganizationRecord(record: SearchRecord): record is OrganizationRecord {\n  return record.entityType === 'Organization';\n}\n\nexport function isBuildertrendRecord(record: SearchRecord): record is BuildertrendRecord {\n  return record.entityType === 'Buildertrend';\n}\n\nexport interface SearchGroup {\n  entityType: SearchEntityType;\n  items: SearchRecord[];\n  groupTitle?: string;\n}\n\nexport type FacetKey =\n  | 'entityType'\n  | 'project'\n  | 'status'\n  | 'documentType'\n  | 'client'\n  | 'issuedDate'\n  | 'totalValue'\n  | 'groupBy'\n  | 'personType'\n  | 'contactOrganization'\n  | 'organizationType'\n  | 'tradeFocus'\n  | 'costCodeCategory'\n  | 'costCode';\n\nexport interface FacetValue {\n  key: FacetKey;\n  value: string;\n  count: number;\n}\n\nexport interface FacetSelection {\n  key: FacetKey;\n  value: string;\n}\n\nexport interface SearchResponse {\n  query: string;\n  totalResults: number;\n  limitedGroups: SearchGroup[];\n  fullGroups: SearchGroup[];\n  facets: Partial<Record<FacetKey, FacetValue[]>>;\n  records: SearchRecord[];\n  isGrouped: boolean;\n}\n\nexport type ScreenRoute = 'home' | 'results' | 'settings';\n\nexport type FacetSelectionState = Partial<Record<FacetKey, Set<string>>>;\n\nexport type SortOption = 'relevance' | 'mostRecent' | 'dueFirst' | 'dueLast';\n\nexport interface SearchOptions {\n  query: string;\n  selections?: FacetSelectionState;\n  isMonetarySearch?: boolean;\n}\n", "import { SearchEntityType } from '../types';\n\nconst ENTITY_LABELS: Record<SearchEntityType, { singular: string; plural: string }> = {\n  Document: { singular: 'Document', plural: 'Documents' },\n  ClientInvoice: { singular: 'Client Invoice', plural: 'Client Invoices' },\n  PurchaseOrder: { singular: 'Purchase Order', plural: 'Purchase Orders' },\n  Bill: { singular: 'Bill', plural: 'Bills' },\n  Receipt: { singular: 'Receipt', plural: 'Receipts' },\n  Payment: { singular: 'Payment', plural: 'Payments' },\n  Person: { singular: 'Person', plural: 'People' },\n  Organization: { singular: 'Organization', plural: 'Organizations' },\n};\n\nexport function formatEntityType(type: SearchEntityType, options?: { plural?: boolean }): string {\n  const label = ENTITY_LABELS[type];\n  if (!label) {\n    return type;\n  }\n  return options?.plural ? label.plural : label.singular;\n}\n\nexport function formatCurrency(amount: number, currency: string = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    maximumFractionDigits: 0,\n  }).format(amount);\n}\n\nexport function formatDate(value: string): string {\n  const date = new Date(value);\n  if (Number.isNaN(date.getTime())) {\n    return value;\n  }\n\n  return new Intl.DateTimeFormat('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n  }).format(date);\n}\n", "/**\n * Default values for all Dinero objects.\n *\n * You can override default values for all subsequent Dinero objects by changing them directly on the global `Dinero` object.\n * Existing instances won't be affected.\n *\n * @property {Number} defaultAmount - The default amount for new Dinero objects (see {@link module:Dinero Dinero} for format).\n * @property {String} defaultCurrency - The default currency for new Dinero objects (see {@link module:Dinero Dinero} for format).\n * @property {Number} defaultPrecision - The default precision for new Dinero objects (see {@link module:Dinero Dinero} for format).\n *\n * @example\n * // Will set currency to 'EUR' for all Dinero objects.\n * Dinero.defaultCurrency = 'EUR'\n *\n * @type {Object}\n */\nvar Defaults = {\n  defaultAmount: 0,\n  defaultCurrency: 'USD',\n  defaultPrecision: 2\n};\n/**\n * Global settings for all Dinero objects.\n *\n * You can override global values for all subsequent Dinero objects by changing them directly on the global `Dinero` object.\n * Existing instances won't be affected.\n *\n * @property {String}  globalLocale - The global locale for new Dinero objects (see {@link module:Dinero~setLocale setLocale} for format).\n * @property {String}  globalFormat - The global format for new Dinero objects (see {@link module:Dinero~toFormat toFormat} for format).\n * @property {String}  globalRoundingMode - The global rounding mode for new Dinero objects (see {@link module:Dinero~multiply multiply} or {@link module:Dinero~divide divide} for format).\n * @property {String}  globalFormatRoundingMode - The global rounding mode to format new Dinero objects (see {@link module:Dinero~toFormat toFormat} or {@link module:Dinero~toRoundedUnit toRoundedUnit} for format).\n * @property {(String|Promise)}  globalExchangeRatesApi.endpoint - The global exchange rate API endpoint for new Dinero objects, or the global promise that resolves to the exchanges rates (see {@link module:Dinero~convert convert} for format).\n * @property {String}  globalExchangeRatesApi.propertyPath - The global exchange rate API property path for new Dinero objects (see {@link module:Dinero~convert convert} for format).\n * @property {Object}  globalExchangeRatesApi.headers - The global exchange rate API headers for new Dinero objects (see {@link module:Dinero~convert convert} for format).\n *\n * @example\n * // Will set locale to 'fr-FR' for all Dinero objects.\n * Dinero.globalLocale = 'fr-FR'\n * @example\n * // Will set global exchange rate API parameters for all Dinero objects.\n * Dinero.globalExchangeRatesApi = {\n *  endpoint: 'https://yourexchangerates.api/latest?base={{from}}',\n *  propertyPath: 'data.rates.{{to}}',\n *  headers: {\n *    'user-key': 'xxxxxxxxx'\n *  }\n * }\n *\n * @type {Object}\n */\n\nvar Globals = {\n  globalLocale: 'en-US',\n  globalFormat: '$0,0.00',\n  globalRoundingMode: 'HALF_EVEN',\n  globalFormatRoundingMode: 'HALF_AWAY_FROM_ZERO',\n  globalExchangeRatesApi: {\n    endpoint: undefined,\n    headers: undefined,\n    propertyPath: undefined\n  }\n};\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\n * Static methods for Dinero.\n * @ignore\n *\n * @type {Object}\n */\nvar Static = {\n  /**\n   * Returns an array of Dinero objects, normalized to the same precision (the highest).\n   *\n   * @memberof module:Dinero\n   * @method\n   *\n   * @param {Dinero[]} objects - An array of Dinero objects\n   *\n   * @example\n   * // returns an array of Dinero objects\n   * // both with a precision of 3\n   * // and an amount of 1000\n   * Dinero.normalizePrecision([\n   *   Dinero({ amount: 100, precision: 2 }),\n   *   Dinero({ amount: 1000, precision: 3 })\n   * ])\n   *\n   * @return {Dinero[]}\n   */\n  normalizePrecision: function normalizePrecision(objects) {\n    var highestPrecision = objects.reduce(function (a, b) {\n      return Math.max(a.getPrecision(), b.getPrecision());\n    });\n    return objects.map(function (object) {\n      return object.getPrecision() !== highestPrecision ? object.convertPrecision(highestPrecision) : object;\n    });\n  },\n\n  /**\n   * Returns the smallest Dinero object from an array of Dinero objects\n   *\n   * @memberof module:Dinero\n   * @method\n   *\n   * @param {Dinero[]} objects - An array of Dinero objects\n   *\n   * @example\n   * // returns the smallest Dinero object with amount of 500 from an array of Dinero objects with different precisions\n   * Dinero.minimum([\n   *   Dinero({ amount: 500, precision: 3 }),\n   *   Dinero({ amount: 100, precision: 2 })\n   * ])\n   * @example\n   * // returns the smallest Dinero object with amount of 50 from an array of Dinero objects\n   * Dinero.minimum([\n   *   Dinero({ amount: 50 }),\n   *   Dinero({ amount: 100 })\n   * ])\n   *\n   * @return {Dinero[]}\n   */\n  minimum: function minimum(objects) {\n    var _objects = _toArray(objects),\n        firstObject = _objects[0],\n        tailObjects = _objects.slice(1);\n\n    var currentMinimum = firstObject;\n    tailObjects.forEach(function (obj) {\n      currentMinimum = currentMinimum.lessThan(obj) ? currentMinimum : obj;\n    });\n    return currentMinimum;\n  },\n\n  /**\n   * Returns the biggest Dinero object from an array of Dinero objects\n   *\n   * @memberof module:Dinero\n   * @method\n   *\n   * @param {Dinero[]} objects - An array of Dinero objects\n   *\n   * @example\n   * // returns the biggest Dinero object with amount of 20, from an array of Dinero objects with different precisions\n   * Dinero.maximum([\n   *   Dinero({ amount: 20, precision: 2 }),\n   *   Dinero({ amount: 150, precision: 3 })\n   * ])\n   * @example\n   * // returns the biggest Dinero object with amount of 100, from an array of Dinero objects\n   * Dinero.maximum([\n   *   Dinero({ amount: 100 }),\n   *   Dinero({ amount: 50 })\n   * ])\n   *\n   * @return {Dinero[]}\n   */\n  maximum: function maximum(objects) {\n    var _objects2 = _toArray(objects),\n        firstObject = _objects2[0],\n        tailObjects = _objects2.slice(1);\n\n    var currentMaximum = firstObject;\n    tailObjects.forEach(function (obj) {\n      currentMaximum = currentMaximum.greaterThan(obj) ? currentMaximum : obj;\n    });\n    return currentMaximum;\n  }\n};\n\n/**\n * Returns whether a value is numeric.\n * @ignore\n *\n * @param  {} value - The value to test.\n *\n * @return {Boolean}\n */\nfunction isNumeric(value) {\n  return !isNaN(parseInt(value)) && isFinite(value);\n}\n/**\n * Returns whether a value is a percentage.\n * @ignore\n *\n * @param  {}  percentage - The percentage to test.\n *\n * @return {Boolean}\n */\n\nfunction isPercentage(percentage) {\n  return isNumeric(percentage) && percentage <= 100 && percentage >= 0;\n}\n/**\n * Returns whether an array of ratios is valid.\n * @ignore\n *\n * @param  {}  ratios - The ratios to test.\n *\n * @return {Boolean}\n */\n\nfunction areValidRatios(ratios) {\n  return ratios.length > 0 && ratios.every(function (ratio) {\n    return ratio >= 0;\n  }) && ratios.some(function (ratio) {\n    return ratio > 0;\n  });\n}\n/**\n * Returns whether a value is even.\n * @ignore\n *\n * @param  {Number} value - The value to test.\n *\n * @return {Boolean}\n */\n\nfunction isEven(value) {\n  return value % 2 === 0;\n}\n/**\n * Returns whether a value is a float.\n * @ignore\n *\n * @param  {}  value - The value to test.\n *\n * @return {Boolean}\n */\n\nfunction isFloat(value) {\n  return isNumeric(value) && !Number.isInteger(value);\n}\n/**\n * Returns how many fraction digits a number has.\n * @ignore\n *\n * @param  {Number} [number=0] - The number to test.\n *\n * @return {Number}\n */\n\nfunction countFractionDigits() {\n  var number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var stringRepresentation = number.toString();\n\n  if (stringRepresentation.indexOf('e-') > 0) {\n    // It's too small for a normal string representation, e.g. 1e-7 instead of 0.00000001\n    return parseInt(stringRepresentation.split('e-')[1]);\n  } else {\n    var fractionDigits = stringRepresentation.split('.')[1];\n    return fractionDigits ? fractionDigits.length : 0;\n  }\n}\n/**\n * Returns whether a number is half.\n * @ignore\n *\n * @param {Number} number - The number to test.\n *\n * @return {Number}\n */\n\nfunction isHalf(number) {\n  return Math.abs(number) % 1 === 0.5;\n}\n/**\n * Fetches a JSON resource.\n * @ignore\n *\n * @param  {String} url - The resource to fetch.\n * @param  {Object} [options.headers] - The headers to pass.\n *\n * @throws {Error} If `request.status` is lesser than 200 or greater or equal to 400.\n * @throws {Error} If network fails.\n *\n * @return {JSON}\n */\n\nfunction getJSON(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var request = Object.assign(new XMLHttpRequest(), {\n      onreadystatechange: function onreadystatechange() {\n        if (request.readyState === 4) {\n          if (request.status >= 200 && request.status < 400) resolve(JSON.parse(request.responseText));else reject(new Error(request.statusText));\n        }\n      },\n      onerror: function onerror() {\n        reject(new Error('Network error'));\n      }\n    });\n    request.open('GET', url, true);\n    setXHRHeaders(request, options.headers);\n    request.send();\n  });\n}\n/**\n * Returns an XHR object with attached headers.\n * @ignore\n *\n * @param {XMLHttpRequest} xhr - The XHR request to set headers to.\n * @param {Object} headers - The headers to set.\n *\n * @return {XMLHttpRequest}\n */\n\nfunction setXHRHeaders(xhr) {\n  var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  for (var header in headers) {\n    xhr.setRequestHeader(header, headers[header]);\n  }\n\n  return xhr;\n}\n/**\n * Returns whether a value is undefined.\n * @ignore\n *\n * @param {} value - The value to test.\n *\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Returns an object flattened to one level deep.\n * @ignore\n *\n * @param {Object} object - The object to flatten.\n * @param {String} separator - The separator to use between flattened nodes.\n *\n * @return {Object}\n */\n\nfunction flattenObject(object) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';\n  var finalObject = {};\n  Object.entries(object).forEach(function (item) {\n    if (_typeof(item[1]) === 'object') {\n      var flatObject = flattenObject(item[1]);\n      Object.entries(flatObject).forEach(function (node) {\n        finalObject[item[0] + separator + node[0]] = node[1];\n      });\n    } else {\n      finalObject[item[0]] = item[1];\n    }\n  });\n  return finalObject;\n}\n/**\n * Returns whether a value is thenable.\n * @ignore\n *\n * @param {} value - The value to test.\n *\n * @return {Boolean}\n */\n\nfunction isThenable(value) {\n  return Boolean(value) && (_typeof(value) === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\n\nfunction Calculator() {\n  var floatMultiply = function floatMultiply(a, b) {\n    var getFactor = function getFactor(number) {\n      return Math.pow(10, countFractionDigits(number));\n    };\n\n    var factor = Math.max(getFactor(a), getFactor(b));\n    return Math.round(a * factor) * Math.round(b * factor) / (factor * factor);\n  };\n\n  var roundingModes = {\n    HALF_ODD: function HALF_ODD(number) {\n      var rounded = Math.round(number);\n      return isHalf(number) ? isEven(rounded) ? rounded - 1 : rounded : rounded;\n    },\n    HALF_EVEN: function HALF_EVEN(number) {\n      var rounded = Math.round(number);\n      return isHalf(number) ? isEven(rounded) ? rounded : rounded - 1 : rounded;\n    },\n    HALF_UP: function HALF_UP(number) {\n      return Math.round(number);\n    },\n    HALF_DOWN: function HALF_DOWN(number) {\n      return isHalf(number) ? Math.floor(number) : Math.round(number);\n    },\n    HALF_TOWARDS_ZERO: function HALF_TOWARDS_ZERO(number) {\n      return isHalf(number) ? Math.sign(number) * Math.floor(Math.abs(number)) : Math.round(number);\n    },\n    HALF_AWAY_FROM_ZERO: function HALF_AWAY_FROM_ZERO(number) {\n      return isHalf(number) ? Math.sign(number) * Math.ceil(Math.abs(number)) : Math.round(number);\n    },\n    DOWN: function DOWN(number) {\n      return Math.floor(number);\n    }\n  };\n  return {\n    /**\n     * Returns the sum of two numbers.\n     * @ignore\n     *\n     * @param {Number} a - The first number to add.\n     * @param {Number} b - The second number to add.\n     *\n     * @return {Number}\n     */\n    add: function add(a, b) {\n      return a + b;\n    },\n\n    /**\n     * Returns the difference of two numbers.\n     * @ignore\n     *\n     * @param {Number} a - The first number to subtract.\n     * @param {Number} b - The second number to subtract.\n     *\n     * @return {Number}\n     */\n    subtract: function subtract(a, b) {\n      return a - b;\n    },\n\n    /**\n     * Returns the product of two numbers.\n     * @ignore\n     *\n     * @param {Number} a - The first number to multiply.\n     * @param {Number} b - The second number to multiply.\n     *\n     * @return {Number}\n     */\n    multiply: function multiply(a, b) {\n      return isFloat(a) || isFloat(b) ? floatMultiply(a, b) : a * b;\n    },\n\n    /**\n     * Returns the quotient of two numbers.\n     * @ignore\n     *\n     * @param {Number} a - The first number to divide.\n     * @param {Number} b - The second number to divide.\n     *\n     * @return {Number}\n     */\n    divide: function divide(a, b) {\n      return a / b;\n    },\n\n    /**\n     * Returns the remainder of two numbers.\n     * @ignore\n     *\n     * @param  {Number} a - The first number to divide.\n     * @param  {Number} b - The second number to divide.\n     *\n     * @return {Number}\n     */\n    modulo: function modulo(a, b) {\n      return a % b;\n    },\n\n    /**\n     * Returns a rounded number based off a specific rounding mode.\n     * @ignore\n     *\n     * @param {Number} number - The number to round.\n     * @param {String} [roundingMode='HALF_EVEN'] - The rounding mode to use.\n     *\n     * @returns {Number}\n     */\n    round: function round(number) {\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'HALF_EVEN';\n      return roundingModes[roundingMode](number);\n    }\n  };\n}\n\nvar calculator = Calculator();\nfunction Format(format) {\n  var matches = /^(?:(\\$|USD)?0(?:(,)0)?(\\.)?(0+)?|0(?:(,)0)?(\\.)?(0+)?\\s?(dollar)?)$/gm.exec(format);\n  return {\n    /**\n     * Returns the matches.\n     * @ignore\n     *\n     * @return {Array}\n     */\n    getMatches: function getMatches() {\n      return matches !== null ? matches.slice(1).filter(function (match) {\n        return !isUndefined(match);\n      }) : [];\n    },\n\n    /**\n     * Returns the amount of fraction digits to display.\n     * @ignore\n     *\n     * @return {Number}\n     */\n    getMinimumFractionDigits: function getMinimumFractionDigits() {\n      var decimalPosition = function decimalPosition(match) {\n        return match === '.';\n      };\n\n      return !isUndefined(this.getMatches().find(decimalPosition)) ? this.getMatches()[calculator.add(this.getMatches().findIndex(decimalPosition), 1)].split('').length : 0;\n    },\n\n    /**\n     * Returns the currency display mode.\n     * @ignore\n     *\n     * @return {String}\n     */\n    getCurrencyDisplay: function getCurrencyDisplay() {\n      var modes = {\n        USD: 'code',\n        dollar: 'name',\n        $: 'symbol'\n      };\n      return modes[this.getMatches().find(function (match) {\n        return match === 'USD' || match === 'dollar' || match === '$';\n      })];\n    },\n\n    /**\n     * Returns the formatting style.\n     * @ignore\n     *\n     * @return {String}\n     */\n    getStyle: function getStyle() {\n      return !isUndefined(this.getCurrencyDisplay(this.getMatches())) ? 'currency' : 'decimal';\n    },\n\n    /**\n     * Returns whether grouping should be used or not.\n     * @ignore\n     *\n     * @return {Boolean}\n     */\n    getUseGrouping: function getUseGrouping() {\n      return !isUndefined(this.getMatches().find(function (match) {\n        return match === ',';\n      }));\n    }\n  };\n}\n\nfunction CurrencyConverter(options) {\n  /* istanbul ignore next */\n  var mergeTags = function mergeTags() {\n    var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var tags = arguments.length > 1 ? arguments[1] : undefined;\n\n    for (var tag in tags) {\n      string = string.replace(\"{{\".concat(tag, \"}}\"), tags[tag]);\n    }\n\n    return string;\n  };\n  /* istanbul ignore next */\n\n\n  var getRatesFromRestApi = function getRatesFromRestApi(from, to) {\n    return getJSON(mergeTags(options.endpoint, {\n      from: from,\n      to: to\n    }), {\n      headers: options.headers\n    });\n  };\n\n  return {\n    /**\n     * Returns the exchange rate.\n     * @ignore\n     *\n     * @param  {String} from - The base currency.\n     * @param  {String} to   - The destination currency.\n     *\n     * @return {Promise}\n     */\n    getExchangeRate: function getExchangeRate(from, to) {\n      return (isThenable(options.endpoint) ? options.endpoint : getRatesFromRestApi(from, to)).then(function (data) {\n        return flattenObject(data)[mergeTags(options.propertyPath, {\n          from: from,\n          to: to\n        })];\n      });\n    }\n  };\n}\n\n/**\n * Performs an assertion.\n * @ignore\n *\n * @param  {Boolean} condition - The expression to assert.\n * @param  {String}  errorMessage - The message to throw if the assertion fails\n * @param  {ErrorConstructor}   [ErrorType=Error] - The error to throw if the assertion fails.\n *\n * @throws {Error} If `condition` returns `false`.\n */\n\nfunction assert(condition, errorMessage) {\n  var ErrorType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Error;\n  if (!condition) throw new ErrorType(errorMessage);\n}\n/**\n * Asserts a value is a percentage.\n * @ignore\n *\n * @param  {}  percentage - The percentage to test.\n *\n * @throws {RangeError} If `percentage` is out of range.\n */\n\nfunction assertPercentage(percentage) {\n  assert(isPercentage(percentage), 'You must provide a numeric value between 0 and 100.', RangeError);\n}\n/**\n * Asserts an array of ratios is valid.\n * @ignore\n *\n * @param  {}  ratios - The ratios to test.\n *\n * @throws {TypeError} If `ratios` are invalid.\n */\n\nfunction assertValidRatios(ratios) {\n  assert(areValidRatios(ratios), 'You must provide a non-empty array of numeric values greater than 0.', TypeError);\n}\n/**\n * Asserts a value is an integer.\n * @ignore\n *\n * @param  {}  number - The value to test.\n *\n * @throws {TypeError}\n */\n\nfunction assertInteger(number) {\n  assert(Number.isInteger(number), 'You must provide an integer.', TypeError);\n}\n\nvar calculator$1 = Calculator();\n/**\n * A Dinero object is an immutable data structure representing a specific monetary value.\n * It comes with methods for creating, parsing, manipulating, testing, transforming and formatting them.\n *\n * A Dinero object has:\n *\n * * An `amount`, expressed in minor currency units, as an integer.\n * * A `currency`, expressed as an {@link https://en.wikipedia.org/wiki/ISO_4217#Active_codes ISO 4217 currency code}.\n * * A `precision`, expressed as an integer, to represent the number of decimal places in the `amount`.\n *   This is helpful when you want to represent fractional minor currency units (e.g.: $10.4545).\n *   You can also use it to represent a currency with a different [exponent](https://en.wikipedia.org/wiki/ISO_4217#Treatment_of_minor_currency_units_.28the_.22exponent.22.29) than `2` (e.g.: Iraqi dinar with 1000 fils in 1 dinar (exponent of `3`), Japanese yen with no sub-units (exponent of `0`)).\n * * An optional `locale` property that affects how output strings are formatted.\n *\n * Here's an overview of the public API:\n *\n * * **Access:** {@link module:Dinero~getAmount getAmount}, {@link module:Dinero~getCurrency getCurrency}, {@link module:Dinero~getLocale getLocale} and {@link module:Dinero~getPrecision getPrecision}.\n * * **Manipulation:** {@link module:Dinero~add add}, {@link module:Dinero~subtract subtract}, {@link module:Dinero~multiply multiply}, {@link module:Dinero~divide divide}, {@link module:Dinero~percentage percentage}, {@link module:Dinero~allocate allocate} and {@link module:Dinero~convert convert}.\n * * **Testing:** {@link module:Dinero~equalsTo equalsTo}, {@link module:Dinero~lessThan lessThan}, {@link module:Dinero~lessThanOrEqual lessThanOrEqual}, {@link module:Dinero~greaterThan greaterThan}, {@link module:Dinero~greaterThanOrEqual greaterThanOrEqual}, {@link module:Dinero~isZero isZero}, {@link module:Dinero~isPositive isPositive}, {@link module:Dinero~isNegative isNegative}, {@link module:Dinero~hasSubUnits hasSubUnits}, {@link module:Dinero~hasSameCurrency hasSameCurrency} and {@link module:Dinero~hasSameAmount hasSameAmount}.\n * * **Configuration:** {@link module:Dinero~setLocale setLocale}.\n * * **Conversion & formatting:** {@link module:Dinero~toFormat toFormat}, {@link module:Dinero~toUnit toUnit}, {@link module:Dinero~toRoundedUnit toRoundedUnit}, {@link module:Dinero~toObject toObject}, {@link module:Dinero~toJSON toJSON}, {@link module:Dinero~convertPrecision convertPrecision} and {@link module:Dinero.normalizePrecision normalizePrecision}.\n *\n * Dinero.js uses `number`s under the hood, so it's constrained by the [double-precision floating-point format](https://en.wikipedia.org/wiki/Double-precision_floating-point_format). Using values over [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Number/MAX_SAFE_INTEGER) or below [`Number.MIN_SAFE_INTEGER`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Number/MIN_SAFE_INTEGER) will yield unpredictable results.\n * Same goes with performing calculations: once the internal `amount` value exceeds those limits, precision is no longer guaranteed.\n *\n * @module Dinero\n * @param  {Number} [options.amount=0] - The amount in minor currency units (as an integer).\n * @param  {String} [options.currency='USD'] - An ISO 4217 currency code.\n * @param  {String} [options.precision=2] - The number of decimal places to represent.\n *\n * @throws {TypeError} If `amount` or `precision` is invalid. Integers over [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Number/MAX_SAFE_INTEGER) or below [`Number.MIN_SAFE_INTEGER`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Number/MIN_SAFE_INTEGER) are considered valid, even though they can lead to imprecise amounts.\n *\n * @return {Object}\n */\n\nvar Dinero = function Dinero(options) {\n  var _Object$assign = Object.assign({}, {\n    amount: Dinero.defaultAmount,\n    currency: Dinero.defaultCurrency,\n    precision: Dinero.defaultPrecision\n  }, options),\n      amount = _Object$assign.amount,\n      currency = _Object$assign.currency,\n      precision = _Object$assign.precision;\n\n  assertInteger(amount);\n  assertInteger(precision);\n  var globalLocale = Dinero.globalLocale,\n      globalFormat = Dinero.globalFormat,\n      globalRoundingMode = Dinero.globalRoundingMode,\n      globalFormatRoundingMode = Dinero.globalFormatRoundingMode;\n  var globalExchangeRatesApi = Object.assign({}, Dinero.globalExchangeRatesApi);\n  /**\n   * Uses ES5 function notation so `this` can be passed through call, apply and bind\n   * @ignore\n   */\n\n  var create = function create(options) {\n    var obj = Object.assign({}, Object.assign({}, {\n      amount: amount,\n      currency: currency,\n      precision: precision\n    }, options), Object.assign({}, {\n      locale: this.locale\n    }, options));\n    return Object.assign(Dinero({\n      amount: obj.amount,\n      currency: obj.currency,\n      precision: obj.precision\n    }), {\n      locale: obj.locale\n    });\n  };\n  /**\n   * Uses ES5 function notation so `this` can be passed through call, apply and bind\n   * @ignore\n   */\n\n\n  var assertSameCurrency = function assertSameCurrency(comparator) {\n    assert(this.hasSameCurrency(comparator), 'You must provide a Dinero instance with the same currency.', TypeError);\n  };\n\n  return {\n    /**\n     * Returns the amount.\n     *\n     * @example\n     * // returns 500\n     * Dinero({ amount: 500 }).getAmount()\n     *\n     * @return {Number}\n     */\n    getAmount: function getAmount() {\n      return amount;\n    },\n\n    /**\n     * Returns the currency.\n     *\n     * @example\n     * // returns 'EUR'\n     * Dinero({ currency: 'EUR' }).getCurrency()\n     *\n     * @return {String}\n     */\n    getCurrency: function getCurrency() {\n      return currency;\n    },\n\n    /**\n     * Returns the locale.\n     *\n     * @example\n     * // returns 'fr-FR'\n     * Dinero().setLocale('fr-FR').getLocale()\n     *\n     * @return {String}\n     */\n    getLocale: function getLocale() {\n      return this.locale || globalLocale;\n    },\n\n    /**\n     * Returns a new Dinero object with an embedded locale.\n     *\n     * @param {String} newLocale - The new locale as an {@link http://tools.ietf.org/html/rfc5646 BCP 47 language tag}.\n     *\n     * @example\n     * // Returns a Dinero object with locale 'ja-JP'\n     * Dinero().setLocale('ja-JP')\n     *\n     * @return {Dinero}\n     */\n    setLocale: function setLocale(newLocale) {\n      return create.call(this, {\n        locale: newLocale\n      });\n    },\n\n    /**\n     * Returns the precision.\n     *\n     * @example\n     * // returns 3\n     * Dinero({ precision: 3 }).getPrecision()\n     *\n     * @return {Number}\n     */\n    getPrecision: function getPrecision() {\n      return precision;\n    },\n\n    /**\n     * Returns a new Dinero object with a new precision and a converted amount.\n     *\n     * By default, fractional minor currency units are rounded using the **half to even** rule ([banker's rounding](http://wiki.c2.com/?BankersRounding)).\n     * This can be necessary when you need to convert objects to a smaller precision.\n     *\n     * Rounding *can* lead to accuracy issues as you chain many times. Consider a minimal amount of subsequent conversions for safer results.\n     * You can also specify a different `roundingMode` to better fit your needs.\n     *\n     * @param {Number} newPrecision - The new precision.\n     * @param {String} [roundingMode='HALF_EVEN'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @example\n     * // Returns a Dinero object with precision 3 and amount 1000\n     * Dinero({ amount: 100, precision: 2 }).convertPrecision(3)\n     *\n     * @throws {TypeError} If `newPrecision` is invalid.\n     *\n     * @return {Dinero}\n     */\n    convertPrecision: function convertPrecision(newPrecision) {\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalFormatRoundingMode;\n      assertInteger(newPrecision);\n      var precision = this.getPrecision();\n      var isNewPrecisionLarger = newPrecision > precision;\n      var operation = isNewPrecisionLarger ? calculator$1.multiply : calculator$1.divide;\n      var terms = isNewPrecisionLarger ? [newPrecision, precision] : [precision, newPrecision];\n      var factor = Math.pow(10, calculator$1.subtract.apply(calculator$1, terms));\n      return create.call(this, {\n        amount: calculator$1.round(operation(this.getAmount(), factor), roundingMode),\n        precision: newPrecision\n      });\n    },\n\n    /**\n     * Returns a new Dinero object that represents the sum of this and an other Dinero object.\n     *\n     * If Dinero objects have a different `precision`, they will be first converted to the highest.\n     *\n     * @param {Dinero} addend - The Dinero object to add.\n     *\n     * @example\n     * // returns a Dinero object with amount 600\n     * Dinero({ amount: 400 }).add(Dinero({ amount: 200 }))\n     * @example\n     * // returns a Dinero object with amount 144545 and precision 4\n     * Dinero({ amount: 400 }).add(Dinero({ amount: 104545, precision: 4 }))\n     *\n     * @throws {TypeError} If `addend` has a different currency.\n     *\n     * @return {Dinero}\n     */\n    add: function add(addend) {\n      assertSameCurrency.call(this, addend);\n      var addends = Dinero.normalizePrecision([this, addend]);\n      return create.call(this, {\n        amount: calculator$1.add(addends[0].getAmount(), addends[1].getAmount()),\n        precision: addends[0].getPrecision()\n      });\n    },\n\n    /**\n     * Returns a new Dinero object that represents the difference of this and an other Dinero object.\n     *\n     * If Dinero objects have a different `precision`, they will be first converted to the highest.\n     *\n     * @param  {Dinero} subtrahend - The Dinero object to subtract.\n     *\n     * @example\n     * // returns a Dinero object with amount 200\n     * Dinero({ amount: 400 }).subtract(Dinero({ amount: 200 }))\n     * @example\n     * // returns a Dinero object with amount 64545 and precision 4\n     * Dinero({ amount: 104545, precision: 4 }).subtract(Dinero({ amount: 400 }))\n     *\n     * @throws {TypeError} If `subtrahend` has a different currency.\n     *\n     * @return {Dinero}\n     */\n    subtract: function subtract(subtrahend) {\n      assertSameCurrency.call(this, subtrahend);\n      var subtrahends = Dinero.normalizePrecision([this, subtrahend]);\n      return create.call(this, {\n        amount: calculator$1.subtract(subtrahends[0].getAmount(), subtrahends[1].getAmount()),\n        precision: subtrahends[0].getPrecision()\n      });\n    },\n\n    /**\n     * Returns a new Dinero object that represents the multiplied value by the given factor.\n     *\n     * By default, fractional minor currency units are rounded using the **half to even** rule ([banker's rounding](http://wiki.c2.com/?BankersRounding)).\n     *\n     * Rounding *can* lead to accuracy issues as you chain many times. Consider a minimal amount of subsequent calculations for safer results.\n     * You can also specify a different `roundingMode` to better fit your needs.\n     *\n     * @param  {Number} multiplier - The factor to multiply by.\n     * @param  {String} [roundingMode='HALF_EVEN'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @example\n     * // returns a Dinero object with amount 1600\n     * Dinero({ amount: 400 }).multiply(4)\n     * @example\n     * // returns a Dinero object with amount 800\n     * Dinero({ amount: 400 }).multiply(2.001)\n     * @example\n     * // returns a Dinero object with amount 801\n     * Dinero({ amount: 400 }).multiply(2.00125, 'HALF_UP')\n     *\n     * @return {Dinero}\n     */\n    multiply: function multiply(multiplier) {\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalRoundingMode;\n      return create.call(this, {\n        amount: calculator$1.round(calculator$1.multiply(this.getAmount(), multiplier), roundingMode)\n      });\n    },\n\n    /**\n     * Returns a new Dinero object that represents the divided value by the given factor.\n     *\n     * By default, fractional minor currency units are rounded using the **half to even** rule ([banker's rounding](http://wiki.c2.com/?BankersRounding)).\n     *\n     * Rounding *can* lead to accuracy issues as you chain many times. Consider a minimal amount of subsequent calculations for safer results.\n     * You can also specify a different `roundingMode` to better fit your needs.\n     *\n     * As rounding is applied, precision may be lost in the process. If you want to accurately split a Dinero object, use {@link module:Dinero~allocate allocate} instead.\n     *\n     * @param  {Number} divisor - The factor to divide by.\n     * @param  {String} [roundingMode='HALF_EVEN'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @example\n     * // returns a Dinero object with amount 100\n     * Dinero({ amount: 400 }).divide(4)\n     * @example\n     * // returns a Dinero object with amount 52\n     * Dinero({ amount: 105 }).divide(2)\n     * @example\n     * // returns a Dinero object with amount 53\n     * Dinero({ amount: 105 }).divide(2, 'HALF_UP')\n     *\n     * @return {Dinero}\n     */\n    divide: function divide(divisor) {\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalRoundingMode;\n      return create.call(this, {\n        amount: calculator$1.round(calculator$1.divide(this.getAmount(), divisor), roundingMode)\n      });\n    },\n\n    /**\n     * Returns a new Dinero object that represents a percentage of this.\n     *\n     * As rounding is applied, precision may be lost in the process. If you want to accurately split a Dinero object, use {@link module:Dinero~allocate allocate} instead.\n     *\n     * @param  {Number} percentage - The percentage to extract (between 0 and 100).\n     * @param  {String} [roundingMode='HALF_EVEN'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @example\n     * // returns a Dinero object with amount 5000\n     * Dinero({ amount: 10000 }).percentage(50)\n     * @example\n     * // returns a Dinero object with amount 29\n     * Dinero({ amount: 57 }).percentage(50, \"HALF_ODD\")\n     *\n     * @throws {RangeError} If `percentage` is out of range.\n     *\n     * @return {Dinero}\n     */\n    percentage: function percentage(_percentage) {\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalRoundingMode;\n      assertPercentage(_percentage);\n      return this.multiply(calculator$1.divide(_percentage, 100), roundingMode);\n    },\n\n    /**\n     * Allocates the amount of a Dinero object according to a list of ratios.\n     *\n     * Sometimes you need to split monetary values but percentages can't cut it without adding or losing pennies.\n     * A good example is invoicing: let's say you need to bill $1,000.03 and you want a 50% downpayment.\n     * If you use {@link module:Dinero~percentage percentage}, you'll get an accurate Dinero object but the amount won't be billable: you can't split a penny.\n     * If you round it, you'll bill a penny extra.\n     * With {@link module:Dinero~allocate allocate}, you can split a monetary amount then distribute the remainder as evenly as possible.\n     *\n     * You can use percentage style or ratio style for `ratios`: `[25, 75]` and `[1, 3]` will do the same thing.\n     *\n     * Since v1.8.0, you can use zero ratios (such as [0, 50, 50]). If there's a remainder to distribute, zero ratios are skipped and return a Dinero object with amount zero.\n     *\n     * @param  {Number[]} ratios - The ratios to allocate the money to.\n     *\n     * @example\n     * // returns an array of two Dinero objects\n     * // the first one with an amount of 502\n     * // the second one with an amount of 501\n     * Dinero({ amount: 1003 }).allocate([50, 50])\n     * @example\n     * // returns an array of two Dinero objects\n     * // the first one with an amount of 25\n     * // the second one with an amount of 75\n     * Dinero({ amount: 100 }).allocate([1, 3])\n     * @example\n     * // since version 1.8.0\n     * // returns an array of three Dinero objects\n     * // the first one with an amount of 0\n     * // the second one with an amount of 502\n     * // the third one with an amount of 501\n     * Dinero({ amount: 1003 }).allocate([0, 50, 50])\n     *\n     * @throws {TypeError} If ratios are invalid.\n     *\n     * @return {Dinero[]}\n     */\n    allocate: function allocate(ratios) {\n      var _this = this;\n\n      assertValidRatios(ratios);\n      var total = ratios.reduce(function (a, b) {\n        return calculator$1.add(a, b);\n      });\n      var remainder = this.getAmount();\n      var shares = ratios.map(function (ratio) {\n        var share = Math.floor(calculator$1.divide(calculator$1.multiply(_this.getAmount(), ratio), total));\n        remainder = calculator$1.subtract(remainder, share);\n        return create.call(_this, {\n          amount: share\n        });\n      });\n      var i = 0;\n\n      while (remainder > 0) {\n        if (ratios[i] > 0) {\n          shares[i] = shares[i].add(create.call(this, {\n            amount: 1\n          }));\n          remainder = calculator$1.subtract(remainder, 1);\n        }\n\n        i += 1;\n      }\n\n      return shares;\n    },\n\n    /**\n     * Returns a Promise containing a new Dinero object converted to another currency.\n     *\n     * You have two options to provide the exchange rates:\n     *\n     * 1. **Use an exchange rate REST API, and let Dinero handle the fetching and conversion.**\n     *   This is a simple option if you have access to an exchange rate REST API and want Dinero to do the rest.\n     * 2. **Fetch the exchange rates on your own and provide them directly.**\n     *   This is useful if you're fetching your rates from somewhere else (a file, a database), use a different protocol or query language than REST (SOAP, GraphQL) or want to fetch rates once and cache them instead of making new requests every time.\n     *\n     * **If you want to use a REST API**, you must provide a third-party endpoint yourself. Dinero doesn't come bundled with an exchange rates endpoint.\n     *\n     * Here are some exchange rate APIs you can use:\n     *\n     * * [Fixer](https://fixer.io)\n     * * [Open Exchange Rates](https://openexchangerates.org)\n     * * [Coinbase](https://api.coinbase.com/v2/exchange-rates)\n     * * More [foreign](https://github.com/toddmotto/public-apis#currency-exchange) and [crypto](https://github.com/toddmotto/public-apis#cryptocurrency) exchange rate APIs.\n     *\n     * **If you want to fetch your own rates and provide them directly**, you need to pass a promise that resolves to the exchanges rates.\n     *\n     * In both cases, you need to specify at least:\n     *\n     * * a **destination currency**: the currency in which you want to convert your Dinero object. You can specify it with `currency`.\n     * * an **endpoint**: the API URL to query exchange rates, with parameters, or a promise that resolves to the exchange rates. You can specify it with `options.endpoint`.\n     * * a **property path**: the path to access the wanted rate in your API's JSON response (or the custom promise's payload). For example, with a response of:\n     * ```json\n     * {\n     *     \"data\": {\n     *       \"base\": \"USD\",\n     *       \"destination\": \"EUR\",\n     *       \"rate\": \"0.827728919\"\n     *     }\n     * }\n     * ```\n     * Then the property path is `'data.rate'`. You can specify it with `options.propertyPath`.\n     *\n     * The base currency (the one of your Dinero object) and the destination currency can be used as \"merge tags\" with the mustache syntax, respectively `{{from}}` and `{{to}}`.\n     * You can use these tags to refer to these values in `options.endpoint` and `options.propertyPath`.\n     *\n     * For example, if you need to specify the base currency as a query parameter, you can do the following:\n     *\n     * ```js\n     * {\n     *   endpoint: 'https://yourexchangerates.api/latest?base={{from}}'\n     * }\n     * ```\n     *\n     * @param  {String} currency - The destination currency, expressed as an {@link https://en.wikipedia.org/wiki/ISO_4217#Active_codes ISO 4217 currency code}.\n     * @param  {(String|Promise)} options.endpoint - The API endpoint to retrieve exchange rates. You can substitute this with a promise that resolves to the exchanges rates if you already have them.\n     * @param  {String} [options.propertyPath='rates.{{to}}'] - The property path to the rate.\n     * @param  {Object} [options.headers] - The HTTP headers to provide, if needed.\n     * @param  {String} [options.roundingMode='HALF_EVEN'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @example\n     * // your global API parameters\n     * Dinero.globalExchangeRatesApi = { ... }\n     *\n     * // returns a Promise containing a Dinero object with the destination currency\n     * // and the initial amount converted to the new currency.\n     * Dinero({ amount: 500 }).convert('EUR')\n     * @example\n     * // returns a Promise containing a Dinero object,\n     * // with specific API parameters and rounding mode for this specific instance.\n     * Dinero({ amount: 500 })\n     *   .convert('XBT', {\n     *     endpoint: 'https://yourexchangerates.api/latest?base={{from}}',\n     *     propertyPath: 'data.rates.{{to}}',\n     *     headers: {\n     *       'user-key': 'xxxxxxxxx'\n     *     },\n     *     roundingMode: 'HALF_UP'\n     *   })\n     * @example\n     * // usage with exchange rates provided as a custom promise\n     * // using the default `propertyPath` format (so it doesn't have to be specified)\n     * const rates = {\n     *   rates: {\n     *     EUR: 0.81162\n     *   }\n     * }\n     *\n     * Dinero({ amount: 500 })\n     *   .convert('EUR', {\n     *     endpoint: new Promise(resolve => resolve(rates))\n     *   })\n     * @example\n     * // usage with Promise.prototype.then and Promise.prototype.catch\n     * Dinero({ amount: 500 })\n     *   .convert('EUR')\n     *   .then(dinero => {\n     *     dinero.getCurrency() // returns 'EUR'\n     *   })\n     *   .catch(err => {\n     *     // handle errors\n     *   })\n     * @example\n     * // usage with async/await\n     * (async () => {\n     *   const price = await Dinero({ amount: 500 }).convert('EUR')\n     *   price.getCurrency() // returns 'EUR'\n     * })()\n     *\n     * @return {Promise}\n     */\n    convert: function convert(currency) {\n      var _this2 = this;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$endpoint = _ref.endpoint,\n          endpoint = _ref$endpoint === void 0 ? globalExchangeRatesApi.endpoint : _ref$endpoint,\n          _ref$propertyPath = _ref.propertyPath,\n          propertyPath = _ref$propertyPath === void 0 ? globalExchangeRatesApi.propertyPath || 'rates.{{to}}' : _ref$propertyPath,\n          _ref$headers = _ref.headers,\n          headers = _ref$headers === void 0 ? globalExchangeRatesApi.headers : _ref$headers,\n          _ref$roundingMode = _ref.roundingMode,\n          roundingMode = _ref$roundingMode === void 0 ? globalRoundingMode : _ref$roundingMode;\n\n      var options = Object.assign({}, {\n        endpoint: endpoint,\n        propertyPath: propertyPath,\n        headers: headers,\n        roundingMode: roundingMode\n      });\n      return CurrencyConverter(options).getExchangeRate(this.getCurrency(), currency).then(function (rate) {\n        assert(!isUndefined(rate), \"No rate was found for the destination currency \\\"\".concat(currency, \"\\\".\"), TypeError);\n        return create.call(_this2, {\n          amount: calculator$1.round(calculator$1.multiply(_this2.getAmount(), parseFloat(rate)), options.roundingMode),\n          currency: currency\n        });\n      });\n    },\n\n    /**\n     * Checks whether the value represented by this object equals to the other.\n     *\n     * @param  {Dinero} comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 500, currency: 'EUR' }).equalsTo(Dinero({ amount: 500, currency: 'EUR' }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 500, currency: 'EUR' }).equalsTo(Dinero({ amount: 800, currency: 'EUR' }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 500, currency: 'USD' }).equalsTo(Dinero({ amount: 500, currency: 'EUR' }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 500, currency: 'USD' }).equalsTo(Dinero({ amount: 800, currency: 'EUR' }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 1000, currency: 'EUR', precision: 2 }).equalsTo(Dinero({ amount: 10000, currency: 'EUR', precision: 3 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 10000, currency: 'EUR', precision: 2 }).equalsTo(Dinero({ amount: 10000, currency: 'EUR', precision: 3 }))\n     *\n     * @return {Boolean}\n     */\n    equalsTo: function equalsTo(comparator) {\n      return this.hasSameAmount(comparator) && this.hasSameCurrency(comparator);\n    },\n\n    /**\n     * Checks whether the value represented by this object is less than the other.\n     *\n     * @param  {Dinero} comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 500 }).lessThan(Dinero({ amount: 800 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 800 }).lessThan(Dinero({ amount: 500 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 5000, precision: 3 }).lessThan(Dinero({ amount: 800 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 800 }).lessThan(Dinero({ amount: 5000, precision: 3 }))\n     *\n     * @throws {TypeError} If `comparator` has a different currency.\n     *\n     * @return {Boolean}\n     */\n    lessThan: function lessThan(comparator) {\n      assertSameCurrency.call(this, comparator);\n      var comparators = Dinero.normalizePrecision([this, comparator]);\n      return comparators[0].getAmount() < comparators[1].getAmount();\n    },\n\n    /**\n     * Checks whether the value represented by this object is less than or equal to the other.\n     *\n     * @param  {Dinero} comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 500 }).lessThanOrEqual(Dinero({ amount: 800 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 500 }).lessThanOrEqual(Dinero({ amount: 500 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 500 }).lessThanOrEqual(Dinero({ amount: 300 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 5000, precision: 3 }).lessThanOrEqual(Dinero({ amount: 800 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 5000, precision: 3 }).lessThanOrEqual(Dinero({ amount: 500 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 800 }).lessThanOrEqual(Dinero({ amount: 5000, precision: 3 }))\n     *\n     * @throws {TypeError} If `comparator` has a different currency.\n     *\n     * @return {Boolean}\n     */\n    lessThanOrEqual: function lessThanOrEqual(comparator) {\n      assertSameCurrency.call(this, comparator);\n      var comparators = Dinero.normalizePrecision([this, comparator]);\n      return comparators[0].getAmount() <= comparators[1].getAmount();\n    },\n\n    /**\n     * Checks whether the value represented by this object is greater than the other.\n     *\n     * @param  {Dinero} comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns false\n     * Dinero({ amount: 500 }).greaterThan(Dinero({ amount: 800 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 800 }).greaterThan(Dinero({ amount: 500 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 800 }).greaterThan(Dinero({ amount: 5000, precision: 3 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 5000, precision: 3 }).greaterThan(Dinero({ amount: 800 }))\n     *\n     * @throws {TypeError} If `comparator` has a different currency.\n     *\n     * @return {Boolean}\n     */\n    greaterThan: function greaterThan(comparator) {\n      assertSameCurrency.call(this, comparator);\n      var comparators = Dinero.normalizePrecision([this, comparator]);\n      return comparators[0].getAmount() > comparators[1].getAmount();\n    },\n\n    /**\n     * Checks whether the value represented by this object is greater than or equal to the other.\n     *\n     * @param  {Dinero} comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 500 }).greaterThanOrEqual(Dinero({ amount: 300 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 500 }).greaterThanOrEqual(Dinero({ amount: 500 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 500 }).greaterThanOrEqual(Dinero({ amount: 800 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 800 }).greaterThanOrEqual(Dinero({ amount: 5000, precision: 3 }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 500 }).greaterThanOrEqual(Dinero({ amount: 5000, precision: 3 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 5000, precision: 3 }).greaterThanOrEqual(Dinero({ amount: 800 }))\n     *\n     * @throws {TypeError} If `comparator` has a different currency.\n     *\n     * @return {Boolean}\n     */\n    greaterThanOrEqual: function greaterThanOrEqual(comparator) {\n      assertSameCurrency.call(this, comparator);\n      var comparators = Dinero.normalizePrecision([this, comparator]);\n      return comparators[0].getAmount() >= comparators[1].getAmount();\n    },\n\n    /**\n     * Checks if the value represented by this object is zero.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 0 }).isZero()\n     * @example\n     * // returns false\n     * Dinero({ amount: 100 }).isZero()\n     *\n     * @return {Boolean}\n     */\n    isZero: function isZero() {\n      return this.getAmount() === 0;\n    },\n\n    /**\n     * Checks if the value represented by this object is positive.\n     *\n     * @example\n     * // returns false\n     * Dinero({ amount: -10 }).isPositive()\n     * @example\n     * // returns true\n     * Dinero({ amount: 10 }).isPositive()\n     * @example\n     * // returns true\n     * Dinero({ amount: 0 }).isPositive()\n     *\n     * @return {Boolean}\n     */\n    isPositive: function isPositive() {\n      return this.getAmount() >= 0;\n    },\n\n    /**\n     * Checks if the value represented by this object is negative.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: -10 }).isNegative()\n     * @example\n     * // returns false\n     * Dinero({ amount: 10 }).isNegative()\n     * @example\n     * // returns false\n     * Dinero({ amount: 0 }).isNegative()\n     *\n     * @return {Boolean}\n     */\n    isNegative: function isNegative() {\n      return this.getAmount() < 0;\n    },\n\n    /**\n     * Checks if this has minor currency units.\n     * Deprecates {@link module:Dinero~hasCents hasCents}.\n     *\n     * @example\n     * // returns false\n     * Dinero({ amount: 1100 }).hasSubUnits()\n     * @example\n     * // returns true\n     * Dinero({ amount: 1150 }).hasSubUnits()\n     *\n     * @return {Boolean}\n     */\n    hasSubUnits: function hasSubUnits() {\n      return calculator$1.modulo(this.getAmount(), Math.pow(10, precision)) !== 0;\n    },\n\n    /**\n     * Checks if this has minor currency units.\n     *\n     * @deprecated since version 1.4.0, will be removed in 2.0.0\n     * Use {@link module:Dinero~hasSubUnits hasSubUnits} instead.\n     *\n     * @example\n     * // returns false\n     * Dinero({ amount: 1100 }).hasCents()\n     * @example\n     * // returns true\n     * Dinero({ amount: 1150 }).hasCents()\n     *\n     * @return {Boolean}\n     */\n    hasCents: function hasCents() {\n      return calculator$1.modulo(this.getAmount(), Math.pow(10, precision)) !== 0;\n    },\n\n    /**\n     * Checks whether the currency represented by this object equals to the other.\n     *\n     * @param  {Dinero}  comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 2000, currency: 'EUR' }).hasSameCurrency(Dinero({ amount: 1000, currency: 'EUR' }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 1000, currency: 'EUR' }).hasSameCurrency(Dinero({ amount: 1000, currency: 'USD' }))\n     *\n     * @return {Boolean}\n     */\n    hasSameCurrency: function hasSameCurrency(comparator) {\n      return this.getCurrency() === comparator.getCurrency();\n    },\n\n    /**\n     * Checks whether the amount represented by this object equals to the other.\n     *\n     * @param  {Dinero}  comparator - The Dinero object to compare to.\n     *\n     * @example\n     * // returns true\n     * Dinero({ amount: 1000, currency: 'EUR' }).hasSameAmount(Dinero({ amount: 1000 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 2000, currency: 'EUR' }).hasSameAmount(Dinero({ amount: 1000, currency: 'EUR' }))\n     * @example\n     * // returns true\n     * Dinero({ amount: 1000, currency: 'EUR', precision: 2 }).hasSameAmount(Dinero({ amount: 10000, precision: 3 }))\n     * @example\n     * // returns false\n     * Dinero({ amount: 10000, currency: 'EUR', precision: 2 }).hasSameAmount(Dinero({ amount: 10000, precision: 3 }))\n     *\n     * @return {Boolean}\n     */\n    hasSameAmount: function hasSameAmount(comparator) {\n      var comparators = Dinero.normalizePrecision([this, comparator]);\n      return comparators[0].getAmount() === comparators[1].getAmount();\n    },\n\n    /**\n     * Returns this object formatted as a string.\n     *\n     * The format is a mask which defines how the output string will be formatted.\n     * It defines whether to display a currency, in what format, how many fraction digits to display and whether to use grouping separators.\n     * The output is formatted according to the applying locale.\n     *\n     * Object                       | Format            | String\n     * :--------------------------- | :---------------- | :---\n     * `Dinero({ amount: 500050 })` | `'$0,0.00'`       | $5,000.50\n     * `Dinero({ amount: 500050 })` | `'$0,0'`          | $5,001\n     * `Dinero({ amount: 500050 })` | `'$0'`            | $5001\n     * `Dinero({ amount: 500050 })` | `'$0.0'`          | $5000.5\n     * `Dinero({ amount: 500050 })` | `'USD0,0.0'`      | USD5,000.5\n     * `Dinero({ amount: 500050 })` | `'0,0.0 dollar'`  | 5,000.5 dollars\n     *\n     * Don't try to substitute the `$` sign or the `USD` code with your target currency, nor adapt the format string to the exact format you want.\n     * The format is a mask which defines a pattern and returns a valid, localized currency string.\n     * If you want to display the object in a custom way, either use {@link module:Dinero~getAmount getAmount}, {@link module:Dinero~toUnit toUnit} or {@link module:Dinero~toRoundedUnit toRoundedUnit} and manipulate the output string as you wish.\n     *\n     * {@link module:Dinero~toFormat toFormat} wraps around `Number.prototype.toLocaleString`. For that reason, **format will vary depending on how it's implemented in the end user's environment**.\n     *\n     * You can also use `toLocaleString` directly:\n     * `Dinero().toRoundedUnit(digits, roundingMode).toLocaleString(locale, options)`.\n     *\n     * By default, amounts are rounded using the **half away from zero** rule ([commercial rounding](https://en.wikipedia.org/wiki/Rounding#Round_half_away_from_zero)).\n     * You can also specify a different `roundingMode` to better fit your needs.\n     *\n     * @param  {String} [format='$0,0.00'] - The format mask to format to.\n     * @param  {String} [roundingMode='HALF_AWAY_FROM_ZERO'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @example\n     * // returns $2,000\n     * Dinero({ amount: 200000 }).toFormat('$0,0')\n     * @example\n     * // returns \u20AC50.5\n     * Dinero({ amount: 5050, currency: 'EUR' }).toFormat('$0,0.0')\n     * @example\n     * // returns 100 euros\n     * Dinero({ amount: 10000, currency: 'EUR' }).setLocale('fr-FR').toFormat('0,0 dollar')\n     * @example\n     * // returns 2000\n     * Dinero({ amount: 200000, currency: 'EUR' }).toFormat()\n     * @example\n     * // returns $10\n     * Dinero({ amount: 1050 }).toFormat('$0', 'HALF_EVEN')\n     *\n     * @return {String}\n     */\n    toFormat: function toFormat() {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalFormat;\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalFormatRoundingMode;\n      var formatter = Format(format);\n      return this.toRoundedUnit(formatter.getMinimumFractionDigits(), roundingMode).toLocaleString(this.getLocale(), {\n        currencyDisplay: formatter.getCurrencyDisplay(),\n        useGrouping: formatter.getUseGrouping(),\n        minimumFractionDigits: formatter.getMinimumFractionDigits(),\n        style: formatter.getStyle(),\n        currency: this.getCurrency()\n      });\n    },\n\n    /**\n     * Returns the amount represented by this object in units.\n     *\n     * @example\n     * // returns 10.5\n     * Dinero({ amount: 1050 }).toUnit()\n     * @example\n     * // returns 10.545\n     * Dinero({ amount: 10545, precision: 3 }).toUnit()\n     *\n     * @return {Number}\n     */\n    toUnit: function toUnit() {\n      return calculator$1.divide(this.getAmount(), Math.pow(10, precision));\n    },\n\n    /**\n     * Returns the amount represented by this object in rounded units.\n     *\n     * By default, the method uses the **half away from zero** rule ([commercial rounding](https://en.wikipedia.org/wiki/Rounding#Round_half_away_from_zero)).\n     * You can also specify a different `roundingMode` to better fit your needs.\n     *\n     * @example\n     * // returns 10.6\n     * Dinero({ amount: 1055 }).toRoundedUnit(1)\n     * @example\n     * // returns 10\n     * Dinero({ amount: 1050 }).toRoundedUnit(0, 'HALF_EVEN')\n     *\n     * @param  {Number} digits - The number of fraction digits to round to.\n     * @param  {String} [roundingMode='HALF_AWAY_FROM_ZERO'] - The rounding mode to use: `'HALF_ODD'`, `'HALF_EVEN'`, `'HALF_UP'`, `'HALF_DOWN'`, `'HALF_TOWARDS_ZERO'`, `'HALF_AWAY_FROM_ZERO'` or `'DOWN'`.\n     *\n     * @return {Number}\n     */\n    toRoundedUnit: function toRoundedUnit(digits) {\n      var roundingMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalFormatRoundingMode;\n      var factor = Math.pow(10, digits);\n      return calculator$1.divide(calculator$1.round(calculator$1.multiply(this.toUnit(), factor), roundingMode), factor);\n    },\n\n    /**\n     * Returns the object's data as an object literal.\n     *\n     * @example\n     * // returns { amount: 500, currency: 'EUR', precision: 2 }\n     * Dinero({ amount: 500, currency: 'EUR', precision: 2 }).toObject()\n     *\n     * @return {Object}\n     */\n    toObject: function toObject() {\n      return {\n        amount: amount,\n        currency: currency,\n        precision: precision\n      };\n    },\n\n    /**\n     * Returns the object's data as an object literal.\n     *\n     * Alias of {@link module:Dinero~toObject toObject}.\n     * It is defined so that calling `JSON.stringify` on a Dinero object will automatically extract the relevant data.\n     *\n     * @example\n     * // returns '{\"amount\":500,\"currency\":\"EUR\",\"precision\":2}'\n     * JSON.stringify(Dinero({ amount: 500, currency: 'EUR', precision: 2 }))\n     *\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return this.toObject();\n    }\n  };\n};\n\nvar dinero = Object.assign(Dinero, Defaults, Globals, Static);\n\nexport default dinero;\n", "import Dinero from 'dinero.js';\n\n// Configure Dinero.js for USD\n// Note: Dinero.js doesn't have defaultCurrency/defaultPrecision properties\n// We'll handle currency and precision in individual Dinero objects\n\n/**\n * Represents a monetary value with proper handling of trailing zeros\n */\nexport interface MonetaryValue {\n  amount: number; // Amount in cents (e.g., 12300 for $123.00)\n  currency: string; // Currency code (e.g., 'USD')\n}\n\n/**\n * Parse a monetary string (e.g., \"$123.00\", \"123\", \"123.00\") into a MonetaryValue\n */\nexport function parseMonetaryString(value: string): MonetaryValue | null {\n  // Remove currency symbols and whitespace, but handle commas carefully\n  let cleaned = value.replace(/[$\\s]/g, '');\n  \n  // Handle empty or invalid strings\n  if (!cleaned || cleaned === '') {\n    return null;\n  }\n  \n  // Remove commas as thousands separators (like \"1,234.56\")\n  // For US/Canadian/Australian/New Zealand users, commas are only thousands separators\n  cleaned = cleaned.replace(/,/g, '');\n  \n  // Parse as float\n  const parsed = parseFloat(cleaned);\n  if (isNaN(parsed)) {\n    return null;\n  }\n  \n  // Convert to cents (multiply by 100)\n  const amountInCents = Math.round(parsed * 100);\n  \n  return {\n    amount: amountInCents,\n    currency: 'USD'\n  };\n}\n\n/**\n * Convert a number to a MonetaryValue (assumes the number is in dollars)\n */\nexport function numberToMonetary(value: number): MonetaryValue {\n  return {\n    amount: Math.round(value * 100), // Convert dollars to cents\n    currency: 'USD'\n  };\n}\n\n/**\n * Convert a MonetaryValue to a Dinero object\n */\nexport function toDinero(monetary: MonetaryValue): any {\n  try {\n    return Dinero({ amount: monetary.amount, currency: monetary.currency });\n  } catch (error) {\n    console.error('Error creating Dinero object:', error);\n    // Fallback: return a simple object with the same interface\n    return {\n      equalsTo: (other: any) => {\n        return other && other.amount === monetary.amount && other.currency === monetary.currency;\n      },\n      toFormat: (format: string) => {\n        const dollars = monetary.amount / 100;\n        return format.replace('0,0.00', dollars.toFixed(2));\n      }\n    };\n  }\n}\n\n/**\n * Check if two monetary values are equal (including trailing zeros)\n */\nexport function areMonetaryValuesEqual(value1: MonetaryValue, value2: MonetaryValue): boolean {\n  return value1.amount === value2.amount && value1.currency === value2.currency;\n}\n\n/**\n * Check if a monetary value matches a search query\n * This implements the correct logic:\n * - $1530 matches $15309 (prefix matching)\n * - $123 does NOT match $123.00 (trailing zeros are significant)\n * - $123.00 matches $123 (can be normalized)\n */\nexport function matchesMonetaryQuery(query: string, dataValue: number): boolean {\n  const queryMonetary = parseMonetaryString(query);\n  if (!queryMonetary) {\n    return false;\n  }\n  \n  const dataMonetary = numberToMonetary(dataValue);\n  \n  // Convert to Dinero objects for proper comparison\n  const queryDinero = toDinero(queryMonetary);\n  const dataDinero = toDinero(dataMonetary);\n  \n  // Check for exact match first\n  if (queryDinero.equalsTo(dataDinero)) {\n    return true;\n  }\n  \n  // For prefix matching: work with the original dollar amounts, not cents\n  // This is crucial for correct prefix matching\n  const queryDollars = queryMonetary.amount / 100; // Convert back to dollars\n  const dataDollars = dataMonetary.amount / 100;   // Convert back to dollars\n  \n  // Convert to strings for prefix matching\n  const queryStr = queryDollars.toString();\n  const dataStr = dataDollars.toString();\n  \n  // Check if the original query had explicit decimal places (like \"$123.00\")\n  const originalQuery = query.replace(/[$\\s]/g, '');\n  const hasExplicitDecimal = originalQuery.includes('.');\n  \n  // If the query had explicit decimal places, be much more restrictive\n  // Only allow exact matches or very close matches (within $0.01)\n  if (hasExplicitDecimal) {\n    const tolerance = 0.01;\n    return Math.abs(queryDollars - dataDollars) <= tolerance;\n  }\n  \n  // Special case: if the original query was in the format \"$X,0\" (like \"$5,0\"),\n  // we need to check both interpretations: as \"X\" and as \"X0\"\n  const commaZeroMatch = originalQuery.match(/^(\\d+),0$/);\n  if (commaZeroMatch) {\n    const [, integerPart] = commaZeroMatch;\n    const alternativeQueryStr = integerPart; // \"5\" for \"$5,0\"\n    const alternativeQueryStr2 = `${integerPart}0`; // \"50\" for \"$5,0\"\n    \n    // Check if data matches either interpretation\n    // For the \"5\" interpretation, only allow exact matches\n    if (dataStr === alternativeQueryStr) {\n      return true;\n    }\n    \n    // For the \"50\" interpretation, allow any value that starts with \"50\"\n    if (dataStr.startsWith(alternativeQueryStr2)) {\n      return true;\n    }\n  }\n  \n  // Special case: if the original query was in the format \"$X,Y\" (like \"$5,06\"),\n  // treat it as a prefix pattern for values starting with \"XY\"\n  const commaPatternMatch = originalQuery.match(/^(\\d+),(\\d+)$/);\n  if (commaPatternMatch) {\n    const [, integerPart, decimalPart] = commaPatternMatch;\n    const prefixPattern = `${integerPart}${decimalPart}`; // \"506\" for \"$5,06\"\n    \n    // Check if data starts with this prefix pattern\n    if (dataStr.startsWith(prefixPattern)) {\n      return true;\n    }\n  }\n  \n  // Use the helper function for regular prefix matching\n  return matchesPrefixPattern(queryStr, dataStr);\n}\n\n/**\n * Helper function to check if a data string matches a query string using prefix matching rules\n */\nfunction matchesPrefixPattern(queryStr: string, dataStr: string): boolean {\n  if (dataStr.startsWith(queryStr)) {\n    // Handle decimal values differently from whole numbers\n    const queryHasDecimal = queryStr.includes('.');\n    const dataHasDecimal = dataStr.includes('.');\n    \n    if (queryHasDecimal && dataHasDecimal) {\n      // For decimal values, allow prefix matching if the query is a prefix of the data\n      return true;\n    } else if (!queryHasDecimal && !dataHasDecimal) {\n      // For whole numbers, allow prefix matching but be more permissive for longer queries\n      // This allows \"506\" to match \"5068\", but prevents \"12\" from matching \"1234\"\n      if (dataStr.length > queryStr.length) {\n        // For queries of 3+ digits, allow any next digit (e.g., \"506\" matches \"5068\")\n        // For queries of 1-2 digits, only allow if next digit is 0 (e.g., \"12\" doesn't match \"123\")\n        if (queryStr.length >= 3) {\n          return true;\n        } else {\n          const nextDigit = dataStr[queryStr.length];\n          return nextDigit === '0';\n        }\n      }\n      return true;\n    } else {\n      // Mixed case: be more restrictive\n      return false;\n    }\n  }\n  \n  // Check if query starts with data (for cases where query is longer)\n  if (queryStr.startsWith(dataStr)) {\n    return queryStr.length >= dataStr.length + 4 && dataStr.length >= 2;\n  }\n  \n  return false;\n}\n\n/**\n * Format a monetary value for display\n */\nexport function formatMonetary(monetary: MonetaryValue): string {\n  const dinero = toDinero(monetary);\n  return dinero.toFormat('$0,0.00');\n}\n\n/**\n * Format a number as currency for display\n */\nexport function formatCurrency(amount: number): string {\n  const monetary = numberToMonetary(amount);\n  return formatMonetary(monetary);\n}\n\n/**\n * Extract monetary amounts from a search query\n */\nexport function extractMonetaryAmounts(query: string): MonetaryValue[] {\n  const amounts: MonetaryValue[] = [];\n  \n  // Split query into tokens\n  const tokens = query.toLowerCase().split(/\\s+/).filter(Boolean);\n  \n  for (const token of tokens) {\n    const monetary = parseMonetaryString(token);\n    if (monetary) {\n      amounts.push(monetary);\n    }\n  }\n  \n  return amounts;\n}\n\n/**\n * Check if a string contains monetary values\n */\nexport function hasMonetaryValue(text: string): boolean {\n  // Check for currency symbols or decimal patterns\n  // Use simple string checks instead of complex regex\n  if (text.includes('$') || text.includes('.') || text.includes(',')) {\n    return true;\n  }\n  \n  // Also check if it's a pure number (like \"5068\")\n  const trimmed = text.trim();\n  return /^\\d+$/.test(trimmed);\n}\n\n/**\n * Normalize a monetary string for comparison (preserves trailing zeros)\n */\nexport function normalizeMonetaryString(value: string): string {\n  const monetary = parseMonetaryString(value);\n  if (!monetary) {\n    return '';\n  }\n  \n  const dinero = toDinero(monetary);\n  return dinero.toFormat('0.00'); // Always show 2 decimal places\n}\n", "import { SearchRecord, isFinancialRecord, isOrganizationRecord, isPersonRecord } from '../types';\nimport { hasMonetaryValue } from './monetary';\n\nexport interface HighlightMatch {\n  field: string;\n  content: string;\n  highlightedContent: string;\n}\n\n/**\n * Highlights matching text in a string with yellow background\n */\nexport function highlightText(text: string, query: string): string {\n  if (!query.trim()) {\n    return escapeHtml(text);\n  }\n\n  // Check if this is a boolean query and extract search terms\n  const tokens = extractSearchTermsFromQuery(query);\n  if (tokens.length === 0) {\n    return escapeHtml(text);\n  }\n\n  let highlightedText = escapeHtml(text);\n  const textLower = text.toLowerCase();\n\n  // Sort tokens by length (longest first) to avoid partial highlighting\n  const sortedTokens = [...tokens].sort((a, b) => b.length - a.length);\n\n  for (const token of sortedTokens) {\n    if (!textLower.includes(token)) {\n      continue;\n    }\n\n    // Create a case-insensitive regex that preserves original case\n    const regex = new RegExp(`(${escapeRegex(token)})`, 'gi');\n    highlightedText = highlightedText.replace(regex, '<mark class=\"search-highlight\">$1</mark>');\n  }\n\n  return highlightedText;\n}\n\n/**\n * Extracts search terms from a query, filtering out boolean operators\n */\nfunction extractSearchTermsFromQuery(query: string): string[] {\n  // Check if this is a boolean query\n  if (isBooleanQuery(query)) {\n    return extractTermsFromBooleanQuery(query);\n  }\n  \n  // For simple queries, return all tokens\n  return query.toLowerCase().split(/\\s+/).filter(Boolean);\n}\n\n/**\n * Checks if a query contains boolean operators\n */\nfunction isBooleanQuery(query: string): boolean {\n  const trimmed = query.trim();\n  return /\\s+(AND|OR|NOT)\\s+/.test(trimmed);\n}\n\n/**\n * Extracts search terms from a boolean query, excluding operators\n */\nfunction extractTermsFromBooleanQuery(query: string): string[] {\n  const trimmed = query.trim();\n  const terms: string[] = [];\n  \n  // Split by boolean operators and extract terms\n  const parts = trimmed.split(/\\s+(AND|OR|NOT)\\s+/);\n  \n  for (const part of parts) {\n    // Skip boolean operators\n    if (part === 'AND' || part === 'OR' || part === 'NOT') {\n      continue;\n    }\n    \n    // Extract individual terms from each part\n    const partTerms = part.toLowerCase().split(/\\s+/).filter(Boolean);\n    terms.push(...partTerms);\n  }\n  \n  return terms;\n}\n\n/**\n * Hybrid highlighting for boolean queries that handles both text and monetary terms\n * Uses the same position tracking approach to prevent double highlighting\n */\nfunction highlightHybridBoolean(text: string, query: string, tokens: string[]): string {\n  let highlightedText = escapeHtml(text);\n  const textLower = text.toLowerCase();\n  \n  // Track which character positions have been highlighted to prevent overlaps\n  const highlightedPositions = new Set<number>();\n  \n  // Helper function to check if a position range is already highlighted\n  const isPositionHighlighted = (start: number, end: number): boolean => {\n    for (let i = start; i < end; i++) {\n      if (highlightedPositions.has(i)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  \n  // Helper function to mark positions as highlighted\n  const markPositionsHighlighted = (start: number, end: number): void => {\n    for (let i = start; i < end; i++) {\n      highlightedPositions.add(i);\n    }\n  };\n  \n  // Helper function to apply highlighting with position tracking\n  const applyHighlighting = (pattern: RegExp, className: string): void => {\n    let match;\n    const matches: Array<{ match: string; start: number; end: number }> = [];\n    \n    // First, collect all matches and their positions\n    while ((match = pattern.exec(highlightedText)) !== null) {\n      const start = match.index;\n      const end = start + match[0].length;\n      \n      // Only add if not already highlighted\n      if (!isPositionHighlighted(start, end)) {\n        matches.push({ match: match[0], start, end });\n      }\n    }\n    \n    // Apply highlighting in reverse order to maintain positions\n    for (let i = matches.length - 1; i >= 0; i--) {\n      const { match: matchText, start, end } = matches[i];\n      const before = highlightedText.substring(0, start);\n      const after = highlightedText.substring(end);\n      const highlighted = `<mark class=\"${className}\">${matchText}</mark>`;\n      \n      highlightedText = before + highlighted + after;\n      markPositionsHighlighted(start, start + highlighted.length);\n    }\n  };\n  \n  // Process each token to determine if it should be highlighted as text or monetary\n  for (const token of tokens) {\n    // Check if this token is a monetary query (starts with $)\n    if (token.startsWith('$')) {\n      const amountPart = token.slice(1).trim();\n      // Try monetary highlighting for this token by creating a monetary query\n      const monetaryQuery = `$${amountPart}`;\n      const { amounts, textTokens, range } = extractMonetaryTokens(monetaryQuery);\n      \n      if (amounts.length > 0 || textTokens.length > 0 || range) {\n        // Use the same position tracking approach for monetary highlighting\n        const originalQuery = monetaryQuery.replace(/[$\\s]/g, '');\n        const commaPatternMatch = originalQuery.match(/^(\\d+),(\\d+)$/);\n        \n        if (commaPatternMatch) {\n          const [, integerPart, decimalPart] = commaPatternMatch;\n          const prefixPattern = `${integerPart}${decimalPart}`;\n          \n          const prefixPatternRegex = new RegExp(\n            `(\\\\$\\\\b${escapeRegex(prefixPattern)}\\\\d*\\\\b|\\\\$\\\\b${escapeRegex(prefixPattern.slice(0, -2))},${escapeRegex(prefixPattern.slice(-2))}\\\\d*\\\\b)`,\n            'g'\n          );\n          \n          applyHighlighting(prefixPatternRegex, 'monetary-highlight-partial');\n          continue;\n        }\n        \n        // Handle exact matches\n        for (const amount of amounts) {\n          const amountStr = amount.toString();\n          const amountWithCommas = amount.toLocaleString();\n          \n          const monetaryPattern = new RegExp(\n            `(\\\\$\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$\\\\b${escapeRegex(amountStr)}\\\\b)`,\n            'g'\n          );\n          applyHighlighting(monetaryPattern, 'monetary-highlight-exact');\n        }\n        continue;\n      }\n    }\n    \n    // Check if this token has monetary potential\n    if (hasMonetaryValue(token)) {\n      // Try monetary highlighting first by creating a monetary query\n      const monetaryQuery = `$${token}`;\n      const { amounts, textTokens, range } = extractMonetaryTokens(monetaryQuery);\n      \n      if (amounts.length > 0 || textTokens.length > 0 || range) {\n        // Use the same position tracking approach for monetary highlighting\n        for (const amount of amounts) {\n          const amountStr = amount.toString();\n          const amountWithCommas = amount.toLocaleString();\n          \n          const pattern = new RegExp(\n            `(\\\\$?\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$?\\\\b${escapeRegex(amountStr)}\\\\b)`,\n            'g'\n          );\n          applyHighlighting(pattern, 'monetary-highlight-exact');\n        }\n        continue;\n      }\n    }\n    \n    // If no monetary highlighting worked, try text highlighting\n    if (textLower.includes(token)) {\n      const regex = new RegExp(`(${escapeRegex(token)})`, 'gi');\n      applyHighlighting(regex, 'search-highlight');\n    }\n  }\n  \n  return highlightedText;\n}\n\n/**\n * Finds the best matching field and content for a search record\n */\nexport function findBestMatch(record: SearchRecord, query: string): HighlightMatch | null {\n  if (!query.trim()) {\n    return null;\n  }\n\n  const tokens = extractSearchTermsFromQuery(query);\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  // Define searchable fields with their content\n  const searchableFields: Array<{ field: string; content: string }> = [\n    { field: 'title', content: record.title },\n    { field: 'summary', content: record.summary },\n    { field: 'project', content: record.project },\n    { field: 'client', content: record.client },\n    { field: 'status', content: record.status },\n    { field: 'tags', content: record.tags.join(' ') },\n  ];\n\n  // Add document-specific fields\n  if (record.entityType === 'Document') {\n    const docRecord = record as any;\n    if (docRecord.documentType) {\n      searchableFields.push({ field: 'documentType', content: docRecord.documentType });\n    }\n    if (docRecord.author) {\n      searchableFields.push({ field: 'author', content: docRecord.author });\n    }\n  }\n\n  if (isPersonRecord(record)) {\n    searchableFields.push(\n      { field: 'personType', content: record.personType },\n      { field: 'jobTitle', content: record.jobTitle },\n      { field: 'organization', content: record.associatedOrganization ?? '' },\n      { field: 'email', content: record.email },\n      { field: 'phone', content: record.phone },\n      { field: 'location', content: record.location },\n      { field: 'tradeFocus', content: record.tradeFocus ?? '' },\n    );\n  } else if (isOrganizationRecord(record)) {\n    searchableFields.push(\n      { field: 'organizationType', content: record.organizationType },\n      { field: 'tradeFocus', content: record.tradeFocus },\n      { field: 'serviceArea', content: record.serviceArea },\n      { field: 'primaryContact', content: record.primaryContact },\n      { field: 'phone', content: record.phone },\n      { field: 'email', content: record.email },\n      { field: 'website', content: record.website ?? '' },\n    );\n  } else if (isFinancialRecord(record)) {\n    if (record.lineItems) {\n      record.lineItems.forEach((item, index) => {\n        searchableFields.push(\n          { field: `lineItem${index}_title`, content: item.lineItemTitle },\n          { field: `lineItem${index}_description`, content: item.lineItemDescription },\n          { field: `lineItem${index}_type`, content: item.lineItemType }\n        );\n      });\n    }\n  }\n\n  // Add metadata fields\n  Object.entries(record.metadata || {}).forEach(([key, value]) => {\n    if (value != null) {\n      searchableFields.push({ field: `metadata_${key}`, content: String(value) });\n    }\n  });\n\n  // Find the field with the most token matches\n  let bestMatch: HighlightMatch | null = null;\n  let bestScore = 0;\n\n  for (const { field, content } of searchableFields) {\n    if (!content) continue;\n\n    const contentLower = content.toLowerCase();\n    const matchingTokens = tokens.filter(token => contentLower.includes(token));\n    const score = matchingTokens.length;\n\n    if (score > bestScore) {\n      bestMatch = {\n        field,\n        content,\n        highlightedContent: highlightText(content, query)\n      };\n      bestScore = score;\n    }\n  }\n\n  return bestMatch;\n}\n\n/**\n * Gets a context snippet from the best matching field\n */\nexport function getContextSnippet(match: HighlightMatch, maxLength: number = 100, query?: string): string {\n  if (!match) return '';\n\n  const content = match.content;\n  if (content.length <= maxLength) {\n    return match.highlightedContent;\n  }\n\n  // Try to find a good snippet around the first match\n  const tokens = content.toLowerCase().split(/\\s+/);\n  const queryTokens = query ? query.toLowerCase().split(/\\s+/) : [];\n  \n  // Find the first token that matches any query token\n  let startIndex = 0;\n  for (let i = 0; i < tokens.length; i++) {\n    if (queryTokens.some(qt => tokens[i].includes(qt))) {\n      startIndex = Math.max(0, i - 2); // Start 2 words before the match\n      break;\n    }\n  }\n\n  const words = content.split(/\\s+/);\n  const snippet = words.slice(startIndex, startIndex + Math.ceil(maxLength / 8)).join(' ');\n  \n  if (snippet.length < content.length) {\n    return highlightText(snippet + '...', query || '');\n  }\n  \n  return match.highlightedContent;\n}\n\n/**\n * Escapes HTML special characters\n */\nfunction escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Hybrid highlighting that combines regular text highlighting with monetary value highlighting\n * This is used for queries that have both text and monetary potential (like \"123\")\n */\nexport function highlightHybrid(text: string, query: string): string {\n  if (!query.trim()) {\n    return escapeHtml(text);\n  }\n\n  // Start with escaped HTML\n  let highlightedText = escapeHtml(text);\n  const textLower = text.toLowerCase();\n  const tokens = extractSearchTermsFromQuery(query);\n  \n  // Apply regular text highlighting (yellow) first\n  if (tokens.length > 0) {\n    const sortedTokens = [...tokens].sort((a, b) => b.length - a.length);\n    \n    for (const token of sortedTokens) {\n      if (!textLower.includes(token)) {\n        continue;\n      }\n      \n      // Create a case-insensitive regex that preserves original case\n      const regex = new RegExp(`(${escapeRegex(token)})`, 'gi');\n      highlightedText = highlightedText.replace(regex, '<mark class=\"search-highlight\">$1</mark>');\n    }\n  }\n  \n  // Then apply monetary highlighting (green) on top\n  // This will highlight monetary values even if they weren't caught by text highlighting\n  const { amounts, textTokens, range } = extractMonetaryTokens(query);\n  \n  if (amounts.length > 0 || textTokens.length > 0 || range) {\n    // Apply monetary highlighting logic directly to avoid double-escaping\n    if (amounts.length > 0) {\n      // For explicit monetary searches (queries starting with $), be more restrictive\n      const isExplicitMonetary = query.trim().startsWith('$');\n      \n      for (const amount of amounts) {\n        const amountStr = amount.toString();\n        const amountWithCommas = amount.toLocaleString();\n        \n        if (isExplicitMonetary) {\n          // For explicit monetary searches, only highlight values that are clearly monetary\n          const monetaryPattern = new RegExp(\n            `(\\\\$\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$\\\\b${escapeRegex(amountStr)}\\\\b)`,\n            'g'\n          );\n          \n          highlightedText = highlightedText.replace(monetaryPattern, '<mark class=\"monetary-highlight\">$1</mark>');\n        } else {\n          // For non-explicit monetary searches, use the original broader pattern\n          const pattern = new RegExp(\n            `(\\\\$?\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$?\\\\b${escapeRegex(amountStr)}\\\\b)`,\n            'g'\n          );\n          \n          highlightedText = highlightedText.replace(pattern, '<mark class=\"monetary-highlight\">$1</mark>');\n        }\n      }\n    }\n    \n    // Handle range highlighting\n    if (range) {\n      const rangePatterns = [\n        new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\s*-\\\\s*${escapeRegex(range.max.toString())}\\\\b`, 'g'),\n        new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\s+to\\\\s+${escapeRegex(range.max.toString())}\\\\b`, 'gi'),\n        new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\b`, 'g'),\n        new RegExp(`\\\\b${escapeRegex(range.max.toString())}\\\\b`, 'g'),\n      ];\n      \n      for (const pattern of rangePatterns) {\n        highlightedText = highlightedText.replace(pattern, '<mark class=\"monetary-highlight\">$&</mark>');\n      }\n    }\n    \n    // Handle text tokens\n    if (textTokens.length > 0) {\n      for (const token of textTokens) {\n        const regex = new RegExp(`(${escapeRegex(token)})`, 'gi');\n        highlightedText = highlightedText.replace(regex, '<mark class=\"monetary-highlight\">$1</mark>');\n      }\n    }\n  }\n  \n  return highlightedText;\n}\n\n/**\n * Highlights matching numeric values in monetary search mode with light green background\n */\nexport function highlightMonetaryValues(text: string, query: string): string {\n  if (!query.trim()) {\n    return escapeHtml(text);\n  }\n\n  const { amounts, textTokens, range } = extractMonetaryTokens(query);\n  \n  if (amounts.length === 0 && textTokens.length === 0 && !range) {\n    return escapeHtml(text);\n  }\n\n  let highlightedText = escapeHtml(text);\n  \n  // For explicit monetary searches (queries starting with $), be more restrictive\n  const isExplicitMonetary = query.trim().startsWith('$');\n  \n  // Highlight numeric values that match the query amounts\n  if (amounts.length > 0) {\n    for (const amount of amounts) {\n      // Create a single comprehensive pattern that matches the amount in various formats\n      // This avoids double highlighting by using a single replacement\n      const amountStr = amount.toString();\n      const amountWithCommas = amount.toLocaleString();\n      \n      if (isExplicitMonetary) {\n        // For explicit monetary searches, only highlight values that are clearly monetary\n        // Look for patterns that indicate monetary values: $X, $X,XXX, $X.XX, etc.\n        const monetaryPattern = new RegExp(\n          `(\\\\$\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$\\\\b${escapeRegex(amountStr)}\\\\b)`,\n          'g'\n        );\n        \n        highlightedText = highlightedText.replace(monetaryPattern, '<mark class=\"monetary-highlight\">$1</mark>');\n      } else {\n        // For non-explicit monetary searches, use the original broader pattern\n        const pattern = new RegExp(\n          `(\\\\$?\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$?\\\\b${escapeRegex(amountStr)}\\\\b)`,\n          'g'\n        );\n        \n        highlightedText = highlightedText.replace(pattern, '<mark class=\"monetary-highlight\">$1</mark>');\n      }\n    }\n    \n    // Special handling for comma pattern matches (like \"$5,06\")\n    // Check if the original query has comma patterns that should match prefix values\n    const originalQuery = query.replace(/[$\\s]/g, '');\n    const commaPatternMatch = originalQuery.match(/^(\\d+),(\\d+)$/);\n    if (commaPatternMatch) {\n      const [, integerPart, decimalPart] = commaPatternMatch;\n      const prefixPattern = `${integerPart}${decimalPart}`; // \"506\" for \"$5,06\"\n      \n      // Highlight monetary values that start with this prefix pattern\n      // Account for comma thousands separators in formatted currency (e.g., \"$5,068\")\n      // For \"506\", we want to match both \"$5068\" and \"$5,068\"\n      const prefixPatternRegex = new RegExp(\n        `(\\\\$\\\\b${escapeRegex(prefixPattern)}\\\\d*\\\\b|\\\\$\\\\b${escapeRegex(prefixPattern.slice(0, -2))},${escapeRegex(prefixPattern.slice(-2))}\\\\d*\\\\b)`,\n        'g'\n      );\n      \n      highlightedText = highlightedText.replace(prefixPatternRegex, (match) => {\n        // Skip if already highlighted to prevent double wrapping\n        if (match.includes('<mark')) {\n          return match;\n        }\n        return `<mark class=\"monetary-highlight\">${match}</mark>`;\n      });\n    }\n    \n    if (!isExplicitMonetary) {\n      // Additionally, handle partial matches for monetary values (only for non-explicit searches)\n      // This handles cases like searching for \"127\" and highlighting \"$1,275\"\n      const monetaryValuePattern = /\\$?[\\d,]+(?:\\.\\d{2})?/g;\n      highlightedText = highlightedText.replace(monetaryValuePattern, (match) => {\n        // Only process if not already highlighted\n        if (match.includes('<mark')) {\n          return match;\n        }\n        \n        // Extract the numeric value from the match\n        const numericValue = parseFloat(match.replace(/[$,\\s]/g, ''));\n        \n        // Check if any query amount is a partial match of this value\n        for (const queryAmount of amounts) {\n          if (isPartialMonetaryMatch(queryAmount, numericValue)) {\n            return `<mark class=\"monetary-highlight\">${match}</mark>`;\n          }\n        }\n        \n        return match;\n      });\n    }\n  }\n  \n  // Highlight range values if it's a range query\n  if (range) {\n    // First, highlight the range pattern itself in the text\n    const rangePatterns = [\n      // Range format: min-max\n      new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\s*-\\\\s*${escapeRegex(range.max.toString())}\\\\b`, 'g'),\n      // Range format: min to max\n      new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\s+to\\\\s+${escapeRegex(range.max.toString())}\\\\b`, 'gi'),\n      // Individual range values\n      new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\b`, 'g'),\n      new RegExp(`\\\\b${escapeRegex(range.max.toString())}\\\\b`, 'g'),\n    ];\n    \n    for (const pattern of rangePatterns) {\n      highlightedText = highlightedText.replace(pattern, '<mark class=\"monetary-highlight\">$&</mark>');\n    }\n    \n    // Additionally, highlight any monetary values in the text that fall within the range\n    // This handles cases where the displayed value (like $31,344) falls within the range ($30000-40000)\n    const monetaryValuePattern = /\\$?[\\d,]+(?:\\.\\d{2})?/g;\n    highlightedText = highlightedText.replace(monetaryValuePattern, (match) => {\n      // Extract the numeric value from the match\n      const numericValue = parseFloat(match.replace(/[$,\\s]/g, ''));\n      \n      // Check if this value falls within the range\n      if (!isNaN(numericValue) && numericValue >= range.min && numericValue <= range.max) {\n        // Only highlight if it's not already highlighted\n        if (!match.includes('<mark')) {\n          return `<mark class=\"monetary-highlight\">${match}</mark>`;\n        }\n      }\n      \n      return match;\n    });\n  }\n  \n  // Also highlight any text tokens that match\n  if (textTokens.length > 0) {\n    for (const token of textTokens) {\n      const regex = new RegExp(`(${escapeRegex(token)})`, 'gi');\n      highlightedText = highlightedText.replace(regex, '<mark class=\"monetary-highlight\">$1</mark>');\n    }\n  }\n  \n  return highlightedText;\n}\n\n/**\n * Extracts monetary tokens from a query using the improved monetary parsing\n */\nfunction extractMonetaryTokens(query: string): { amounts: number[]; textTokens: string[]; range: { min: number; max: number } | null } {\n  const tokens = query.toLowerCase().split(/\\s+/).filter(Boolean);\n  const amounts: number[] = [];\n  const textTokens: string[] = [];\n  \n  // Check for range query first\n  const range = parseRangeQuery(query);\n  if (range) {\n    return { amounts, textTokens, range };\n  }\n  \n  for (const token of tokens) {\n    const parsed = parseCurrencyString(token);\n    if (parsed !== null) {\n      amounts.push(parsed);\n    } else {\n      textTokens.push(token);\n    }\n  }\n  \n  return { amounts, textTokens, range: null };\n}\n\n/**\n * Parses currency string to extract numeric value using improved parsing logic\n */\nfunction parseCurrencyString(amountStr: string): number | null {\n  // Remove currency symbols and whitespace, but handle commas carefully\n  let cleaned = amountStr.replace(/[$\\s]/g, '');\n  \n  // Handle empty or invalid strings\n  if (!cleaned || cleaned === '') {\n    return null;\n  }\n  \n  // Handle range queries (e.g., \"100-200\", \"100 to 200\")\n  if (cleaned.includes('-') || cleaned.toLowerCase().includes(' to ')) {\n    return null; // Will be handled separately\n  }\n  \n  // Remove commas as thousands separators (like \"1,234.56\")\n  // For US/Canadian/Australian/New Zealand users, commas are only thousands separators\n  cleaned = cleaned.replace(/,/g, '');\n  \n  const parsed = parseFloat(cleaned);\n  return isNaN(parsed) ? null : parsed;\n}\n\n/**\n * Parses range query from string\n */\nfunction parseRangeQuery(query: string): { min: number; max: number } | null {\n  // Handle various range formats: \"100-200\", \"100 to 200\", \"$100-$200\", \"$100 to $200\"\n  const rangePatterns = [\n    /(\\d+(?:\\.\\d+)?)\\s*-\\s*(\\d+(?:\\.\\d+)?)/,  // 100-200\n    /(\\d+(?:\\.\\d+)?)\\s+to\\s+(\\d+(?:\\.\\d+)?)/i, // 100 to 200\n    /\\$(\\d+(?:\\.\\d+)?)\\s*-\\s*\\$(\\d+(?:\\.\\d+)?)/, // $100-$200\n    /\\$(\\d+(?:\\.\\d+)?)\\s+to\\s+\\$(\\d+(?:\\.\\d+)?)/i, // $100 to $200\n  ];\n  \n  for (const pattern of rangePatterns) {\n    const match = query.match(pattern);\n    if (match) {\n      const min = parseFloat(match[1]);\n      const max = parseFloat(match[2]);\n      if (!isNaN(min) && !isNaN(max) && min <= max) {\n        return { min, max };\n      }\n    }\n  }\n  \n  return null;\n}\n\n/**\n * Escapes regex special characters\n */\nfunction escapeRegex(text: string): string {\n  return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n/**\n * Checks if a query amount is a partial match of a data value\n * This handles cases like searching for \"$55,13\" and matching \"$551.32\"\n */\nfunction isPartialMonetaryMatch(queryAmount: number, dataValue: number): boolean {\n  // Convert both to strings for comparison\n  const queryStr = queryAmount.toString();\n  const dataStr = dataValue.toString();\n  \n  // Check for exact match first\n  if (queryStr === dataStr) {\n    return true;\n  }\n  \n  // Check if the query amount appears at the start of the data value\n  // This handles cases like 55.13 matching 55.13, 55.130, 55.1300, etc.\n  if (dataStr.startsWith(queryStr)) {\n    // Only allow prefix matching if the next character is a decimal point or zero\n    if (dataStr.length > queryStr.length) {\n      const nextChar = dataStr[queryStr.length];\n      return nextChar === '.' || nextChar === '0';\n    }\n    return true; // Same length, already handled by exact match above\n  }\n  \n  // Check if the query amount appears at the start when we remove trailing zeros\n  // This handles cases like 55.13 matching 55.130, 55.1300, etc.\n  const dataWithoutTrailingZeros = dataStr.replace(/0+$/, '');\n  if (dataWithoutTrailingZeros.startsWith(queryStr)) {\n    return true;\n  }\n  \n  // Check for more sophisticated partial matches\n  // Handle cases where the query is a prefix of the data value\n  // For example: \"55\" should match \"551.32\" (but not \"155.32\")\n  if (queryStr.length >= 2 && dataStr.length > queryStr.length) {\n    // Check if the query appears at the start of the data value\n    if (dataStr.startsWith(queryStr)) {\n      // Additional validation: ensure the next character makes sense\n      const nextChar = dataStr[queryStr.length];\n      // Allow if next char is a digit (like 55 matching 551)\n      if (/^\\d$/.test(nextChar)) {\n        return true;\n      }\n    }\n  }\n  \n  // Special case: handle European decimal format queries\n  // If query is like \"55,13\" (55.13) and data is \"551.32\", check if \"55\" matches \"551\"\n  if (queryStr.includes('.')) {\n    const queryIntegerPart = queryStr.split('.')[0];\n    const dataIntegerPart = dataStr.split('.')[0];\n    \n    if (dataIntegerPart.startsWith(queryIntegerPart) && queryIntegerPart.length >= 2) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\n/**\n * Enhanced monetary highlighting that shows different colors for exact vs partial matches\n * This provides better UX by visually distinguishing match types\n * \n * NEW ARCHITECTURE: Single-pass highlighting with cache to prevent double highlighting\n */\nexport function highlightMonetaryValuesWithPartialMatches(text: string, query: string): string {\n  if (!query.trim()) {\n    return escapeHtml(text);\n  }\n\n  // Check if this is a boolean query and extract search terms\n  const tokens = extractSearchTermsFromQuery(query);\n  if (tokens.length === 0) {\n    return escapeHtml(text);\n  }\n\n  // For boolean queries, use hybrid highlighting (both text and monetary)\n  if (isBooleanQuery(query)) {\n    return highlightHybridBoolean(text, query, tokens);\n  }\n\n  const { amounts, textTokens, range } = extractMonetaryTokens(query);\n  \n  if (amounts.length === 0 && textTokens.length === 0 && !range) {\n    return escapeHtml(text);\n  }\n\n  // NEW APPROACH: Single-pass highlighting with position tracking\n  return highlightWithPositionTracking(text, query, amounts, textTokens, range);\n}\n\n/**\n * Single-pass highlighting that tracks positions to prevent double highlighting\n */\nfunction highlightWithPositionTracking(\n  text: string, \n  query: string, \n  amounts: number[], \n  textTokens: string[], \n  range: { min: number; max: number } | null\n): string {\n  const isExplicitMonetary = query.trim().startsWith('$');\n  let highlightedText = escapeHtml(text);\n  \n  // Track which character positions have been highlighted to prevent overlaps\n  const highlightedPositions = new Set<number>();\n  \n  // Helper function to check if a position range is already highlighted\n  const isPositionHighlighted = (start: number, end: number): boolean => {\n    for (let i = start; i < end; i++) {\n      if (highlightedPositions.has(i)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  \n  // Helper function to mark positions as highlighted\n  const markPositionsHighlighted = (start: number, end: number): void => {\n    for (let i = start; i < end; i++) {\n      highlightedPositions.add(i);\n    }\n  };\n  \n  // Helper function to apply highlighting with position tracking\n  const applyHighlighting = (pattern: RegExp, className: string): void => {\n    let match;\n    const matches: Array<{ match: string; start: number; end: number }> = [];\n    \n    // First, collect all matches and their positions\n    while ((match = pattern.exec(highlightedText)) !== null) {\n      const start = match.index;\n      const end = start + match[0].length;\n      \n      // Only add if not already highlighted\n      if (!isPositionHighlighted(start, end)) {\n        matches.push({ match: match[0], start, end });\n      }\n    }\n    \n    // Apply highlighting in reverse order to maintain positions\n    for (let i = matches.length - 1; i >= 0; i--) {\n      const { match: matchText, start, end } = matches[i];\n      const before = highlightedText.substring(0, start);\n      const after = highlightedText.substring(end);\n      const highlighted = `<mark class=\"${className}\">${matchText}</mark>`;\n      \n      highlightedText = before + highlighted + after;\n      markPositionsHighlighted(start, start + highlighted.length);\n    }\n  };\n  \n  // 1. Handle comma pattern matches first (highest priority)\n  const originalQuery = query.replace(/[$\\s]/g, '');\n  const commaPatternMatch = originalQuery.match(/^(\\d+),(\\d+)$/);\n  if (commaPatternMatch) {\n    const [, integerPart, decimalPart] = commaPatternMatch;\n    const prefixPattern = `${integerPart}${decimalPart}`;\n    \n    const prefixPatternRegex = new RegExp(\n      `(\\\\$\\\\b${escapeRegex(prefixPattern)}\\\\d*\\\\b|\\\\$\\\\b${escapeRegex(prefixPattern.slice(0, -2))},${escapeRegex(prefixPattern.slice(-2))}\\\\d*\\\\b)`,\n      'g'\n    );\n    \n    applyHighlighting(prefixPatternRegex, 'monetary-highlight-partial');\n  }\n  \n  // 2. Handle exact matches (only if no comma pattern highlighting occurred)\n  if (!commaPatternMatch) {\n    for (const amount of amounts) {\n      const amountStr = amount.toString();\n      const amountWithCommas = amount.toLocaleString();\n      \n      if (isExplicitMonetary) {\n        const monetaryPattern = new RegExp(\n          `(\\\\$\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$\\\\b${escapeRegex(amountStr)}\\\\b)`,\n          'g'\n        );\n        applyHighlighting(monetaryPattern, 'monetary-highlight-exact');\n      } else {\n        const pattern = new RegExp(\n          `(\\\\$?\\\\b${escapeRegex(amountWithCommas)}\\\\b|\\\\$?\\\\b${escapeRegex(amountStr)}\\\\b)`,\n          'g'\n        );\n        applyHighlighting(pattern, 'monetary-highlight-exact');\n      }\n    }\n  }\n  \n  // 3. Handle partial matches (only if no exact matches were found)\n  const hasExactMatches = highlightedText.includes('monetary-highlight-exact');\n  const hasPartialMatches = highlightedText.includes('monetary-highlight-partial');\n  const shouldDoPartialMatching = !isExplicitMonetary || (!hasExactMatches && !hasPartialMatches);\n  \n  if (shouldDoPartialMatching) {\n    const monetaryValuePattern = /\\$?[\\d,]+(?:\\.\\d{2})?/g;\n    let match;\n    const partialMatches: Array<{ match: string; start: number; end: number; numericValue: number }> = [];\n    \n    // Collect partial matches\n    while ((match = monetaryValuePattern.exec(highlightedText)) !== null) {\n      const start = match.index;\n      const end = start + match[0].length;\n      \n      if (!isPositionHighlighted(start, end)) {\n        const numericValue = parseFloat(match[0].replace(/[$,\\s]/g, ''));\n        \n        // Check if any query amount is a partial match of this value\n        for (const queryAmount of amounts) {\n          if (isPartialMonetaryMatch(queryAmount, numericValue)) {\n            partialMatches.push({ match: match[0], start, end, numericValue });\n            break;\n          }\n        }\n      }\n    }\n    \n    // Apply partial match highlighting in reverse order\n    for (let i = partialMatches.length - 1; i >= 0; i--) {\n      const { match: matchText, start, end } = partialMatches[i];\n      const before = highlightedText.substring(0, start);\n      const after = highlightedText.substring(end);\n      const highlighted = `<mark class=\"monetary-highlight-partial\">${matchText}</mark>`;\n      \n      highlightedText = before + highlighted + after;\n      markPositionsHighlighted(start, start + highlighted.length);\n    }\n  }\n  \n  // 4. Handle range highlighting\n  if (range) {\n    const rangePatterns = [\n      new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\s*-\\\\s*${escapeRegex(range.max.toString())}\\\\b`, 'g'),\n      new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\s+to\\\\s+${escapeRegex(range.max.toString())}\\\\b`, 'gi'),\n      new RegExp(`\\\\b${escapeRegex(range.min.toString())}\\\\b`, 'g'),\n      new RegExp(`\\\\b${escapeRegex(range.max.toString())}\\\\b`, 'g'),\n    ];\n    \n    for (const pattern of rangePatterns) {\n      applyHighlighting(pattern, 'monetary-highlight-range');\n    }\n    \n    // Additionally, highlight monetary values within range\n    const monetaryValuePattern = /\\$?[\\d,]+(?:\\.\\d{2})?/g;\n    let match;\n    const rangeMatches: Array<{ match: string; start: number; end: number }> = [];\n    \n    while ((match = monetaryValuePattern.exec(highlightedText)) !== null) {\n      const start = match.index;\n      const end = start + match[0].length;\n      \n      if (!isPositionHighlighted(start, end)) {\n        const numericValue = parseFloat(match[0].replace(/[$,\\s]/g, ''));\n        \n        if (!isNaN(numericValue) && numericValue >= range.min && numericValue <= range.max) {\n          rangeMatches.push({ match: match[0], start, end });\n        }\n      }\n    }\n    \n    // Apply range highlighting in reverse order\n    for (let i = rangeMatches.length - 1; i >= 0; i--) {\n      const { match: matchText, start, end } = rangeMatches[i];\n      const before = highlightedText.substring(0, start);\n      const after = highlightedText.substring(end);\n      const highlighted = `<mark class=\"monetary-highlight-range\">${matchText}</mark>`;\n      \n      highlightedText = before + highlighted + after;\n      markPositionsHighlighted(start, start + highlighted.length);\n    }\n  }\n  \n  // 5. Handle text tokens\n  for (const token of textTokens) {\n    const regex = new RegExp(`(${escapeRegex(token)})`, 'gi');\n    applyHighlighting(regex, 'monetary-highlight-text');\n  }\n  \n  return highlightedText;\n}\n", "export const MIN_EFFECTIVE_QUERY_LENGTH = 2;\n\n/**\n * Calculates the number of characters that should count toward the search length\n * requirement. We ignore whitespace so people cannot satisfy the minimum with\n * a space, and we ignore the dollar sign because monetary searches always\n * begin with it.\n */\nexport function getEffectiveQueryLength(query: string): number {\n  if (!query) {\n    return 0;\n  }\n\n  return query\n    .replace(/\\$/g, '')\n    .replace(/\\s+/g, '')\n    .length;\n}\n\nexport function isQueryTooShort(query: string): boolean {\n  const effectiveLength = getEffectiveQueryLength(query);\n  return effectiveLength > 0 && effectiveLength < MIN_EFFECTIVE_QUERY_LENGTH;\n}\n", "/**\n * Utility functions for time formatting and pretty printing\n */\n\nexport interface TimeAgoOptions {\n  includeSeconds?: boolean;\n  compact?: boolean;\n}\n\n/**\n * Calculate the difference between two timestamps and return a pretty \"time ago\" string\n */\nexport function timeAgo(timestamp: number, options: TimeAgoOptions = {}): string {\n  const { includeSeconds = false, compact = false } = options;\n  const now = Date.now();\n  const diff = now - timestamp;\n  \n  if (diff < 0) {\n    return 'just now';\n  }\n  \n  // Less than a minute\n  if (diff < 60 * 1000) {\n    if (includeSeconds) {\n      const seconds = Math.floor(diff / 1000);\n      return compact ? `${seconds}s` : seconds <= 1 ? 'just now' : `${seconds} seconds ago`;\n    }\n    return 'just now';\n  }\n  \n  // Less than an hour\n  if (diff < 60 * 60 * 1000) {\n    const minutes = Math.floor(diff / (60 * 1000));\n    return compact ? `${minutes}m` : minutes === 1 ? '1 minute ago' : `${minutes} minutes ago`;\n  }\n  \n  // Less than a day\n  if (diff < 24 * 60 * 60 * 1000) {\n    const hours = Math.floor(diff / (60 * 60 * 1000));\n    return compact ? `${hours}h` : hours === 1 ? '1 hour ago' : `${hours} hours ago`;\n  }\n  \n  // Less than a week\n  if (diff < 7 * 24 * 60 * 60 * 1000) {\n    const days = Math.floor(diff / (24 * 60 * 60 * 1000));\n    return compact ? `${days}d` : days === 1 ? '1 day ago' : `${days} days ago`;\n  }\n  \n  // Less than a month\n  if (diff < 30 * 24 * 60 * 60 * 1000) {\n    const weeks = Math.floor(diff / (7 * 24 * 60 * 60 * 1000));\n    return compact ? `${weeks}w` : weeks === 1 ? '1 week ago' : `${weeks} weeks ago`;\n  }\n  \n  // Less than a year\n  if (diff < 365 * 24 * 60 * 60 * 1000) {\n    const months = Math.floor(diff / (30 * 24 * 60 * 60 * 1000));\n    return compact ? `${months}mo` : months === 1 ? '1 month ago' : `${months} months ago`;\n  }\n  \n  // Years\n  const years = Math.floor(diff / (365 * 24 * 60 * 60 * 1000));\n  return compact ? `${years}y` : years === 1 ? '1 year ago' : `${years} years ago`;\n}\n\n/**\n * Format a timestamp as a readable date string\n */\nexport function formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp);\n  const now = new Date();\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const yesterday = new Date(today);\n  yesterday.setDate(yesterday.getDate() - 1);\n  \n  const dateOnly = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  \n  if (dateOnly.getTime() === today.getTime()) {\n    return `Today at ${date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}`;\n  }\n  \n  if (dateOnly.getTime() === yesterday.getTime()) {\n    return `Yesterday at ${date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}`;\n  }\n  \n  // More than 2 days ago, show the date\n  return date.toLocaleDateString([], { \n    month: 'short', \n    day: 'numeric',\n    ...(date.getFullYear() !== now.getFullYear() ? { year: 'numeric' } : {})\n  });\n}\n\n/**\n * Check if a timestamp is recent (within the last hour)\n */\nexport function isRecent(timestamp: number, thresholdMs: number = 60 * 60 * 1000): boolean {\n  return Date.now() - timestamp < thresholdMs;\n}\n", "/**\n * Recent searches storage and management\n */\n\nimport { timeAgo } from '../utils/time';\n\nexport interface RecentSearch {\n  id: string;\n  query: string;\n  timestamp: number;\n  resultCount?: number;\n}\n\nconst STORAGE_KEY = 'search-prototype-recent-searches';\nconst MAX_STORED_SEARCHES = 100;\nconst MIN_QUERY_LENGTH = 2;\nconst DEBOUNCE_MS = 1000; // Don't record searches within 1 second of each other\n\nclass RecentSearchesManager {\n  private searches: RecentSearch[] = [];\n  private lastRecordedTime = 0;\n  private lastRecordedQuery = '';\n\n  constructor() {\n    this.loadFromStorage();\n  }\n\n  /**\n   * Add a new search to recent searches\n   * Only records \"complete\" queries, not partial keystrokes\n   */\n  addSearch(query: string, resultCount?: number): void {\n    const trimmed = query.trim();\n    \n    // Don't record empty or very short queries\n    if (trimmed.length < MIN_QUERY_LENGTH) {\n      return;\n    }\n    \n    // Don't record if it's the same query as the last one within the debounce window\n    const now = Date.now();\n    if (trimmed === this.lastRecordedQuery && now - this.lastRecordedTime < DEBOUNCE_MS) {\n      return;\n    }\n    \n    // Create new search entry\n    const search: RecentSearch = {\n      id: this.generateId(),\n      query: trimmed,\n      timestamp: now,\n      resultCount,\n    };\n    \n    // Remove any existing search with the same query (to avoid duplicates)\n    this.searches = this.searches.filter(s => s.query !== trimmed);\n    \n    // Add to beginning of array (most recent first)\n    this.searches.unshift(search);\n    \n    // Trim to max stored searches\n    if (this.searches.length > MAX_STORED_SEARCHES) {\n      this.searches = this.searches.slice(0, MAX_STORED_SEARCHES);\n    }\n    \n    // Update tracking\n    this.lastRecordedTime = now;\n    this.lastRecordedQuery = trimmed;\n    \n    // Save to storage\n    this.saveToStorage();\n  }\n\n  /**\n   * Get recent searches, optionally limited to a specific count\n   */\n  getRecentSearches(limit?: number): RecentSearch[] {\n    return limit ? this.searches.slice(0, limit) : [...this.searches];\n  }\n\n  /**\n   * Clear all recent searches\n   */\n  clearAll(): void {\n    this.searches = [];\n    this.lastRecordedTime = 0;\n    this.lastRecordedQuery = '';\n    this.saveToStorage();\n  }\n\n  /**\n   * Remove a specific search by ID\n   */\n  removeSearch(id: string): void {\n    this.searches = this.searches.filter(s => s.id !== id);\n    this.saveToStorage();\n  }\n\n  /**\n   * Get searches formatted for display with time ago strings and result count metadata\n   */\n  getFormattedRecentSearches(limit?: number): Array<RecentSearch & { timeAgo: string; resultCountText: string }> {\n    return this.getRecentSearches(limit).map(search => ({\n      ...search,\n      timeAgo: timeAgo(search.timestamp),\n      resultCountText: this.formatResultCount(search.resultCount),\n    }));\n  }\n\n  /**\n   * Format result count with proper pluralization\n   */\n  private formatResultCount(count?: number): string {\n    if (count === undefined || count === null) {\n      return '';\n    }\n    \n    if (count === 0) {\n      return 'No results';\n    } else if (count === 1) {\n      return '1 result';\n    } else {\n      return `${count.toLocaleString()} results`;\n    }\n  }\n\n  private loadFromStorage(): void {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (stored) {\n        const parsed = JSON.parse(stored);\n        // Validate the stored data structure\n        if (Array.isArray(parsed)) {\n          this.searches = parsed.filter(item => \n            item && \n            typeof item === 'object' && \n            typeof item.id === 'string' && \n            typeof item.query === 'string' && \n            typeof item.timestamp === 'number'\n          );\n        }\n      }\n    } catch (error) {\n      console.warn('Failed to load recent searches from storage:', error);\n      this.searches = [];\n    }\n  }\n\n  private saveToStorage(): void {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(this.searches));\n    } catch (error) {\n      console.warn('Failed to save recent searches to storage:', error);\n    }\n  }\n\n  private generateId(): string {\n    return `search_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\n// Export singleton instance\nexport const recentSearches = new RecentSearchesManager();\n", "{\n  \"searchDelayMs\": 100,\n  \"searchDelayVarianceMs\": 10,\n  \"groupLimits\": {\n    \"Document\": 4,\n    \"ClientInvoice\": 4,\n    \"PurchaseOrder\": 4,\n    \"Bill\": 4,\n    \"Receipt\": 4,\n    \"Payment\": 4,\n    \"Person\": 4,\n    \"Organization\": 4\n  },\n  \"lineItemBehavior\": \"show-matched-with-context-3\",\n  \"collapseIrrelevantLineItems\": true,\n  \"lineItemsCollapseThreshold\": 5,\n  \"maxFacetValues\": 5,\n  \"recentSearchesDisplayLimit\": 5,\n  \"showInferredRelationships\": true\n}\n", "export type StoreListener<T> = (state: T) => void;\nexport type StoreUpdater<T> = (state: T) => T;\n\nexport interface Store<T> {\n  getState(): T;\n  setState(updater: Partial<T> | StoreUpdater<T>): void;\n  subscribe(listener: StoreListener<T>): () => void;\n}\n\nexport function createStore<T>(initialState: T): Store<T> {\n  let state = initialState;\n  const listeners = new Set<StoreListener<T>>();\n\n  const getState = () => state;\n\n  const setState: Store<T>['setState'] = (updater) => {\n    const nextState =\n      typeof updater === 'function'\n        ? (updater as StoreUpdater<T>)(state)\n        : ({ ...state, ...(updater as Partial<T>) } as T);\n\n    if (Object.is(nextState, state)) {\n      return;\n    }\n\n    state = nextState;\n    listeners.forEach((listener) => listener(state));\n  };\n\n  const subscribe: Store<T>['subscribe'] = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n\n  return { getState, setState, subscribe };\n}\n", "import defaultsJson from '../config/defaults.json';\nimport { createStore } from './store';\n\nexport type LineItemBehavior = \n  | 'show-matched-only'           // Option 1: Show only matched line items\n  | 'show-matched-with-context-1' // Option 2a: Show matched + 1 line context\n  | 'show-matched-with-context-2' // Option 2b: Show matched + 2 lines context  \n  | 'show-matched-with-context-3' // Option 2c: Show matched + 3 lines context\n  | 'show-matched-with-context-5' // Option 2d: Show matched + 5 lines context\n  | 'show-all-always'            // Option 3: Always show all line items\n  | 'hide-all-always';           // Option 4: Always hide all line items\n\nexport interface SettingsState {\n  searchDelayMs: number;\n  searchDelayVarianceMs: number;\n  groupLimits: Record<string, number>;\n  lineItemBehavior: LineItemBehavior;\n  collapseIrrelevantLineItems: boolean;\n  lineItemsCollapseThreshold: number;\n  maxFacetValues: number;\n  recentSearchesDisplayLimit: number;\n  showInferredRelationships: boolean;\n}\n\nconst STORAGE_KEY = 'search-prototype.settings';\nconst DEFAULTS: SettingsState = normalize(defaultsJson as SettingsState);\n\nfunction normalize(state: SettingsState): SettingsState {\n  return {\n    ...state,\n    groupLimits: { ...state.groupLimits },\n    searchDelayVarianceMs: state.searchDelayVarianceMs ?? 10,\n    lineItemBehavior: state.lineItemBehavior ?? 'show-matched-with-context-3',\n    collapseIrrelevantLineItems: state.collapseIrrelevantLineItems ?? true,\n    lineItemsCollapseThreshold: state.lineItemsCollapseThreshold ?? 5,\n    maxFacetValues: state.maxFacetValues ?? 5,\n    recentSearchesDisplayLimit: state.recentSearchesDisplayLimit ?? 5,\n    showInferredRelationships: state.showInferredRelationships ?? true,\n  };\n}\n\nfunction mergeSettings(base: SettingsState, overrides?: Partial<SettingsState>): SettingsState {\n  if (!overrides) {\n    return normalize(base);\n  }\n\n  return {\n    ...base,\n    ...overrides,\n    groupLimits: {\n      ...base.groupLimits,\n      ...(overrides.groupLimits ?? {}),\n    },\n  };\n}\n\nfunction readPersisted(): Partial<SettingsState> | undefined {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  try {\n    const raw = window.localStorage.getItem(STORAGE_KEY);\n    if (!raw) {\n      return undefined;\n    }\n    return JSON.parse(raw) as Partial<SettingsState>;\n  } catch (error) {\n    console.warn('Failed to parse persisted settings; falling back to defaults.', error);\n    return undefined;\n  }\n}\n\nfunction persist(state: SettingsState) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  window.localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n}\n\nconst initialState = mergeSettings(DEFAULTS, readPersisted());\nconst store = createStore<SettingsState>(initialState);\n\nstore.subscribe((state) => {\n  persist(state);\n});\n\nexport const settingsStore = {\n  getState: store.getState,\n  subscribe: store.subscribe,\n  update(partial: Partial<SettingsState>) {\n    store.setState((prev) => mergeSettings(prev, partial));\n  },\n  setGroupLimit(section: string, limit: number) {\n    store.setState((prev) =>\n      mergeSettings(prev, {\n        groupLimits: {\n          ...prev.groupLimits,\n          [section]: limit,\n        },\n      }),\n    );\n  },\n  reset() {\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem(STORAGE_KEY);\n    }\n    store.setState(() => normalize(DEFAULTS));\n  },\n  get defaults() {\n    return normalize(DEFAULTS);\n  },\n};\n\nexport type SettingsStore = typeof settingsStore;\n", "import {\n  BuildertrendRecord,\n  SearchGroup,\n  SearchRecord,\n  SearchResponse,\n  isBuildertrendRecord,\n  isFinancialRecord,\n  isOrganizationRecord,\n  isPersonRecord,\n} from '../types';\n\n// Declare Lucide global\ndeclare global {\n  interface Window {\n    lucide?: {\n      createIcons: () => void;\n    };\n  }\n}\nimport { formatCurrency, formatDate, formatEntityType } from '../utils/format';\nimport { SearchStatus } from '../state/appState';\nimport { findBestMatch, getContextSnippet, highlightText, highlightMonetaryValues, highlightHybrid, highlightMonetaryValuesWithPartialMatches } from '../utils/highlight';\nimport { getEffectiveQueryLength, isQueryTooShort, MIN_EFFECTIVE_QUERY_LENGTH } from '../utils/query';\nimport { recentSearches } from '../data/recentSearches';\nimport { settingsStore } from '../state/settingsStore';\n\n// OS detection utility\nfunction isMacOS(): boolean {\n  return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n}\n\nfunction getModifierKey(): string {\n  return isMacOS() ? '\u2318' : 'Ctrl';\n}\n\n// Helper function to detect if a query has monetary potential (for hybrid highlighting)\nfunction hasMonetaryPotential(query: string): boolean {\n  const tokens = query.toLowerCase().split(/\\s+/).filter(Boolean);\n  return tokens.some(token => {\n    return /^\\d+(,\\d{3})*(\\.\\d+)?$/.test(token) || \n           /^\\d+(\\.\\d+)?$/.test(token) ||\n           /^\\$?\\d+(,\\d{3})*(\\.\\d+)?$/.test(token) ||\n           /\\d/.test(token); // Any token containing a digit\n  });\n}\n\n// Helper function to determine which highlighting function to use\nfunction getHighlightFunction(query: string, isMonetarySearch: boolean) {\n  if (isMonetarySearch) {\n    return highlightMonetaryValuesWithPartialMatches;\n  } else {\n    // For non-monetary searches, always use regular text highlighting\n    // This prevents monetary highlighting classes from being applied to non-monetary searches\n    return highlightText;\n  }\n}\n\nexport interface SearchDialogState {\n  visible: boolean;\n  status: SearchStatus;\n  query: string;\n  response: SearchResponse | null;\n  isMonetarySearch?: boolean;\n  selectedIndex?: number;\n}\n\nexport interface SearchDialogOptions {\n  onSeeAllResults(): void;\n  onKeyDown?(event: KeyboardEvent): void;\n}\n\nexport interface SearchDialogHandles {\n  element: HTMLDivElement;\n  setState(state: SearchDialogState): void;\n}\n\nexport function createSearchDialog(\n  host: HTMLDivElement,\n  options: SearchDialogOptions,\n): SearchDialogHandles {\n  const dialog = document.createElement('div');\n  dialog.className = 'search-dialog';\n  dialog.setAttribute('role', 'dialog');\n  dialog.setAttribute('aria-modal', 'false');\n  dialog.hidden = true;\n\n  host.append(dialog);\n\n  // Track previous state to avoid unnecessary re-renders\n  let previousState: SearchDialogState | null = null;\n\n  // Add keyboard event handler with better event capture\n  function handleKeyDown(event: KeyboardEvent) {\n    console.log('\uD83D\uDD0D SearchDialog handleKeyDown:', {\n      key: event.key,\n      target: event.target,\n      visible: previousState?.visible,\n      hasResponse: !!previousState?.response,\n      query: previousState?.query\n    });\n\n    if (!previousState?.visible) {\n      console.log('\u274C Dialog not visible, ignoring');\n      return;\n    }\n\n    // Handle CMD/CTRL+Enter for \"See all results\"\n    if (event.key === 'Enter' && (event.metaKey || event.ctrlKey)) {\n      event.preventDefault();\n      event.stopPropagation();\n      options.onSeeAllResults();\n      return;\n    }\n\n    // Only handle arrow keys and enter when the dialog is visible\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp' || event.key === 'Enter') {\n      console.log('\uD83C\uDFAF Handling navigation key:', event.key);\n            // Handle recent searches state (when no query or no response)\n            if (!previousState.response || previousState.query === '') {\n              console.log('\uD83C\uDFAF In recent searches mode');\n              const recentItems = dialog.querySelectorAll('.search-dialog__recent-item');\n              // Get the current selectedIndex from the dialog's current state\n              const currentIndex = previousState.selectedIndex ?? -1;\n              console.log('\uD83C\uDFAF Recent searches: currentIndex =', currentIndex, 'totalItems =', recentItems.length);\n\n              if (event.key === 'ArrowDown') {\n                event.preventDefault();\n                event.stopPropagation();\n                const newIndex = Math.min(currentIndex + 1, recentItems.length - 1);\n                console.log('\uD83D\uDD3D Recent ArrowDown: currentIndex =', currentIndex, 'newIndex =', newIndex);\n                setState({ ...previousState, selectedIndex: newIndex });\n                scrollRecentIntoView(newIndex);\n              } else if (event.key === 'ArrowUp') {\n                event.preventDefault();\n                event.stopPropagation();\n                const newIndex = Math.max(currentIndex - 1, -1);\n                console.log('\uD83D\uDD3C Recent ArrowUp: currentIndex =', currentIndex, 'newIndex =', newIndex);\n                setState({ ...previousState, selectedIndex: newIndex });\n                scrollRecentIntoView(newIndex);\n              } else if (event.key === 'Enter' && currentIndex >= 0) {\n                event.preventDefault();\n                event.stopPropagation();\n                const selectedItem = recentItems[currentIndex] as HTMLElement;\n                if (selectedItem) {\n                  selectedItem.click();\n                }\n              }\n              return;\n            }\n\n      // Handle search results state\n      if (!previousState.response) {\n        return;\n      }\n\n      const allItems = getAllSearchItems(previousState.response);\n      \n            if (event.key === 'ArrowDown') {\n              event.preventDefault();\n              event.stopPropagation();\n              // Get the current selectedIndex from the dialog's current state\n              const currentIndex = previousState.selectedIndex ?? -1;\n              const newIndex = Math.min(currentIndex + 1, allItems.length - 1);\n              console.log('\uD83D\uDD3D ArrowDown: currentIndex =', currentIndex, 'newIndex =', newIndex, 'totalItems =', allItems.length);\n              setState({ ...previousState, selectedIndex: newIndex });\n              scrollSelectedIntoView(newIndex);\n            } else if (event.key === 'ArrowUp') {\n              event.preventDefault();\n              event.stopPropagation();\n              // Get the current selectedIndex from the dialog's current state\n              const currentIndex = previousState.selectedIndex ?? -1;\n              const newIndex = Math.max(currentIndex - 1, -1);\n              console.log('\uD83D\uDD3C ArrowUp: currentIndex =', currentIndex, 'newIndex =', newIndex);\n              setState({ ...previousState, selectedIndex: newIndex });\n              scrollSelectedIntoView(newIndex);\n            } else if (event.key === 'Enter' && (previousState.selectedIndex ?? -1) >= 0) {\n        event.preventDefault();\n        event.stopPropagation();\n        const selectedItem = allItems[previousState.selectedIndex || -1];\n        console.log('\u23CE Enter: selectedIndex =', previousState.selectedIndex, 'selectedItem =', selectedItem);\n        if (selectedItem && isBuildertrendRecord(selectedItem)) {\n          // TODO: Implement navigation logic\n          console.log('Navigate to:', selectedItem.url);\n        }\n      }\n    }\n  }\n\n  // Function to scroll selected item into view\n  function scrollSelectedIntoView(selectedIndex: number) {\n    if (selectedIndex < 0) {\n      console.log('\uD83D\uDCCD Scroll: selectedIndex < 0, skipping scroll');\n      return;\n    }\n    \n    requestAnimationFrame(() => {\n      const selectedElement = dialog.querySelector(`[data-item-index=\"${selectedIndex}\"]`);\n      console.log('\uD83D\uDCCD Scroll: looking for element with data-item-index=\"' + selectedIndex + '\"', 'found:', selectedElement);\n      if (selectedElement) {\n        console.log('\uD83D\uDCCD Scroll: scrolling element into view');\n        selectedElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      } else {\n        console.log('\uD83D\uDCCD Scroll: element not found!');\n      }\n    });\n  }\n\n  // Function to scroll recent search item into view\n  function scrollRecentIntoView(selectedIndex: number) {\n    if (selectedIndex < 0) {\n      console.log('\uD83D\uDCCD Recent Scroll: selectedIndex < 0, skipping scroll');\n      return;\n    }\n    \n    requestAnimationFrame(() => {\n      const recentItems = dialog.querySelectorAll('.search-dialog__recent-item');\n      const selectedElement = recentItems[selectedIndex] as HTMLElement;\n      console.log('\uD83D\uDCCD Recent Scroll: looking for recent item at index', selectedIndex, 'found:', selectedElement, 'total items:', recentItems.length);\n      if (selectedElement) {\n        console.log('\uD83D\uDCCD Recent Scroll: scrolling recent item into view');\n        selectedElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      } else {\n        console.log('\uD83D\uDCCD Recent Scroll: recent item not found!');\n      }\n    });\n  }\n\n  // Add event listener with capture phase to ensure we get the events first\n  dialog.addEventListener('keydown', handleKeyDown, true);\n  \n  // Make the dialog focusable so it can receive keyboard events\n  dialog.setAttribute('tabindex', '-1');\n  \n  // Also add to document to catch events when dialog doesn't have focus\n  document.addEventListener('keydown', (event) => {\n    console.log('\uD83D\uDCC4 Document keydown:', {\n      key: event.key,\n      target: event.target,\n      visible: previousState?.visible,\n      hasResponse: !!previousState?.response\n    });\n\n    // Only handle if dialog is visible\n    if (!previousState?.visible) {\n      console.log('\u274C Document handler: dialog not visible');\n      return;\n    }\n\n    // For recent searches (no response), we still want to handle navigation\n    // For search results (has response), we also want to handle navigation\n    // So we don't need to check hasResponse here\n    \n    const target = event.target as HTMLElement;\n    const isInputField = target && (\n      target.tagName === 'INPUT' || \n      target.tagName === 'TEXTAREA' || \n      target.isContentEditable ||\n      (target.closest && target.closest('.search-dialog__recent-item')) // Don't interfere with recent searches\n    );\n\n    console.log('\uD83C\uDFAF Document handler: isInputField =', isInputField, 'target =', target);\n\n    // For recent searches (no response), we want to handle arrow keys even from input field\n    // For search results (has response), we only handle when not in input field\n    if (isInputField && previousState?.response) {\n      console.log('\u274C Document handler: in input field with response, ignoring');\n      return;\n    }\n\n    // If we're in an input field but have no response (recent searches), handle the event\n    if (isInputField && !previousState?.response) {\n      console.log('\uD83C\uDFAF Document handler: in input field but no response (recent searches), handling');\n    }\n\n    console.log('\u2705 Document handler: calling handleKeyDown');\n    handleKeyDown(event);\n  });\n\n  // Add a more aggressive approach - listen on the search input specifically\n  const searchInput = document.querySelector('input[type=\"search\"]') as HTMLInputElement;\n  if (searchInput) {\n    searchInput.addEventListener('keydown', (event) => {\n      console.log('\uD83D\uDD0D Search input keydown:', {\n        key: event.key,\n        target: event.target,\n        visible: previousState?.visible,\n        hasResponse: !!previousState?.response\n      });\n\n      // Handle CMD/CTRL+Enter for \"See all results\" even when input is focused\n      if (event.key === 'Enter' && (event.metaKey || event.ctrlKey)) {\n        event.preventDefault();\n        event.stopPropagation();\n        options.onSeeAllResults();\n        return;\n      }\n\n      // If we have results and user presses arrow keys, blur the input and handle navigation\n      if (previousState?.visible && previousState?.response && \n          (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n        console.log('\uD83C\uDFAF Search input: handling arrow key, blurring input');\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Blur the input to remove focus\n        searchInput.blur();\n        \n        // Handle the navigation\n        handleKeyDown(event);\n      }\n    });\n  }\n\n  // Listen for refresh-dialog events to re-render when recent searches are cleared\n  window.addEventListener('refresh-dialog', () => {\n    if (previousState?.visible) {\n      console.log('\uD83D\uDD04 Refreshing dialog due to recent searches clear');\n      // Force a re-render by directly calling renderDialogContents\n      // This bypasses the state comparison logic since we know we need to refresh\n      requestAnimationFrame(() => {\n        renderDialogContents(dialog, previousState!, options);\n      });\n    }\n  });\n\n  const setState = (state: SearchDialogState) => {\n    console.log('\uD83D\uDD04 setState called:', {\n      oldSelectedIndex: previousState?.selectedIndex,\n      newSelectedIndex: state.selectedIndex,\n      visible: state.visible,\n      hasResponse: !!state.response\n    });\n\n    // Only update visibility if it changed\n    const visibilityChanged = !previousState || previousState.visible !== state.visible;\n    if (visibilityChanged) {\n      dialog.hidden = !state.visible;\n      if (dialog.hidden) {\n        dialog.innerHTML = '';\n        dialog.style.display = 'none';\n        previousState = state;\n        return;\n      }\n      dialog.style.display = 'flex';\n    }\n\n    // Only update monetary search class if it changed\n    if (!previousState || previousState.isMonetarySearch !== state.isMonetarySearch) {\n      dialog.classList.toggle('monetary-search', state.isMonetarySearch || false);\n    }\n\n    // Always re-render when selectedIndex changes\n    // This ensures the visual state is always in sync\n    const selectedIndexChanged = !previousState || previousState.selectedIndex !== state.selectedIndex;\n    \n    // Re-render content if visibility changed OR if relevant state changed\n    const contentChanged = visibilityChanged ||\n      !previousState ||\n      previousState.status !== state.status ||\n      previousState.query !== state.query ||\n      previousState.response !== state.response ||\n      selectedIndexChanged;\n\n    console.log('\uD83D\uDD04 Content changed:', contentChanged, {\n      visibilityChanged,\n      statusChanged: !previousState || previousState.status !== state.status,\n      queryChanged: !previousState || previousState.query !== state.query,\n      responseChanged: !previousState || previousState.response !== state.response,\n      selectedIndexChanged\n    });\n\n    if (contentChanged) {\n      console.log('\uD83D\uDD04 Re-rendering dialog contents');\n      // Use requestAnimationFrame to defer heavy DOM operations\n      requestAnimationFrame(() => {\n        renderDialogContents(dialog, state, options);\n      });\n    } else {\n      console.log('\uD83D\uDD04 No content change, skipping re-render');\n    }\n\n    // Always update previousState to keep it in sync\n    previousState = state;\n  };\n\n  return {\n    element: dialog,\n    setState,\n  };\n}\n\n// Helper function to get all search items from response\nfunction getAllSearchItems(response: SearchResponse): SearchRecord[] {\n  const allItems: SearchRecord[] = [];\n  response.limitedGroups.forEach(group => {\n    allItems.push(...group.items);\n  });\n  return allItems;\n}\n\nfunction renderDialogContents(\n  container: HTMLDivElement,\n  state: SearchDialogState,\n  options: SearchDialogOptions,\n) {\n  console.log('\uD83C\uDFA8 renderDialogContents called:', {\n    status: state.status,\n    query: state.query,\n    selectedIndex: state.selectedIndex,\n    hasResponse: !!state.response\n  });\n\n  container.innerHTML = '';\n\n  if (state.status === 'loading') {\n    container.append(renderLoadingState(state.query));\n    return;\n  }\n\n  if (state.status === 'error') {\n    container.append(renderErrorState());\n    return;\n  }\n\n  const effectiveLength = getEffectiveQueryLength(state.query);\n\n  if (effectiveLength === 0) {\n    console.log('\uD83C\uDFA8 Rendering recent searches with selectedIndex:', state.selectedIndex);\n    container.append(renderRecentSearchesState(state.selectedIndex));\n    \n    // Add footer with keyboard shortcuts and clear button for recent searches\n    const footer = document.createElement('div');\n    footer.className = 'search-dialog__footer';\n    \n    // Create keyboard shortcuts container\n    const shortcutsContainer = document.createElement('div');\n    shortcutsContainer.className = 'search-dialog__shortcuts';\n    \n    // ESC to close\n    const escShortcut = document.createElement('div');\n    escShortcut.className = 'search-dialog__shortcut';\n    const escKey = document.createElement('kbd');\n    escKey.className = 'search-dialog__shortcut-key';\n    escKey.textContent = 'esc';\n    const escText = document.createElement('span');\n    escText.className = 'search-dialog__shortcut-text';\n    escText.textContent = 'to close';\n    escShortcut.append(escKey, escText);\n    \n    // Enter to select\n    const enterShortcut = document.createElement('div');\n    enterShortcut.className = 'search-dialog__shortcut';\n    const enterKey = document.createElement('kbd');\n    enterKey.className = 'search-dialog__shortcut-key';\n    enterKey.innerHTML = '\u21B5'; // Enter symbol\n    const enterText = document.createElement('span');\n    enterText.className = 'search-dialog__shortcut-text';\n    enterText.textContent = 'to select';\n    enterShortcut.append(enterKey, enterText);\n    \n    // Arrows to navigate\n    const arrowsShortcut = document.createElement('div');\n    arrowsShortcut.className = 'search-dialog__shortcut';\n    const arrowsContainer = document.createElement('div');\n    arrowsContainer.className = 'search-dialog__shortcut-arrows';\n    const upArrow = document.createElement('kbd');\n    upArrow.className = 'search-dialog__shortcut-key';\n    upArrow.innerHTML = '\u2191';\n    const downArrow = document.createElement('kbd');\n    downArrow.className = 'search-dialog__shortcut-key';\n    downArrow.innerHTML = '\u2193';\n    arrowsContainer.append(upArrow, downArrow);\n    const arrowsText = document.createElement('span');\n    arrowsText.className = 'search-dialog__shortcut-text';\n    arrowsText.textContent = 'to navigate';\n    arrowsShortcut.append(arrowsContainer, arrowsText);\n    \n    shortcutsContainer.append(escShortcut, enterShortcut, arrowsShortcut);\n    \n    // Create clear button\n    const clearButton = document.createElement('button');\n    clearButton.type = 'button';\n    clearButton.className = 'clear-recent-button';\n    clearButton.textContent = 'Clear recent searches';\n    clearButton.addEventListener('click', () => {\n      recentSearches.clearAll();\n      // Re-render the dialog to show empty state\n      const event = new CustomEvent('refresh-dialog');\n      window.dispatchEvent(event);\n    });\n    \n    footer.append(shortcutsContainer, clearButton);\n    container.append(footer);\n    return;\n  }\n\n  if (isQueryTooShort(state.query)) {\n    container.append(renderShortQueryState());\n    return;\n  }\n\n  const response = state.response;\n  if (!response || response.totalResults === 0) {\n    container.append(renderNoResults(state.query));\n    return;\n  }\n\n  const allItems = getAllSearchItems(response);\n  let itemIndex = 0;\n  \n  response.limitedGroups.forEach((group) => {\n    container.append(renderGroup(group, state.query, state.isMonetarySearch, state.selectedIndex, itemIndex));\n    itemIndex += group.items.length;\n  });\n\n  const footer = document.createElement('div');\n  footer.className = 'search-dialog__footer';\n\n  // Create keyboard shortcuts container\n  const shortcutsContainer = document.createElement('div');\n  shortcutsContainer.className = 'search-dialog__shortcuts';\n  \n  // ESC to close\n  const escShortcut = document.createElement('div');\n  escShortcut.className = 'search-dialog__shortcut';\n  const escKey = document.createElement('kbd');\n  escKey.className = 'search-dialog__shortcut-key';\n  escKey.textContent = 'esc';\n  const escText = document.createElement('span');\n  escText.className = 'search-dialog__shortcut-text';\n  escText.textContent = 'to close';\n  escShortcut.append(escKey, escText);\n  \n  // Enter to select\n  const enterShortcut = document.createElement('div');\n  enterShortcut.className = 'search-dialog__shortcut';\n  const enterKey = document.createElement('kbd');\n  enterKey.className = 'search-dialog__shortcut-key';\n  enterKey.innerHTML = '\u21B5'; // Enter symbol\n  const enterText = document.createElement('span');\n  enterText.className = 'search-dialog__shortcut-text';\n  enterText.textContent = 'to select';\n  enterShortcut.append(enterKey, enterText);\n  \n  // Arrows to navigate\n  const arrowsShortcut = document.createElement('div');\n  arrowsShortcut.className = 'search-dialog__shortcut';\n  const arrowsContainer = document.createElement('div');\n  arrowsContainer.className = 'search-dialog__shortcut-arrows';\n  const upArrow = document.createElement('kbd');\n  upArrow.className = 'search-dialog__shortcut-key';\n  upArrow.innerHTML = '\u2191';\n  const downArrow = document.createElement('kbd');\n  downArrow.className = 'search-dialog__shortcut-key';\n  downArrow.innerHTML = '\u2193';\n  arrowsContainer.append(upArrow, downArrow);\n  const arrowsText = document.createElement('span');\n  arrowsText.className = 'search-dialog__shortcut-text';\n  arrowsText.textContent = 'to navigate';\n  arrowsShortcut.append(arrowsContainer, arrowsText);\n  \n  // CMD/CTRL+Enter to see all results\n  const seeAllShortcut = document.createElement('div');\n  seeAllShortcut.className = 'search-dialog__shortcut';\n  const modifierKey = getModifierKey();\n  const seeAllKeyContainer = document.createElement('div');\n  seeAllKeyContainer.className = 'search-dialog__shortcut-keys';\n  const modifierKeyElement = document.createElement('kbd');\n  modifierKeyElement.className = 'search-dialog__shortcut-key';\n  modifierKeyElement.textContent = modifierKey;\n  const enterKeyElement = document.createElement('kbd');\n  enterKeyElement.className = 'search-dialog__shortcut-key';\n  enterKeyElement.innerHTML = '\u21B5';\n  seeAllKeyContainer.append(modifierKeyElement, enterKeyElement);\n  const seeAllText = document.createElement('span');\n  seeAllText.className = 'search-dialog__shortcut-text';\n  seeAllText.textContent = 'to see all';\n  seeAllShortcut.append(seeAllKeyContainer, seeAllText);\n  \n  shortcutsContainer.append(escShortcut, enterShortcut, arrowsShortcut, seeAllShortcut);\n\n  const seeAllButton = document.createElement('button');\n  seeAllButton.type = 'button';\n  seeAllButton.className = 'see-all-button';\n  seeAllButton.textContent = `See ${response.totalResults} result${response.totalResults === 1 ? '' : 's'} \u2192`;\n  seeAllButton.addEventListener('click', () => options.onSeeAllResults());\n\n  footer.append(shortcutsContainer, seeAllButton);\n  container.append(footer);\n}\n\nfunction renderEmptyState(): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'search-dialog__empty';\n  wrapper.innerHTML = `\n    <h3>Quick search</h3>\n    <p>Start typing or press <kbd>/</kbd> to jump into the search bar.</p>\n  `;\n  return wrapper;\n}\n\nfunction renderRecentSearchesState(selectedIndex?: number): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'search-dialog__recent';\n  \n  const settings = settingsStore.getState();\n  const recentSearchesList = recentSearches.getFormattedRecentSearches(settings.recentSearchesDisplayLimit);\n  \n  if (recentSearchesList.length === 0) {\n    wrapper.innerHTML = `\n      <h3>Quick search</h3>\n      <p>Start typing or press <kbd>/</kbd> to jump into the search bar.</p>\n    `;\n    return wrapper;\n  }\n  \n  // Create the header\n  const header = document.createElement('div');\n  header.className = 'search-dialog__recent-header';\n  header.innerHTML = `\n    <h4>RECENT SEARCHES</h4>\n  `;\n  wrapper.append(header);\n  \n  // Create the list\n  const list = document.createElement('ul');\n  list.className = 'search-dialog__recent-list';\n  \n  recentSearchesList.forEach((search, index) => {\n    const item = document.createElement('li');\n    item.className = 'search-dialog__recent-item';\n    item.setAttribute('data-query', search.query);\n    \n    // Add selected state\n    if (selectedIndex === index) {\n      item.classList.add('search-dialog__recent-item--selected');\n    }\n    \n    // Create the main content container\n    const contentContainer = document.createElement('div');\n    contentContainer.className = 'search-dialog__recent-content';\n    \n    // Create the query text\n    const queryText = document.createElement('div');\n    queryText.className = 'search-dialog__recent-query';\n    queryText.textContent = search.query;\n    \n    // Create the metadata container\n    const metaText = document.createElement('div');\n    metaText.className = 'search-dialog__recent-meta';\n    \n    // Add result count if available\n    if (search.resultCountText) {\n      const resultText = document.createElement('span');\n      resultText.className = 'search-dialog__recent-results';\n      resultText.textContent = search.resultCountText;\n      metaText.append(resultText);\n    }\n    \n    // Add time ago\n    const timeText = document.createElement('span');\n    timeText.className = 'search-dialog__recent-time';\n    timeText.textContent = search.timeAgo;\n    metaText.append(timeText);\n    \n    contentContainer.append(queryText, metaText);\n    \n    // Create the delete button\n    const deleteButton = document.createElement('button');\n    deleteButton.type = 'button';\n    deleteButton.className = 'search-dialog__recent-delete';\n    deleteButton.setAttribute('aria-label', `Delete search: ${search.query}`);\n    deleteButton.innerHTML = '\u00D7';\n    \n    // Add delete button click handler\n    deleteButton.addEventListener('click', (e) => {\n      e.stopPropagation(); // Prevent triggering the item click\n      recentSearches.removeSearch(search.id);\n      // Re-render the dialog to show updated list\n      const event = new CustomEvent('refresh-dialog');\n      window.dispatchEvent(event);\n    });\n    \n    item.append(contentContainer, deleteButton);\n    \n    // Add click handler to perform the search\n    item.addEventListener('click', () => {\n      // Trigger a search with this query\n      const event = new CustomEvent('search-query', {\n        detail: { query: search.query }\n      });\n      window.dispatchEvent(event);\n    });\n    \n    // Add keyboard support\n    item.setAttribute('tabindex', '0');\n    item.setAttribute('role', 'button');\n    item.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        const event = new CustomEvent('search-query', {\n          detail: { query: search.query }\n        });\n        window.dispatchEvent(event);\n      }\n    });\n    \n    list.append(item);\n  });\n  \n  wrapper.append(list);\n  \n  return wrapper;\n}\n\nfunction renderShortQueryState(): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'search-dialog__empty';\n  wrapper.innerHTML = `\n    <h3>Keep typing</h3>\n    <p>Enter at least ${MIN_EFFECTIVE_QUERY_LENGTH} characters to see results.</p>\n  `;\n  return wrapper;\n}\n\nfunction renderLoadingState(query: string): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'search-dialog__loading';\n  wrapper.innerHTML = `\n    <div class=\"spinner\" aria-hidden=\"true\"></div>\n    <div>\n      <p>Searching for \u201C${escapeHtml(query)}\u201D\u2026</p>\n    </div>\n  `;\n  return wrapper;\n}\n\nfunction renderErrorState(): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'search-dialog__error';\n  wrapper.innerHTML = `\n    <h3>We hit a snag</h3>\n    <p>Try again in a few seconds.</p>\n  `;\n  return wrapper;\n}\n\nfunction renderNoResults(query: string): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'search-dialog__empty';\n  wrapper.innerHTML = `\n    <h3>No matches</h3>\n    <p>We couldn\u2019t find results for \u201C${escapeHtml(query)}\u201D. Adjust your keywords or filters.</p>\n  `;\n  return wrapper;\n}\n\n\nfunction renderGroup(group: SearchGroup, query: string, isMonetarySearch?: boolean, selectedIndex?: number, startIndex: number = 0): HTMLElement {\n  const section = document.createElement('section');\n  section.className = 'search-dialog__group';\n\n  const heading = document.createElement('h4');\n  heading.textContent = formatEntityType(group.entityType, { plural: true });\n  section.append(heading);\n\n  const list = document.createElement('ul');\n  list.className = 'search-dialog__list';\n\n  group.items.forEach((item, index) => {\n    const globalIndex = startIndex + index;\n    const isSelected = selectedIndex === globalIndex;\n    list.append(renderGroupItem(item, query, isMonetarySearch, isSelected, globalIndex));\n  });\n\n  section.append(list);\n  return section;\n}\n\nfunction renderGroupItem(item: SearchRecord, query: string, isMonetarySearch?: boolean, isSelected?: boolean, itemIndex?: number): HTMLLIElement {\n  const li = document.createElement('li');\n  \n  // Add document ID metadata for debugging\n  li.setAttribute('data-document-id', item.id);\n  \n  // Add item index for scrolling\n  if (itemIndex !== undefined) {\n    li.setAttribute('data-item-index', itemIndex.toString());\n  }\n  \n  // Add Buildertrend-specific styling and behavior\n  if (isBuildertrendRecord(item)) {\n    li.className = 'search-dialog__item search-dialog__item--buildertrend';\n    li.setAttribute('data-url', item.url);\n    li.setAttribute('tabindex', '0');\n    li.setAttribute('role', 'button');\n    li.setAttribute('aria-label', `Navigate to ${item.title}`);\n    \n    // Add click handler for navigation\n    li.addEventListener('click', () => {\n      // TODO: Implement navigation logic\n      console.log('Navigate to:', item.url);\n    });\n    \n    // Add keyboard support\n    li.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        console.log('Navigate to:', item.url);\n      }\n    });\n  } else {\n    li.className = 'search-dialog__item';\n  }\n\n  // Add selected state\n  if (isSelected) {\n    li.classList.add('search-dialog__item--selected');\n  }\n\n  // Add hover effects\n  li.addEventListener('mouseenter', () => {\n    li.classList.add('search-dialog__item--hover');\n  });\n\n  li.addEventListener('mouseleave', () => {\n    li.classList.remove('search-dialog__item--hover');\n  });\n\n  const highlightFn = getHighlightFunction(query, isMonetarySearch || false);\n\n  const header = document.createElement('div');\n  header.className = 'search-dialog__item-header';\n\n  // Add icon for Buildertrend records\n  if (isBuildertrendRecord(item)) {\n    const icon = document.createElement('i');\n    icon.className = 'search-dialog__item-icon';\n    icon.setAttribute('data-lucide', item.icon);\n    header.append(icon);\n    \n    // Update icons after DOM is ready\n    requestAnimationFrame(() => {\n      if (window.lucide) {\n        try {\n          window.lucide.createIcons();\n        } catch (error) {\n          console.warn('Error updating icons:', error);\n        }\n      }\n    });\n  }\n\n  const title = document.createElement('div');\n  title.className = 'search-dialog__item-title';\n  title.innerHTML = highlightFn(item.title, query);\n  header.append(title);\n\n  const meta = document.createElement('div');\n  meta.className = 'search-dialog__item-meta';\n  const metaText = buildItemMeta(item, query, isMonetarySearch);\n  meta.innerHTML = highlightFn(metaText, query);\n\n  // Add context line showing what was matched (skip for Buildertrend)\n  if (!isBuildertrendRecord(item)) {\n    const match = findBestMatch(item, query);\n    if (match && match.field !== 'title') {\n      const context = document.createElement('div');\n      context.className = 'search-context';\n      const highlightedSnippet = isMonetarySearch ? highlightMonetaryValuesWithPartialMatches(match.content, query) : getContextSnippet(match, 80, query);\n      context.innerHTML = highlightedSnippet;\n      li.append(header, meta, context);\n    } else {\n      li.append(header, meta);\n    }\n  } else {\n    li.append(header, meta);\n  }\n\n  // Add line item matches for non-Document entities\n  if (query && isFinancialRecord(item)) {\n    const lineItemsMatch = renderMiniLineItems(item, query, isMonetarySearch);\n    if (lineItemsMatch) {\n      li.append(lineItemsMatch);\n    }\n  }\n\n  return li;\n}\n\nfunction buildItemMeta(item: SearchRecord, query?: string, isMonetarySearch?: boolean): string {\n  const parts: string[] = [];\n\n  if (isBuildertrendRecord(item)) {\n    parts.push(item.path);\n    parts.push(item.description);\n    return parts.filter(Boolean).join(' \u2022 ');\n  }\n\n  parts.push(item.project);\n\n  if (item.entityType === 'Document') {\n    parts.push((item as any).documentType);\n    parts.push(`Updated ${formatDate(item.updatedAt)}`);\n    return parts.filter(Boolean).join(' \u2022 ');\n  }\n\n  if (isFinancialRecord(item)) {\n    parts.push(formatCurrency(item.totalValue));\n    if (item.status) {\n      parts.push(item.status);\n    }\n    return parts.filter(Boolean).join(' \u2022 ');\n  }\n\n  if (isPersonRecord(item)) {\n    parts.push(item.personType);\n    parts.push(item.jobTitle);\n    if (item.associatedOrganization) {\n      parts.push(item.associatedOrganization);\n    }\n    parts.push(item.location);\n    return parts.filter(Boolean).join(' \u2022 ');\n  }\n\n  if (isOrganizationRecord(item)) {\n    parts.push(item.organizationType);\n    parts.push(item.tradeFocus);\n    parts.push(item.serviceArea);\n    return parts.filter(Boolean).join(' \u2022 ');\n  }\n\n  return parts.filter(Boolean).join(' \u2022 ');\n}\n\nfunction renderMiniLineItems(item: SearchRecord, query: string, isMonetarySearch?: boolean): HTMLElement | null {\n  if (!isFinancialRecord(item)) {\n    return null;\n  }\n\n  const items = item.lineItems ?? [];\n  if (items.length === 0) {\n    return null;\n  }\n\n  const highlightFn = getHighlightFunction(query, isMonetarySearch || false);\n\n  // Find line items that have actual highlighting matches (not just text matches)\n  const matchingItems = items.filter((lineItem: any) => {\n    const searchableFields = [\n      { value: lineItem.lineItemTitle, field: 'title' },\n      { value: lineItem.lineItemDescription, field: 'description' },\n      { value: lineItem.lineItemType, field: 'type' },\n      { value: lineItem.lineItemQuantity?.toString(), field: 'quantity' },\n      { value: lineItem.lineItemQuantityUnitOfMeasure, field: 'unit' },\n      { value: formatCurrency(lineItem.lineItemUnitPrice), field: 'unitPrice' },\n      { value: formatCurrency(lineItem.lineItemTotal), field: 'total' },\n      // Add cost code fields for matching\n      { value: lineItem.costCode, field: 'costCode' },\n      { value: lineItem.costCodeName, field: 'costCodeName' },\n      { value: lineItem.costCodeCategory, field: 'costCodeCategory' },\n      { value: lineItem.costCodeCategoryName, field: 'costCodeCategoryName' }\n    ];\n    \n    // Check if any field has actual highlighting (contains <mark> tags)\n    return searchableFields.some(({ value }) => {\n      if (!value) return false;\n      \n      const highlighted = highlightFn(value, query);\n      return highlighted.includes('<mark');\n    });\n  });\n\n  if (matchingItems.length === 0) {\n    return null;\n  }\n\n  const wrapper = document.createElement('small');\n  wrapper.className = 'mini-line-items';\n\n  const table = document.createElement('table');\n  table.className = 'mini-line-items__table';\n\n  // Show up to 3 matching line items\n  const displayItems = matchingItems.slice(0, 3);\n  \n  displayItems.forEach((line: any) => {\n    const row = document.createElement('tr');\n    const unitPrice = formatCurrency(line.lineItemUnitPrice);\n    const total = formatCurrency(line.lineItemTotal);\n    const quantity = `${line.lineItemQuantity} ${line.lineItemQuantityUnitOfMeasure}`;\n    \n    row.innerHTML = `\n      <td class=\"mini-line-items__description\">${highlightFn(line.lineItemTitle, query)}</td>\n      <td class=\"mini-line-items__type\">${highlightFn(line.lineItemType, query)}</td>\n      <td class=\"mini-line-items__quantity\">${highlightFn(quantity, query)}</td>\n      <td class=\"mini-line-items__unit-price\">${highlightFn(unitPrice, query)}</td>\n      <td class=\"mini-line-items__total\">${highlightFn(total, query)}</td>\n    `;\n    table.append(row);\n  });\n\n  // Add \"more items\" row if there are additional matching items\n  if (matchingItems.length > 3) {\n    const moreRow = document.createElement('tr');\n    moreRow.className = 'mini-line-items__more-row';\n    const remaining = matchingItems.length - 3;\n    moreRow.innerHTML = `\n      <td colspan=\"5\" class=\"mini-line-items__more\">+${remaining} more matching line item${remaining === 1 ? '' : 's'}\u2026</td>\n    `;\n    table.append(moreRow);\n  }\n\n  wrapper.append(table);\n  return wrapper;\n}\n\nfunction escapeHtml(value: string): string {\n  const div = document.createElement('div');\n  div.textContent = value;\n  return div.innerHTML;\n}\n", "import { SearchRecord, isFinancialRecord, isPersonRecord, isOrganizationRecord } from '../types';\n\n// Relationship types for extensibility\nexport type RelationshipType = \n  | 'vendor'           // Bill \u2192 Organization (vendor)\n  | 'primaryContact'   // Organization \u2192 Person (primary contact)\n  | 'associatedOrg'    // Person \u2192 Organization (associated organization)\n  | 'project'          // Any entity \u2192 Project (via project field)\n  | 'client'           // Any entity \u2192 Client (via client field)\n  | 'inferred'         // Inferred from text content\n  | 'temporal'         // Recent activity with same entities\n  | 'financial'        // Financial relationships (bills, payments, etc.);\n\n// Relationship confidence levels\nexport type RelationshipConfidence = 'explicit' | 'inferred' | 'weak';\n\n// Relationship interface\nexport interface Relationship {\n  id: string;\n  type: RelationshipType;\n  confidence: RelationshipConfidence;\n  sourceEntityId: string;\n  targetEntityId: string;\n  targetEntityType: string;\n  targetEntityTitle: string;\n  metadata?: {\n    sourceField?: string;        // Which field in source entity created this relationship\n    targetField?: string;        // Which field in target entity matched\n    matchScore?: number;         // For inferred relationships\n    lastInteraction?: string;    // For temporal relationships\n  };\n}\n\n// Smart action interface\nexport interface SmartAction {\n  id: string;\n  label: string;\n  description?: string;\n  href: string;\n  icon?: string;\n  priority: number; // Lower number = higher priority\n  relationshipType?: RelationshipType;\n  entityTypes: string[]; // Which entity types this action applies to\n}\n\n// Relationship lookup tables for fast access\nexport interface RelationshipLookup {\n  bySource: Map<string, Relationship[]>;     // sourceEntityId \u2192 relationships\n  byTarget: Map<string, Relationship[]>;     // targetEntityId \u2192 relationships\n  byType: Map<RelationshipType, Relationship[]>; // relationshipType \u2192 relationships\n}\n\n// Smart actions configuration\nexport const SMART_ACTIONS: Record<string, SmartAction[]> = {\n  'Bill': [\n    {\n      id: 'pay-bill',\n      label: 'Pay Bill',\n      description: 'Process payment for this bill',\n      href: '#',\n      icon: 'credit-card',\n      priority: 1,\n      relationshipType: 'vendor',\n      entityTypes: ['Bill']\n    },\n    {\n      id: 'view-vendor-bills',\n      label: 'View All Bills from Vendor',\n      description: 'See all bills from this vendor',\n      href: '#',\n      icon: 'list',\n      priority: 2,\n      relationshipType: 'vendor',\n      entityTypes: ['Bill']\n    },\n    {\n      id: 'contact-vendor',\n      label: 'Contact Vendor',\n      description: 'Get in touch with the vendor',\n      href: '#',\n      icon: 'mail',\n      priority: 3,\n      relationshipType: 'vendor',\n      entityTypes: ['Bill']\n    },\n    {\n      id: 'view-payment-history',\n      label: 'View Payment History',\n      description: 'See payment history for this vendor',\n      href: '#',\n      icon: 'history',\n      priority: 4,\n      relationshipType: 'vendor',\n      entityTypes: ['Bill']\n    },\n    {\n      id: 'view-project-bills',\n      label: 'View All Project Bills',\n      description: 'See all bills for this project',\n      href: '#',\n      icon: 'folder',\n      priority: 5,\n      relationshipType: 'project',\n      entityTypes: ['Bill']\n    }\n  ],\n  'Person': [\n    {\n      id: 'send-message',\n      label: 'Send Message',\n      description: 'Send a message to this person',\n      href: '#',\n      icon: 'message',\n      priority: 1,\n      entityTypes: ['Person']\n    },\n    {\n      id: 'view-all-activity',\n      label: 'View All Activity',\n      description: 'See all activity with this person',\n      href: '#',\n      icon: 'activity',\n      priority: 2,\n      entityTypes: ['Person']\n    },\n    {\n      id: 'view-organization',\n      label: 'View Organization',\n      description: 'See organization details',\n      href: '#',\n      icon: 'building',\n      priority: 3,\n      relationshipType: 'associatedOrg',\n      entityTypes: ['Person']\n    },\n    {\n      id: 'schedule-meeting',\n      label: 'Schedule Meeting',\n      description: 'Schedule a meeting with this person',\n      href: '#',\n      icon: 'calendar',\n      priority: 4,\n      entityTypes: ['Person']\n    },\n    {\n      id: 'view-project-activity',\n      label: 'View Project Activity',\n      description: 'See all activity for this project',\n      href: '#',\n      icon: 'folder',\n      priority: 5,\n      relationshipType: 'project',\n      entityTypes: ['Person']\n    }\n  ],\n  'Organization': [\n    {\n      id: 'view-all-bills',\n      label: 'View All Bills',\n      description: 'See all bills from this organization',\n      href: '#',\n      icon: 'list',\n      priority: 1,\n      entityTypes: ['Organization']\n    },\n    {\n      id: 'payment-summary',\n      label: 'Payment Summary',\n      description: 'View payment summary for this vendor',\n      href: '#',\n      icon: 'dollar-sign',\n      priority: 2,\n      entityTypes: ['Organization']\n    },\n    {\n      id: 'contact-primary-person',\n      label: 'Contact Primary Person',\n      description: 'Get in touch with the primary contact',\n      href: '#',\n      icon: 'user',\n      priority: 3,\n      relationshipType: 'primaryContact',\n      entityTypes: ['Organization']\n    },\n    {\n      id: 'view-all-projects',\n      label: 'View All Projects',\n      description: 'See all projects with this organization',\n      href: '#',\n      icon: 'folder',\n      priority: 4,\n      entityTypes: ['Organization']\n    },\n    {\n      id: 'performance-summary',\n      label: 'Performance Summary',\n      description: 'View vendor performance metrics',\n      href: '#',\n      icon: 'bar-chart',\n      priority: 5,\n      entityTypes: ['Organization']\n    }\n  ]\n};\n\nexport class RelationshipEngine {\n  private relationships: Relationship[] = [];\n  private lookup: RelationshipLookup = {\n    bySource: new Map(),\n    byTarget: new Map(),\n    byType: new Map()\n  };\n\n  constructor(private corpus: SearchRecord[]) {\n    this.buildRelationships();\n  }\n\n  /**\n   * Build all relationships from the corpus\n   */\n  private buildRelationships(): void {\n    this.relationships = [];\n    this.lookup = {\n      bySource: new Map(),\n      byTarget: new Map(),\n      byType: new Map()\n    };\n\n    // Build explicit relationships\n    this.buildExplicitRelationships();\n    \n    // Build inferred relationships\n    this.buildInferredRelationships();\n    \n    // Build temporal relationships\n    this.buildTemporalRelationships();\n\n    // Build lookup tables\n    this.buildLookupTables();\n  }\n\n  /**\n   * Build explicit relationships from entity metadata\n   */\n  private buildExplicitRelationships(): void {\n    for (const entity of this.corpus) {\n      // Bill \u2192 Organization (vendor relationship)\n      if (isFinancialRecord(entity) && entity.entityType === 'Bill') {\n        const vendorName = entity.metadata?.vendor as string;\n        if (vendorName) {\n          const vendorOrg = this.findOrganizationByName(vendorName);\n          if (vendorOrg) {\n            this.addRelationship({\n              id: `bill-vendor-${entity.id}-${vendorOrg.id}`,\n              type: 'vendor',\n              confidence: 'explicit',\n              sourceEntityId: entity.id,\n              targetEntityId: vendorOrg.id,\n              targetEntityType: vendorOrg.entityType,\n              targetEntityTitle: vendorOrg.title,\n              metadata: {\n                sourceField: 'metadata.vendor',\n                targetField: 'title'\n              }\n            });\n          }\n        }\n      }\n\n      // Organization \u2192 Person (primary contact relationship)\n      if (isOrganizationRecord(entity)) {\n        const primaryContactName = entity.primaryContact;\n        if (primaryContactName) {\n          const contactPerson = this.findPersonByName(primaryContactName);\n          if (contactPerson) {\n            this.addRelationship({\n              id: `org-contact-${entity.id}-${contactPerson.id}`,\n              type: 'primaryContact',\n              confidence: 'explicit',\n              sourceEntityId: entity.id,\n              targetEntityId: contactPerson.id,\n              targetEntityType: contactPerson.entityType,\n              targetEntityTitle: contactPerson.title,\n              metadata: {\n                sourceField: 'primaryContact',\n                targetField: 'title'\n              }\n            });\n          }\n        }\n      }\n\n      // Person \u2192 Organization (associated organization relationship)\n      if (isPersonRecord(entity)) {\n        const associatedOrgName = entity.associatedOrganization;\n        if (associatedOrgName) {\n          const associatedOrg = this.findOrganizationByName(associatedOrgName);\n          if (associatedOrg) {\n            this.addRelationship({\n              id: `person-org-${entity.id}-${associatedOrg.id}`,\n              type: 'associatedOrg',\n              confidence: 'explicit',\n              sourceEntityId: entity.id,\n              targetEntityId: associatedOrg.id,\n              targetEntityType: associatedOrg.entityType,\n              targetEntityTitle: associatedOrg.title,\n              metadata: {\n                sourceField: 'associatedOrganization',\n                targetField: 'title'\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Build inferred relationships from text content\n   */\n  private buildInferredRelationships(): void {\n    for (const entity of this.corpus) {\n      // Look for person names in text content\n      const personNames = this.extractPersonNames(entity);\n      for (const personName of personNames) {\n        const person = this.findPersonByName(personName);\n        if (person && person.id !== entity.id) {\n          this.addRelationship({\n            id: `inferred-person-${entity.id}-${person.id}`,\n            type: 'inferred',\n            confidence: 'inferred',\n            sourceEntityId: entity.id,\n            targetEntityId: person.id,\n            targetEntityType: person.entityType,\n            targetEntityTitle: person.title,\n            metadata: {\n              sourceField: 'text-content',\n              targetField: 'title',\n              matchScore: 0.8 // Basic fuzzy matching score\n            }\n          });\n        }\n      }\n\n      // Look for organization names in text content\n      const orgNames = this.extractOrganizationNames(entity);\n      for (const orgName of orgNames) {\n        const org = this.findOrganizationByName(orgName);\n        if (org && org.id !== entity.id) {\n          this.addRelationship({\n            id: `inferred-org-${entity.id}-${org.id}`,\n            type: 'inferred',\n            confidence: 'inferred',\n            sourceEntityId: entity.id,\n            targetEntityId: org.id,\n            targetEntityType: org.entityType,\n            targetEntityTitle: org.title,\n            metadata: {\n              sourceField: 'text-content',\n              targetField: 'title',\n              matchScore: 0.8\n            }\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Build temporal relationships (recent activity with same entities)\n   */\n  private buildTemporalRelationships(): void {\n    const now = new Date();\n    const thirtyDaysAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n    // Group entities by project and client to find temporal relationships\n    const projectGroups = new Map<string, SearchRecord[]>();\n    const clientGroups = new Map<string, SearchRecord[]>();\n\n    for (const entity of this.corpus) {\n      if (entity.project) {\n        if (!projectGroups.has(entity.project)) {\n          projectGroups.set(entity.project, []);\n        }\n        projectGroups.get(entity.project)!.push(entity);\n      }\n\n      if (entity.client) {\n        if (!clientGroups.has(entity.client)) {\n          clientGroups.set(entity.client, []);\n        }\n        clientGroups.get(entity.client)!.push(entity);\n      }\n    }\n\n    // Create temporal relationships for recent activity\n    for (const [project, entities] of projectGroups) {\n      const recentEntities = entities.filter(e => new Date(e.updatedAt) > thirtyDaysAgo);\n      if (recentEntities.length > 1) {\n        // Create relationships between recent entities in the same project\n        for (let i = 0; i < recentEntities.length; i++) {\n          for (let j = i + 1; j < recentEntities.length; j++) {\n            const entity1 = recentEntities[i];\n            const entity2 = recentEntities[j];\n            \n            this.addRelationship({\n              id: `temporal-project-${entity1.id}-${entity2.id}`,\n              type: 'temporal',\n              confidence: 'weak',\n              sourceEntityId: entity1.id,\n              targetEntityId: entity2.id,\n              targetEntityType: entity2.entityType,\n              targetEntityTitle: entity2.title,\n              metadata: {\n                sourceField: 'project',\n                targetField: 'project',\n                lastInteraction: entity2.updatedAt\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Build lookup tables for fast relationship queries\n   */\n  private buildLookupTables(): void {\n    for (const relationship of this.relationships) {\n      // By source\n      if (!this.lookup.bySource.has(relationship.sourceEntityId)) {\n        this.lookup.bySource.set(relationship.sourceEntityId, []);\n      }\n      this.lookup.bySource.get(relationship.sourceEntityId)!.push(relationship);\n\n      // By target\n      if (!this.lookup.byTarget.has(relationship.targetEntityId)) {\n        this.lookup.byTarget.set(relationship.targetEntityId, []);\n      }\n      this.lookup.byTarget.get(relationship.targetEntityId)!.push(relationship);\n\n      // By type\n      if (!this.lookup.byType.has(relationship.type)) {\n        this.lookup.byType.set(relationship.type, []);\n      }\n      this.lookup.byType.get(relationship.type)!.push(relationship);\n    }\n  }\n\n  /**\n   * Add a relationship to the engine\n   */\n  private addRelationship(relationship: Relationship): void {\n    this.relationships.push(relationship);\n  }\n\n  /**\n   * Find organization by name (fuzzy matching)\n   */\n  private findOrganizationByName(name: string): SearchRecord | null {\n    const normalizedName = name.toLowerCase().trim();\n    \n    for (const entity of this.corpus) {\n      if (isOrganizationRecord(entity)) {\n        const entityName = entity.title.toLowerCase().trim();\n        if (entityName === normalizedName || \n            entityName.includes(normalizedName) || \n            normalizedName.includes(entityName)) {\n          return entity;\n        }\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Find person by name (fuzzy matching)\n   */\n  private findPersonByName(name: string): SearchRecord | null {\n    const normalizedName = name.toLowerCase().trim();\n    \n    for (const entity of this.corpus) {\n      if (isPersonRecord(entity)) {\n        const entityName = entity.title.toLowerCase().trim();\n        if (entityName === normalizedName || \n            entityName.includes(normalizedName) || \n            normalizedName.includes(entityName)) {\n          return entity;\n        }\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Extract person names from entity text content\n   */\n  private extractPersonNames(entity: SearchRecord): string[] {\n    const names: string[] = [];\n    const text = `${entity.title} ${entity.summary}`.toLowerCase();\n    \n    // Look for person names in the corpus\n    for (const person of this.corpus) {\n      if (isPersonRecord(person) && person.id !== entity.id) {\n        const personName = person.title.toLowerCase();\n        if (text.includes(personName)) {\n          names.push(person.title);\n        }\n      }\n    }\n    \n    return names;\n  }\n\n  /**\n   * Extract organization names from entity text content\n   */\n  private extractOrganizationNames(entity: SearchRecord): string[] {\n    const names: string[] = [];\n    const text = `${entity.title} ${entity.summary}`.toLowerCase();\n    \n    // Look for organization names in the corpus\n    for (const org of this.corpus) {\n      if (isOrganizationRecord(org) && org.id !== entity.id) {\n        const orgName = org.title.toLowerCase();\n        if (text.includes(orgName)) {\n          names.push(org.title);\n        }\n      }\n    }\n    \n    return names;\n  }\n\n  /**\n   * Get relationships for a specific entity\n   */\n  getRelationships(entityId: string, options?: {\n    type?: RelationshipType;\n    confidence?: RelationshipConfidence;\n    includeInferred?: boolean;\n  }): Relationship[] {\n    const relationships = this.lookup.bySource.get(entityId) || [];\n    \n    return relationships.filter(rel => {\n      if (options?.type && rel.type !== options.type) return false;\n      if (options?.confidence && rel.confidence !== options.confidence) return false;\n      if (options?.includeInferred === false && rel.confidence === 'inferred') return false;\n      return true;\n    });\n  }\n\n  /**\n   * Get smart actions for a specific entity\n   */\n  getSmartActions(entity: SearchRecord, includeInferred: boolean = true): SmartAction[] {\n    const entityType = entity.entityType;\n    const availableActions = SMART_ACTIONS[entityType] || [];\n    \n    // Get relationships for this entity\n    const relationships = this.getRelationships(entity.id, { includeInferred });\n    \n    // Filter actions based on available relationships\n    const applicableActions = availableActions.filter(action => {\n      if (!action.relationshipType) return true; // Action doesn't require a relationship\n      \n      // Check if we have the required relationship type\n      return relationships.some(rel => rel.type === action.relationshipType);\n    });\n    \n    // Sort by priority\n    return applicableActions.sort((a, b) => a.priority - b.priority);\n  }\n\n  /**\n   * Get related entities for a specific entity\n   */\n  getRelatedEntities(entityId: string, options?: {\n    type?: RelationshipType;\n    confidence?: RelationshipConfidence;\n    includeInferred?: boolean;\n    limit?: number;\n  }): SearchRecord[] {\n    const relationships = this.getRelationships(entityId, options);\n    const relatedEntities: SearchRecord[] = [];\n    \n    for (const rel of relationships) {\n      const entity = this.corpus.find(e => e.id === rel.targetEntityId);\n      if (entity) {\n        relatedEntities.push(entity);\n      }\n    }\n    \n    // Remove duplicates and apply limit\n    const uniqueEntities = relatedEntities.filter((entity, index, self) => \n      index === self.findIndex(e => e.id === entity.id)\n    );\n    \n    return options?.limit ? uniqueEntities.slice(0, options.limit) : uniqueEntities;\n  }\n\n  /**\n   * Get all relationships (for debugging)\n   */\n  getAllRelationships(): Relationship[] {\n    return [...this.relationships];\n  }\n\n  /**\n   * Get relationship statistics\n   */\n  getStats(): {\n    total: number;\n    byType: Record<RelationshipType, number>;\n    byConfidence: Record<RelationshipConfidence, number>;\n  } {\n    const stats = {\n      total: this.relationships.length,\n      byType: {} as Record<RelationshipType, number>,\n      byConfidence: {} as Record<RelationshipConfidence, number>\n    };\n    \n    for (const rel of this.relationships) {\n      stats.byType[rel.type] = (stats.byType[rel.type] || 0) + 1;\n      stats.byConfidence[rel.confidence] = (stats.byConfidence[rel.confidence] || 0) + 1;\n    }\n    \n    return stats;\n  }\n}\n", "import {\n  BuildertrendRecord,\n  DocumentRecord,\n  FacetKey,\n  FacetSelectionState,\n  FacetValue,\n  FinancialRecord,\n  OrganizationRecord,\n  PersonRecord,\n  SearchEntityType,\n  SearchGroup,\n  SearchOptions,\n  SearchRecord,\n  SearchResponse,\n  isBuildertrendRecord,\n  isFinancialRecord,\n  isOrganizationRecord,\n  isPersonRecord,\n} from '../types';\nimport { settingsStore } from '../state/settingsStore';\nimport { \n  matchesMonetaryQuery as matchesMonetaryValue, \n  extractMonetaryAmounts, \n  hasMonetaryValue,\n  parseMonetaryString,\n  numberToMonetary,\n  areMonetaryValuesEqual\n} from '../utils/monetary';\nimport { RelationshipEngine, Relationship, SmartAction } from '../utils/relationshipEngine';\n\nconst GROUP_ORDER: SearchEntityType[] = [\n  'Buildertrend',\n  'Document',\n  'Person',\n  'Organization',\n  'ClientInvoice',\n  'PurchaseOrder',\n  'Bill',\n  'Receipt',\n  'Payment',\n];\n\nconst FACET_KEYS: FacetKey[] = [\n  'entityType',\n  'project',\n  'status',\n  'documentType',\n  'client',\n  'issuedDate',\n  'totalValue',\n  'personType',\n  'contactOrganization',\n  'organizationType',\n  'tradeFocus',\n  'costCodeCategory',\n  'costCode',\n  'groupBy',\n];\n\n// Load corpus from multiple files\nlet CORPUS: SearchRecord[] = [];\nlet RELATIONSHIP_ENGINE: RelationshipEngine | null = null;\n\nasync function loadCorpus(): Promise<SearchRecord[]> {\n  if (CORPUS.length > 0) {\n    return CORPUS; // Return cached corpus if already loaded\n  }\n\n  try {\n    const allRecords: any[] = [];\n    \n    // Load Buildertrend corpus first (for priority ordering)\n    try {\n      const buildertrendResponse = await fetch('./buildertrend-corpus.json');\n      const buildertrendData = await buildertrendResponse.json();\n      allRecords.push(...buildertrendData);\n    } catch (error) {\n      console.warn('Could not load Buildertrend corpus:', error);\n    }\n    \n    // Load the index file to get metadata about the split files\n    const indexResponse = await fetch('./corpus-parts/index.json');\n    const indexData = await indexResponse.json();\n    \n    // Load each corpus part file\n    for (const fileInfo of indexData.files) {\n      const response = await fetch(`./corpus-parts/${fileInfo.filename}`);\n      const partData = await response.json();\n      allRecords.push(...partData);\n    }\n    \n    CORPUS = allRecords.map((record) => normalizeRecord(record));\n    \n    // Initialize relationship engine (with error handling)\n    try {\n      RELATIONSHIP_ENGINE = new RelationshipEngine(CORPUS);\n      console.log('\u2705 Relationship engine initialized with', CORPUS.length, 'records');\n    } catch (error) {\n      console.warn('\u26A0\uFE0F Failed to initialize relationship engine:', error);\n      RELATIONSHIP_ENGINE = null;\n    }\n    \n    return CORPUS;\n  } catch (error) {\n    console.error('Error loading corpus:', error);\n    // Fallback to empty corpus\n    CORPUS = [];\n    return CORPUS;\n  }\n}\n\nfunction normalizeRecord(record: any): SearchRecord {\n  // Clean up metadata to remove undefined values and ensure type safety\n  const cleanMetadata: Record<string, string | number | boolean | null> = {};\n  if (record.metadata) {\n    for (const [key, value] of Object.entries(record.metadata)) {\n      if (value !== undefined) {\n        cleanMetadata[key] = value as string | number | boolean | null;\n      }\n    }\n  }\n\n  const baseRecord = {\n    ...record,\n    tags: record.tags ?? [],\n    metadata: cleanMetadata,\n  };\n\n  switch (record.entityType as SearchEntityType) {\n    case 'Buildertrend':\n      return {\n        ...baseRecord,\n        entityType: 'Buildertrend',\n        path: record.path,\n        description: record.description,\n        icon: record.icon,\n        url: record.url,\n        triggerQueries: record.triggerQueries,\n      } as BuildertrendRecord;\n    case 'Document':\n      return {\n        ...baseRecord,\n        entityType: 'Document',\n        documentType: record.documentType,\n        author: record.author,\n      } as DocumentRecord;\n    case 'Person':\n      return {\n        ...baseRecord,\n        entityType: 'Person',\n        personType: record.personType,\n        jobTitle: record.jobTitle,\n        associatedOrganization: record.associatedOrganization,\n        email: record.email,\n        phone: record.phone,\n        location: record.location,\n        tradeFocus: record.tradeFocus,\n      } as PersonRecord;\n    case 'Organization':\n      return {\n        ...baseRecord,\n        entityType: 'Organization',\n        organizationType: record.organizationType,\n        tradeFocus: record.tradeFocus,\n        serviceArea: record.serviceArea,\n        primaryContact: record.primaryContact,\n        phone: record.phone,\n        email: record.email,\n        website: record.website,\n      } as OrganizationRecord;\n    default:\n      return {\n        ...baseRecord,\n        entityType: record.entityType,\n        totalValue: record.totalValue,\n        issuedDate: record.issuedDate,\n        dueDate: record.dueDate,\n        lineItems: record.lineItems ?? [],\n      } as FinancialRecord;\n  }\n}\n\nfunction buildHaystack(record: SearchRecord): string {\n  const base = [\n    record.title,\n    record.summary,\n    record.project,\n    record.client,\n    record.status,\n    record.tags.join(' '),\n    ...Object.values(record.metadata ?? {}).map((value) => (value == null ? '' : String(value))),\n  ];\n\n  if (isBuildertrendRecord(record)) {\n    base.push(\n      record.path,\n      record.description,\n      record.icon,\n      record.url,\n      ...record.triggerQueries,\n    );\n  } else if (isFinancialRecord(record)) {\n    record.lineItems.forEach((item) => {\n      base.push(item.lineItemTitle, item.lineItemDescription, item.lineItemType);\n      // Add cost code information to searchable content\n      if (item.costCode) base.push(item.costCode);\n      if (item.costCodeName) base.push(item.costCodeName);\n      if (item.costCodeCategory) base.push(item.costCodeCategory);\n      if (item.costCodeCategoryName) base.push(item.costCodeCategoryName);\n    });\n  } else if (isPersonRecord(record)) {\n    base.push(\n      record.personType,\n      record.jobTitle,\n      record.associatedOrganization ?? '',\n      record.email,\n      record.phone,\n      record.location,\n      record.tradeFocus ?? '',\n    );\n  } else if (isOrganizationRecord(record)) {\n    base.push(\n      record.organizationType,\n      record.tradeFocus,\n      record.serviceArea,\n      record.primaryContact,\n      record.phone,\n      record.email,\n      record.website ?? '',\n    );\n  }\n\n  return base\n    .filter((chunk) => Boolean(chunk))\n    .join(' ')\n    .toLowerCase();\n}\n\nfunction tokenize(query: string): string[] {\n  return query\n    .toLowerCase()\n    .split(/\\s+/)\n    .map((token) => token.trim())\n    .filter(Boolean);\n}\n\n// Boolean query types\ninterface BooleanQuery {\n  type: 'boolean';\n  operator: 'AND' | 'OR' | 'NOT';\n  left: string | ParsedQuery;\n  right?: string | ParsedQuery;\n}\n\ninterface SimpleQuery {\n  type: 'simple';\n  query: string;\n}\n\ntype ParsedQuery = BooleanQuery | SimpleQuery;\n\nfunction parseBooleanQuery(query: string): ParsedQuery {\n  const trimmed = query.trim();\n  \n  // Check for boolean operators with proper spacing\n  // Only match uppercase operators with spaces before and after\n  const andMatch = trimmed.match(/^(.+?)\\s+AND\\s+(.+)$/);\n  const orMatch = trimmed.match(/^(.+?)\\s+OR\\s+(.+)$/);\n  const notMatch = trimmed.match(/^(.+?)\\s+NOT\\s+(.+)$/);\n  \n  if (andMatch) {\n    return {\n      type: 'boolean',\n      operator: 'AND',\n      left: parseBooleanQuery(andMatch[1].trim()),\n      right: parseBooleanQuery(andMatch[2].trim())\n    };\n  }\n  \n  if (orMatch) {\n    return {\n      type: 'boolean',\n      operator: 'OR',\n      left: parseBooleanQuery(orMatch[1].trim()),\n      right: parseBooleanQuery(orMatch[2].trim())\n    };\n  }\n  \n  if (notMatch) {\n    return {\n      type: 'boolean',\n      operator: 'NOT',\n      left: parseBooleanQuery(notMatch[1].trim()),\n      right: parseBooleanQuery(notMatch[2].trim())\n    };\n  }\n  \n  // No boolean operators found, return as simple query\n  return {\n    type: 'simple',\n    query: trimmed\n  };\n}\n\nfunction isBooleanQuery(query: string): boolean {\n  const parsed = parseBooleanQuery(query);\n  return parsed.type === 'boolean';\n}\n\nfunction parseMonetaryQuery(query: string): { isMonetary: boolean; searchQuery: string; originalQuery: string } {\n  const trimmedQuery = query.trim();\n  \n  if (trimmedQuery.startsWith('$')) {\n    // Extract the amount part after the dollar sign\n    const amountPart = trimmedQuery.slice(1).trim();\n    return {\n      isMonetary: true,\n      searchQuery: amountPart,\n      originalQuery: query\n    };\n  }\n  \n  return {\n    isMonetary: false,\n    searchQuery: query,\n    originalQuery: query\n  };\n}\n\nfunction isNumericQuery(query: string): boolean {\n  const tokens = tokenize(query);\n  // Check if any token is purely numeric (could be a monetary amount)\n  return tokens.some(token => /^\\d+(\\.\\d+)?$/.test(token));\n}\n\nfunction hasMonetaryPotential(query: string): boolean {\n  return hasMonetaryValue(query);\n}\n\n// Old monetary functions removed - now using monetary utility module\n\nfunction matchesMonetaryString(queryStr: string, dataValue: number): boolean {\n  return matchesMonetaryValue(queryStr, dataValue);\n}\n\n/**\n * Determines which monetary matches will be visible (highlighted) in the UI\n * This helps prioritize results that users can actually see the match in\n */\nfunction getVisibleMonetaryMatches(record: FinancialRecord, query: string): {\n  hasVisibleMatches: boolean;\n  hasExactVisibleMatches: boolean;\n  visibleMatchTypes: string[];\n} {\n  const { amounts } = extractMonetaryTokens(query);\n  \n  if (amounts.length === 0) {\n    return { hasVisibleMatches: false, hasExactVisibleMatches: false, visibleMatchTypes: [] };\n  }\n  \n  const visibleMatchTypes: string[] = [];\n  let hasVisibleMatches = false;\n  let hasExactVisibleMatches = false;\n  \n  // Check if total value will be highlighted (visible in the main record display)\n  for (const queryAmount of amounts) {\n    if (record.totalValue === queryAmount) {\n      visibleMatchTypes.push('totalValue');\n      hasVisibleMatches = true;\n      hasExactVisibleMatches = true;\n    } else if (matchesMonetaryValue(query, record.totalValue)) {\n      visibleMatchTypes.push('totalValue');\n      hasVisibleMatches = true;\n    }\n  }\n  \n  // Check if any line items will be highlighted (visible in the line items table)\n  for (const lineItem of record.lineItems) {\n    for (const queryAmount of amounts) {\n      // Check line item total\n      if (lineItem.lineItemTotal === queryAmount) {\n        visibleMatchTypes.push('lineItemTotal');\n        hasVisibleMatches = true;\n        hasExactVisibleMatches = true;\n      } else if (matchesMonetaryValue(query, lineItem.lineItemTotal)) {\n        visibleMatchTypes.push('lineItemTotal');\n        hasVisibleMatches = true;\n      }\n      \n      // Check line item unit price\n      if (lineItem.lineItemUnitPrice === queryAmount) {\n        visibleMatchTypes.push('lineItemUnitPrice');\n        hasVisibleMatches = true;\n        hasExactVisibleMatches = true;\n      } else if (matchesMonetaryValue(query, lineItem.lineItemUnitPrice)) {\n        visibleMatchTypes.push('lineItemUnitPrice');\n        hasVisibleMatches = true;\n      }\n    }\n  }\n  \n  return {\n    hasVisibleMatches,\n    hasExactVisibleMatches,\n    visibleMatchTypes: [...new Set(visibleMatchTypes)] // Remove duplicates\n  };\n}\n\nfunction isCloseMatch(value1: number, value2: number, tolerance: number = 0.01): boolean {\n  return Math.abs(value1 - value2) <= tolerance;\n}\n\nfunction parseRangeQuery(query: string): { min: number; max: number } | null {\n  // Handle various range formats: \"100-200\", \"100 to 200\", \"$100-$200\", \"$100 to $200\"\n  const rangePatterns = [\n    /(\\d+(?:\\.\\d+)?)\\s*-\\s*(\\d+(?:\\.\\d+)?)/,  // 100-200\n    /(\\d+(?:\\.\\d+)?)\\s+to\\s+(\\d+(?:\\.\\d+)?)/i, // 100 to 200\n    /\\$(\\d+(?:\\.\\d+)?)\\s*-\\s*\\$(\\d+(?:\\.\\d+)?)/, // $100-$200\n    /\\$(\\d+(?:\\.\\d+)?)\\s+to\\s+\\$(\\d+(?:\\.\\d+)?)/i, // $100 to $200\n  ];\n  \n  for (const pattern of rangePatterns) {\n    const match = query.match(pattern);\n    if (match) {\n      const min = parseFloat(match[1]);\n      const max = parseFloat(match[2]);\n      if (!isNaN(min) && !isNaN(max) && min <= max) {\n        return { min, max };\n      }\n    }\n  }\n  \n  return null;\n}\n\nfunction isInRange(value: number, range: { min: number; max: number }): boolean {\n  return value >= range.min && value <= range.max;\n}\n\nfunction extractMonetaryTokens(query: string): { amounts: number[]; textTokens: string[]; range: { min: number; max: number } | null } {\n  const tokens = tokenize(query);\n  const amounts: number[] = [];\n  const textTokens: string[] = [];\n  \n  // Check for range query first\n  const range = parseRangeQuery(query);\n  if (range) {\n    return { amounts, textTokens, range };\n  }\n  \n  // Use the new monetary utility to extract amounts\n  const monetaryAmounts = extractMonetaryAmounts(query);\n  for (const monetary of monetaryAmounts) {\n    // Convert from cents back to dollars for compatibility\n    amounts.push(monetary.amount / 100);\n  }\n  \n  // Add non-monetary tokens\n  for (const token of tokens) {\n    const parsed = parseMonetaryString(token);\n    if (!parsed) {\n      textTokens.push(token);\n    }\n  }\n  \n  return { amounts, textTokens, range: null };\n}\n\nfunction matchesQuery(record: SearchRecord, query: string): boolean {\n  const tokens = tokenize(query);\n  if (tokens.length === 0) {\n    return true;\n  }\n\n  const haystack = buildHaystack(record);\n  return tokens.every((token) => haystack.includes(token));\n}\n\nfunction matchesBooleanQuery(record: SearchRecord, parsedQuery: ParsedQuery): boolean {\n  console.log(`\uD83D\uDD0D matchesBooleanQuery called for record \"${record.title}\" with query:`, JSON.stringify(parsedQuery, null, 2));\n  \n  if (parsedQuery.type === 'simple') {\n    // For simple queries, use monetary-aware matching logic\n    const result = matchesQueryWithMonetarySupport(record, parsedQuery.query);\n    console.log(`\uD83D\uDD0D Simple query \"${parsedQuery.query}\" result: ${result}`);\n    return result;\n  }\n  \n  const booleanQuery = parsedQuery as BooleanQuery;\n  \n  // Evaluate left side\n  const leftMatch = typeof booleanQuery.left === 'string' \n    ? matchesQueryWithMonetarySupport(record, booleanQuery.left)\n    : matchesBooleanQuery(record, booleanQuery.left);\n  \n  console.log(`\uD83D\uDD0D Left side match: ${leftMatch}`);\n  \n  // Handle NOT operator (left AND NOT right)\n  if (booleanQuery.operator === 'NOT') {\n    if (!booleanQuery.right) {\n      const result = !leftMatch;\n      console.log(`\uD83D\uDD0D NOT result (no right): ${result}`);\n      return result;\n    }\n    \n    const rightMatch = typeof booleanQuery.right === 'string'\n      ? matchesQueryWithMonetarySupport(record, booleanQuery.right)\n      : matchesBooleanQuery(record, booleanQuery.right);\n    \n    console.log(`\uD83D\uDD0D Right side match for NOT: ${rightMatch}`);\n    const result = leftMatch && !rightMatch;\n    console.log(`\uD83D\uDD0D NOT result: ${leftMatch} && !${rightMatch} = ${result}`);\n    return result;\n  }\n  \n  // Handle AND and OR operators (have both left and right sides)\n  if (!booleanQuery.right) {\n    console.log(`\uD83D\uDD0D No right side, returning left match: ${leftMatch}`);\n    return leftMatch;\n  }\n  \n  const rightMatch = typeof booleanQuery.right === 'string'\n    ? matchesQueryWithMonetarySupport(record, booleanQuery.right)\n    : matchesBooleanQuery(record, booleanQuery.right);\n  \n  console.log(`\uD83D\uDD0D Right side match: ${rightMatch}`);\n  \n  let result;\n  switch (booleanQuery.operator) {\n    case 'AND':\n      result = leftMatch && rightMatch;\n      console.log(`\uD83D\uDD0D AND result: ${leftMatch} && ${rightMatch} = ${result}`);\n      break;\n    case 'OR':\n      result = leftMatch || rightMatch;\n      console.log(`\uD83D\uDD0D OR result: ${leftMatch} || ${rightMatch} = ${result}`);\n      break;\n    default:\n      result = leftMatch;\n      console.log(`\uD83D\uDD0D Default result: ${result}`);\n  }\n  \n  return result;\n}\n\n/**\n * Matches a query term with support for both text and monetary matching\n */\nfunction matchesQueryWithMonetarySupport(record: SearchRecord, query: string): boolean {\n  console.log(`\uD83D\uDD0D matchesQueryWithMonetarySupport called for record \"${record.title}\" with query: \"${query}\"`);\n  \n  // Check if this is a monetary query (starts with $)\n  if (query.startsWith('$')) {\n    const amountPart = query.slice(1).trim();\n    console.log(`\uD83D\uDD0D Monetary query detected, amount part: \"${amountPart}\"`);\n    const monetaryMatch = matchesMonetaryQuery(record, amountPart);\n    console.log(`\uD83D\uDD0D Monetary match for \"${amountPart}\": ${monetaryMatch}`);\n    return monetaryMatch;\n  }\n  \n  // First try regular text matching\n  const textMatch = matchesQuery(record, query);\n  console.log(`\uD83D\uDD0D Text match for \"${query}\": ${textMatch}`);\n  if (textMatch) {\n    return true;\n  }\n  \n  // If no text match and query has monetary potential, try monetary matching\n  const hasMonetary = hasMonetaryPotential(query);\n  console.log(`\uD83D\uDD0D Has monetary potential for \"${query}\": ${hasMonetary}`);\n  if (hasMonetary) {\n    const monetaryMatch = matchesMonetaryQuery(record, query);\n    console.log(`\uD83D\uDD0D Monetary match for \"${query}\": ${monetaryMatch}`);\n    return monetaryMatch;\n  }\n  \n  console.log(`\uD83D\uDD0D No match for \"${query}\"`);\n  return false;\n}\n\nfunction matchesHybridQuery(record: SearchRecord, query: string): boolean {\n  // First try regular text matching\n  const regularMatch = matchesQuery(record, query);\n  \n  // If regular match succeeds, return true\n  if (regularMatch) {\n    return true;\n  }\n  \n  // If no regular match and query has monetary potential, try monetary matching\n  if (hasMonetaryPotential(query)) {\n    return matchesMonetaryQuery(record, query);\n  }\n  \n  return false;\n}\n\nfunction matchesMonetaryQuery(record: SearchRecord, query: string): boolean {\n  const { amounts, textTokens, range } = extractMonetaryTokens(query);\n  \n  if (amounts.length === 0 && textTokens.length === 0 && !range) {\n    return true;\n  }\n\n  // For monetary searches, focus on financial records and their line items\n  if (!isFinancialRecord(record)) {\n    return false; // Skip non-financial records for monetary searches\n  }\n\n  const financialRecord = record;\n  \n  // Handle range queries\n  if (range) {\n    // Check if total value is in range\n    if (isInRange(financialRecord.totalValue, range)) {\n      return true;\n    }\n\n    // Check if any line item amounts are in range\n    for (const lineItem of financialRecord.lineItems) {\n      if (isInRange(lineItem.lineItemTotal, range) ||\n          isInRange(lineItem.lineItemUnitPrice, range)) {\n        return true;\n      }\n    }\n  }\n  \n  // Check if any monetary amounts match (exact or close)\n  if (amounts.length > 0) {\n    // Check total value\n    for (const queryAmount of amounts) {\n      if (isCloseMatch(financialRecord.totalValue, queryAmount)) {\n        return true;\n      }\n    }\n\n    // Check line items for amounts\n    for (const lineItem of financialRecord.lineItems) {\n      for (const queryAmount of amounts) {\n        if (isCloseMatch(lineItem.lineItemTotal, queryAmount) ||\n            isCloseMatch(lineItem.lineItemUnitPrice, queryAmount)) {\n          return true;\n        }\n      }\n    }\n  }\n\n  // Check for string-based matches (handles comma differences)\n  const tokens = tokenize(query);\n  for (const token of tokens) {\n    // Check total value string match\n    if (matchesMonetaryString(token, financialRecord.totalValue)) {\n      return true;\n    }\n\n    // Check line items for string matches\n    for (const lineItem of financialRecord.lineItems) {\n      if (matchesMonetaryString(token, lineItem.lineItemTotal) ||\n          matchesMonetaryString(token, lineItem.lineItemUnitPrice)) {\n        return true;\n      }\n    }\n  }\n\n  // For explicit monetary searches (queries starting with $), be more restrictive\n  // Only match against monetary values, not descriptions or quantities\n  const isExplicitMonetary = query.trim().startsWith('$');\n  \n  if (isExplicitMonetary) {\n    // For explicit monetary searches, don't match against descriptions or quantities\n    // Only match against actual monetary values (totals, unit prices)\n    return false; // We've already checked all monetary values above\n  }\n\n  // For non-explicit monetary searches (like \"123\"), allow text token matching\n  // but ONLY match against fields marked as monetary in the metadata\n  if (textTokens.length > 0) {\n    for (const lineItem of financialRecord.lineItems) {\n      // Only match against fields marked as monetary in the metadata\n      const monetaryFields: string[] = [];\n      \n      if (lineItem.fieldMetadata) {\n        // Check each field and only include monetary ones\n        if (lineItem.fieldMetadata.lineItemTitle === 'monetary') {\n          monetaryFields.push(lineItem.lineItemTitle);\n        }\n        if (lineItem.fieldMetadata.lineItemDescription === 'monetary') {\n          monetaryFields.push(lineItem.lineItemDescription);\n        }\n        if (lineItem.fieldMetadata.lineItemType === 'monetary') {\n          monetaryFields.push(lineItem.lineItemType);\n        }\n      } else {\n        // Fallback: if no metadata, only match against monetary value fields\n        // This ensures backward compatibility\n        monetaryFields.push(lineItem.lineItemType); // Only type field for now\n      }\n      \n      const lineItemText = monetaryFields.join(' ').toLowerCase();\n      \n      if (lineItemText && textTokens.every(token => lineItemText.includes(token))) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction matchesSelections(record: SearchRecord, selections?: FacetSelectionState): boolean {\n  if (!selections) {\n    return true;\n  }\n\n  for (const key of Object.keys(selections) as FacetKey[]) {\n    const values = selections[key];\n    if (!values || values.size === 0) {\n      continue;\n    }\n\n    // Skip groupBy facet - it's used for organization, not filtering\n    if (key === 'groupBy') {\n      continue;\n    }\n\n    const facetValue = getFacetValue(record, key);\n    if (!facetValue || !values.has(facetValue)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getFacetValue(record: SearchRecord, key: FacetKey): string | undefined {\n  switch (key) {\n    case 'entityType':\n      return record.entityType;\n    case 'project':\n      return record.project;\n    case 'status':\n      return record.status;\n    case 'documentType':\n      return record.entityType === 'Document' ? record.documentType : undefined;\n    case 'client':\n      return record.client;\n    case 'issuedDate':\n      return record.entityType === 'Document' ? undefined : bucketIssuedDate((record as any).issuedDate);\n    case 'totalValue':\n      if (record.entityType === 'Document') {\n        return undefined;\n      }\n      return bucketTotal((record as any).totalValue);\n    case 'personType':\n      return isPersonRecord(record) ? record.personType : undefined;\n    case 'contactOrganization':\n      if (isPersonRecord(record)) {\n        return record.associatedOrganization ?? undefined;\n      }\n      if (isOrganizationRecord(record)) {\n        return record.title;\n      }\n      return undefined;\n    case 'organizationType':\n      return isOrganizationRecord(record) ? record.organizationType : undefined;\n    case 'tradeFocus': {\n      if (isPersonRecord(record) && record.tradeFocus) {\n        return record.tradeFocus;\n      }\n      if (isOrganizationRecord(record)) {\n        return record.tradeFocus;\n      }\n      const metadataTrade = record.metadata?.tradeFocus;\n      return typeof metadataTrade === 'string' ? metadataTrade : undefined;\n    }\n    case 'costCodeCategory': {\n      // For financial records, return the most common cost code category among line items\n      if (isFinancialRecord(record) && record.lineItems.length > 0) {\n        const categories = record.lineItems\n          .map(item => item.costCodeCategory)\n          .filter(Boolean);\n        if (categories.length > 0) {\n          // Return the most common category\n          const categoryCounts = categories.reduce((acc, cat) => {\n            acc[cat!] = (acc[cat!] || 0) + 1;\n            return acc;\n          }, {} as Record<string, number>);\n          return Object.entries(categoryCounts)\n            .sort(([,a], [,b]) => b - a)[0][0];\n        }\n      }\n      return undefined;\n    }\n    case 'costCode': {\n      // For financial records, return the most common cost code among line items\n      if (isFinancialRecord(record) && record.lineItems.length > 0) {\n        const codes = record.lineItems\n          .map(item => item.costCode)\n          .filter(Boolean);\n        if (codes.length > 0) {\n          // Return the most common code\n          const codeCounts = codes.reduce((acc, code) => {\n            acc[code!] = (acc[code!] || 0) + 1;\n            return acc;\n          }, {} as Record<string, number>);\n          return Object.entries(codeCounts)\n            .sort(([,a], [,b]) => b - a)[0][0];\n        }\n      }\n      return undefined;\n    }\n    case 'groupBy':\n      // This facet is handled specially - it's not a property of individual records\n      return undefined;\n    default:\n      return undefined;\n  }\n}\n\nfunction bucketTotal(total: number): string {\n  if (total < 10000) return '< $10k';\n  if (total < 50000) return '$10k\u2013$50k';\n  if (total < 100000) return '$50k\u2013$100k';\n  return '$100k+';\n}\n\nfunction bucketIssuedDate(dateString: string): string {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));\n  \n  if (diffInDays <= 7) return 'Last 7 days';\n  if (diffInDays <= 30) return 'Last 30 days';\n  if (diffInDays <= 90) return 'Last 3 months';\n  if (diffInDays <= 180) return 'Last 6 months';\n  if (diffInDays <= 365) return 'Last year';\n  if (diffInDays <= 730) return 'Last 2 years';\n  return 'Older than 2 years';\n}\n\n\nfunction computeFacets(records: SearchRecord[]): Partial<Record<FacetKey, FacetValue[]>> {\n  const facetMaps: Partial<Record<FacetKey, Map<string, number>>> = {};\n\n  for (const key of FACET_KEYS) {\n    if (key !== 'groupBy') {\n      facetMaps[key] = new Map<string, number>();\n    }\n  }\n\n  records.forEach((record) => {\n    for (const key of FACET_KEYS) {\n      if (key === 'groupBy') {\n        continue; // Skip groupBy as it's handled separately\n      }\n      \n      const value = getFacetValue(record, key);\n      if (!value) {\n        continue;\n      }\n\n      const map = facetMaps[key];\n      if (!map) {\n        continue;\n      }\n\n      map.set(value, (map.get(value) ?? 0) + 1);\n    }\n  });\n\n  const facets: Partial<Record<FacetKey, FacetValue[]>> = {};\n\n  for (const key of FACET_KEYS) {\n    if (key === 'groupBy') {\n      // Add special groupBy facet options\n      facets[key] = [\n        { key: 'groupBy', value: 'None', count: records.length },\n        { key: 'groupBy', value: 'Type', count: records.length },\n        { key: 'groupBy', value: 'Project', count: records.length },\n        { key: 'groupBy', value: 'Status', count: records.length },\n        { key: 'groupBy', value: 'Client', count: records.length },\n      ];\n      continue;\n    }\n    \n    \n    const map = facetMaps[key];\n    if (!map || map.size === 0) {\n      continue;\n    }\n\n    const values = Array.from(map.entries())\n      .map(([value, count]) => ({ key, value, count }))\n      .sort((a, b) => b.count - a.count || a.value.localeCompare(b.value));\n\n    facets[key] = values;\n  }\n\n  return facets;\n}\n\nfunction calculateRelevanceScore(record: SearchRecord, query: string): number {\n  const tokens = tokenize(query);\n  if (tokens.length === 0) {\n    return 0;\n  }\n\n  const haystack = buildHaystack(record);\n  const titleLower = record.title.toLowerCase();\n  const summaryLower = record.summary.toLowerCase();\n  \n  let score = 0;\n  \n  // Exact title match (highest priority)\n  if (titleLower.includes(query.toLowerCase())) {\n    score += 100;\n  }\n  \n  // Title word matches\n  const titleMatches = tokens.filter(token => titleLower.includes(token)).length;\n  score += titleMatches * 20;\n  \n  // Summary matches\n  const summaryMatches = tokens.filter(token => summaryLower.includes(token)).length;\n  score += summaryMatches * 10;\n  \n  // Content matches (haystack)\n  const contentMatches = tokens.filter(token => haystack.includes(token)).length;\n  score += contentMatches * 5;\n  \n  // Bonus for exact phrase matches in title\n  if (titleLower.includes(query.toLowerCase())) {\n    score += 50;\n  }\n  \n  // Bonus for exact phrase matches in summary\n  if (summaryLower.includes(query.toLowerCase())) {\n    score += 25;\n  }\n  \n  return score;\n}\n\nfunction calculateBooleanRelevanceScore(record: SearchRecord, parsedQuery: ParsedQuery): number {\n  if (parsedQuery.type === 'simple') {\n    return calculateRelevanceScoreWithMonetarySupport(record, parsedQuery.query);\n  }\n  \n  const booleanQuery = parsedQuery as BooleanQuery;\n  \n  // Calculate scores for left and right sides\n  const leftScore = typeof booleanQuery.left === 'string' \n    ? calculateRelevanceScoreWithMonetarySupport(record, booleanQuery.left)\n    : calculateBooleanRelevanceScore(record, booleanQuery.left);\n  \n  if (booleanQuery.operator === 'NOT') {\n    // For NOT queries, return a base score if the left side matches\n    // This ensures NOT queries still get some relevance scoring\n    return leftScore > 0 ? 10 : 0;\n  }\n  \n  if (!booleanQuery.right) {\n    return leftScore;\n  }\n  \n  const rightScore = typeof booleanQuery.right === 'string'\n    ? calculateRelevanceScoreWithMonetarySupport(record, booleanQuery.right)\n    : calculateBooleanRelevanceScore(record, booleanQuery.right);\n  \n  switch (booleanQuery.operator) {\n    case 'AND':\n      // For AND, both sides must match, so use the minimum score\n      return Math.min(leftScore, rightScore);\n    case 'OR':\n      // For OR, use the maximum score (best match)\n      return Math.max(leftScore, rightScore);\n    default:\n      return leftScore;\n  }\n}\n\n/**\n * Calculates relevance score with support for both text and monetary matching\n */\nfunction calculateRelevanceScoreWithMonetarySupport(record: SearchRecord, query: string): number {\n  // First try regular text scoring\n  const textScore = calculateRelevanceScore(record, query);\n  if (textScore > 0) {\n    return textScore;\n  }\n  \n  // If no text score and query has monetary potential, try monetary scoring\n  if (hasMonetaryPotential(query)) {\n    return calculateMonetaryRelevanceScore(record, query);\n  }\n  \n  return 0;\n}\n\nfunction calculateHybridRelevanceScore(record: SearchRecord, query: string): number {\n  // First calculate regular relevance score\n  const regularScore = calculateRelevanceScore(record, query);\n  \n  // If regular score is high enough, use it\n  if (regularScore > 0) {\n    return regularScore;\n  }\n  \n  // If no regular match and query has monetary potential, try monetary scoring\n  if (hasMonetaryPotential(query)) {\n    return calculateMonetaryRelevanceScore(record, query);\n  }\n  \n  return 0;\n}\n\nfunction calculateMonetaryRelevanceScore(record: SearchRecord, query: string): number {\n  const { amounts, textTokens, range } = extractMonetaryTokens(query);\n  \n  if (amounts.length === 0 && textTokens.length === 0 && !range) {\n    return 0;\n  }\n\n  if (!isFinancialRecord(record)) {\n    return 0; // Skip non-financial records for monetary searches\n  }\n\n  const financialRecord = record;\n  let score = 0;\n  \n  // Enhanced scoring: prioritize matches that will be highlighted in the UI\n  const visibleMatches = getVisibleMonetaryMatches(financialRecord, query);\n  \n  // Boost score for records with visible matches\n  if (visibleMatches.hasVisibleMatches) {\n    score += 2000; // High boost for visible matches\n    \n    // Additional scoring based on match types\n    for (const matchType of visibleMatches.visibleMatchTypes) {\n      switch (matchType) {\n        case 'totalValue':\n          score += 500; // High priority for total value matches (most visible)\n          break;\n        case 'lineItemTotal':\n          score += 300; // Medium priority for line item totals\n          break;\n        case 'lineItemUnitPrice':\n          score += 200; // Lower priority for unit prices\n          break;\n      }\n    }\n  }\n  \n  // Additional boost for exact visible matches\n  if (visibleMatches.hasExactVisibleMatches) {\n    score += 1000; // Extra boost for exact visible matches\n  }\n  \n  // Handle range queries\n  if (range) {\n    // Check total value range matches\n    if (isInRange(financialRecord.totalValue, range)) {\n      // Score based on how close to the center of the range\n      const rangeCenter = (range.min + range.max) / 2;\n      const distanceFromCenter = Math.abs(financialRecord.totalValue - rangeCenter);\n      const rangeSize = range.max - range.min;\n      const normalizedDistance = Math.min(distanceFromCenter / rangeSize, 1);\n      score += Math.round(800 * (1 - normalizedDistance)); // 800 points max, decreasing with distance\n    }\n    \n    // Check line items for range matches\n    for (const lineItem of financialRecord.lineItems) {\n      if (isInRange(lineItem.lineItemTotal, range)) {\n        const rangeCenter = (range.min + range.max) / 2;\n        const distanceFromCenter = Math.abs(lineItem.lineItemTotal - rangeCenter);\n        const rangeSize = range.max - range.min;\n        const normalizedDistance = Math.min(distanceFromCenter / rangeSize, 1);\n        score += Math.round(700 * (1 - normalizedDistance));\n      }\n      \n      if (isInRange(lineItem.lineItemUnitPrice, range)) {\n        const rangeCenter = (range.min + range.max) / 2;\n        const distanceFromCenter = Math.abs(lineItem.lineItemUnitPrice - rangeCenter);\n        const rangeSize = range.max - range.min;\n        const normalizedDistance = Math.min(distanceFromCenter / rangeSize, 1);\n        score += Math.round(600 * (1 - normalizedDistance));\n      }\n    }\n  }\n  \n  // Check monetary amounts for exact and close matches\n  if (amounts.length > 0) {\n    // Check total value matches\n    for (const queryAmount of amounts) {\n      const totalValue = financialRecord.totalValue;\n      \n      if (totalValue === queryAmount) {\n        score += 1000; // Exact total value match\n      } else if (isCloseMatch(totalValue, queryAmount, 0.01)) {\n        score += 800; // Very close total value match\n      } else if (isCloseMatch(totalValue, queryAmount, 1.00)) {\n        score += 600; // Close total value match\n      }\n    }\n    \n    // Check line items for exact and close amount matches\n    for (const lineItem of financialRecord.lineItems) {\n      for (const queryAmount of amounts) {\n        // Line item total matches\n        if (lineItem.lineItemTotal === queryAmount) {\n          score += 900; // Exact line item total match\n        } else if (isCloseMatch(lineItem.lineItemTotal, queryAmount, 0.01)) {\n          score += 700; // Very close line item total match\n        } else if (isCloseMatch(lineItem.lineItemTotal, queryAmount, 1.00)) {\n          score += 500; // Close line item total match\n        }\n        \n        // Unit price matches\n        if (lineItem.lineItemUnitPrice === queryAmount) {\n          score += 800; // Exact unit price match\n        } else if (isCloseMatch(lineItem.lineItemUnitPrice, queryAmount, 0.01)) {\n          score += 600; // Very close unit price match\n        } else if (isCloseMatch(lineItem.lineItemUnitPrice, queryAmount, 1.00)) {\n          score += 400; // Close unit price match\n        }\n        \n      }\n    }\n  }\n  \n  // Check for string-based matches (handles comma differences)\n  const tokens = tokenize(query);\n  for (const token of tokens) {\n    // Check total value string match\n    if (matchesMonetaryString(token, financialRecord.totalValue)) {\n      score += 750; // High score for string-based total value match\n    }\n\n    // Check line items for string matches\n    for (const lineItem of financialRecord.lineItems) {\n      if (matchesMonetaryString(token, lineItem.lineItemTotal)) {\n        score += 650; // High score for string-based line item total match\n      }\n      if (matchesMonetaryString(token, lineItem.lineItemUnitPrice)) {\n        score += 550; // Good score for string-based unit price match\n      }\n    }\n  }\n\n  // For explicit monetary searches (queries starting with $), be more restrictive\n  // Only score against monetary values, not descriptions or quantities\n  const isExplicitMonetary = query.trim().startsWith('$');\n  \n  if (!isExplicitMonetary && textTokens.length > 0) {\n    // For non-explicit monetary searches (like \"123\"), allow text token matching\n    // but ONLY match against fields marked as monetary in the metadata\n    for (const lineItem of financialRecord.lineItems) {\n      // Only match against fields marked as monetary in the metadata\n      const monetaryFields: string[] = [];\n      \n      if (lineItem.fieldMetadata) {\n        // Check each field and only include monetary ones\n        if (lineItem.fieldMetadata.lineItemTitle === 'monetary') {\n          monetaryFields.push(lineItem.lineItemTitle);\n        }\n        if (lineItem.fieldMetadata.lineItemDescription === 'monetary') {\n          monetaryFields.push(lineItem.lineItemDescription);\n        }\n        if (lineItem.fieldMetadata.lineItemType === 'monetary') {\n          monetaryFields.push(lineItem.lineItemType);\n        }\n      } else {\n        // Fallback: if no metadata, only match against monetary value fields\n        // This ensures backward compatibility\n        monetaryFields.push(lineItem.lineItemType); // Only type field for now\n      }\n      \n      const lineItemText = monetaryFields.join(' ').toLowerCase();\n      \n      if (lineItemText) {\n        const lineItemMatches = textTokens.filter(token => lineItemText.includes(token)).length;\n        score += lineItemMatches * 50;\n      }\n    }\n    \n    // Small bonus for title/summary matches in financial records\n    // Only if they are marked as monetary in metadata\n    if (financialRecord.fieldMetadata) {\n      const titleLower = record.title.toLowerCase();\n      const summaryLower = record.summary.toLowerCase();\n      \n      if (financialRecord.fieldMetadata.title === 'monetary') {\n        const titleMatches = textTokens.filter(token => titleLower.includes(token)).length;\n        score += titleMatches * 10;\n      }\n      \n      if (financialRecord.fieldMetadata.summary === 'monetary') {\n        const summaryMatches = textTokens.filter(token => summaryLower.includes(token)).length;\n        score += summaryMatches * 5;\n      }\n    }\n  }\n  \n  return score;\n}\n\nfunction sortByRelevance(records: SearchRecord[], query: string, isMonetary: boolean = false): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    let scoreA: number;\n    let scoreB: number;\n    \n    // Check if this is a boolean query\n    const isBoolean = isBooleanQuery(query);\n    const parsedQuery = isBoolean ? parseBooleanQuery(query) : null;\n    \n    if (isBoolean && parsedQuery) {\n      // Boolean scoring\n      scoreA = calculateBooleanRelevanceScore(a, parsedQuery);\n      scoreB = calculateBooleanRelevanceScore(b, parsedQuery);\n    } else if (isMonetary) {\n      // Explicit monetary search (query starts with $)\n      scoreA = calculateMonetaryRelevanceScore(a, query);\n      scoreB = calculateMonetaryRelevanceScore(b, query);\n    } else if (hasMonetaryPotential(query)) {\n      // Hybrid scoring for queries with numeric potential (like \"123\")\n      scoreA = calculateHybridRelevanceScore(a, query);\n      scoreB = calculateHybridRelevanceScore(b, query);\n    } else {\n      // Regular scoring for non-numeric queries\n      scoreA = calculateRelevanceScore(a, query);\n      scoreB = calculateRelevanceScore(b, query);\n    }\n    \n    // Primary sort by relevance score (descending)\n    if (scoreA !== scoreB) {\n      return scoreB - scoreA;\n    }\n    \n    // Secondary sort by recency (descending) as tiebreaker\n    return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n  });\n}\n\nfunction sortByRecency(records: SearchRecord[]): SearchRecord[] {\n  return [...records].sort(\n    (a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime(),\n  );\n}\n\nfunction sortByMostRecent(records: SearchRecord[], query: string, isMonetary: boolean = false): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    // Get the most recent date for each record (updatedAt or createdAt/issuedDate)\n    const getMostRecentDate = (record: SearchRecord): Date => {\n      const updatedDate = new Date(record.updatedAt);\n      let createdDate: Date;\n      \n      if (isFinancialRecord(record)) {\n        // For financial records, use issuedDate as created date\n        createdDate = new Date(record.issuedDate);\n      } else {\n        // For other records, use createdAt\n        createdDate = new Date(record.createdAt);\n      }\n      \n      return updatedDate > createdDate ? updatedDate : createdDate;\n    };\n    \n    const dateA = getMostRecentDate(a);\n    const dateB = getMostRecentDate(b);\n    \n    // Primary sort by date (descending - most recent first)\n    if (dateA.getTime() !== dateB.getTime()) {\n      return dateB.getTime() - dateA.getTime();\n    }\n    \n    // Secondary sort by relevance as tiebreaker\n    let scoreA: number;\n    let scoreB: number;\n    \n    const isBoolean = isBooleanQuery(query);\n    const parsedQuery = isBoolean ? parseBooleanQuery(query) : null;\n    \n    if (isBoolean && parsedQuery) {\n      scoreA = calculateBooleanRelevanceScore(a, parsedQuery);\n      scoreB = calculateBooleanRelevanceScore(b, parsedQuery);\n    } else if (isMonetary) {\n      scoreA = calculateMonetaryRelevanceScore(a, query);\n      scoreB = calculateMonetaryRelevanceScore(b, query);\n    } else if (hasMonetaryPotential(query)) {\n      scoreA = calculateHybridRelevanceScore(a, query);\n      scoreB = calculateHybridRelevanceScore(b, query);\n    } else {\n      scoreA = calculateRelevanceScore(a, query);\n      scoreB = calculateRelevanceScore(b, query);\n    }\n    \n    return scoreB - scoreA;\n  });\n}\n\nfunction sortByDueFirst(records: SearchRecord[], query: string, isMonetary: boolean = false): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    // Get due date or fallback to updatedAt\n    const getDueDate = (record: SearchRecord): Date => {\n      if (isFinancialRecord(record) && record.dueDate) {\n        return new Date(record.dueDate);\n      }\n      return new Date(record.updatedAt);\n    };\n    \n    const dueDateA = getDueDate(a);\n    const dueDateB = getDueDate(b);\n    \n    // Primary sort by due date (ascending - soonest first)\n    if (dueDateA.getTime() !== dueDateB.getTime()) {\n      return dueDateA.getTime() - dueDateB.getTime();\n    }\n    \n    // Secondary sort by relevance as tiebreaker\n    let scoreA: number;\n    let scoreB: number;\n    \n    const isBoolean = isBooleanQuery(query);\n    const parsedQuery = isBoolean ? parseBooleanQuery(query) : null;\n    \n    if (isBoolean && parsedQuery) {\n      scoreA = calculateBooleanRelevanceScore(a, parsedQuery);\n      scoreB = calculateBooleanRelevanceScore(b, parsedQuery);\n    } else if (isMonetary) {\n      scoreA = calculateMonetaryRelevanceScore(a, query);\n      scoreB = calculateMonetaryRelevanceScore(b, query);\n    } else if (hasMonetaryPotential(query)) {\n      scoreA = calculateHybridRelevanceScore(a, query);\n      scoreB = calculateHybridRelevanceScore(b, query);\n    } else {\n      scoreA = calculateRelevanceScore(a, query);\n      scoreB = calculateRelevanceScore(b, query);\n    }\n    \n    return scoreB - scoreA;\n  });\n}\n\nfunction sortByDueLast(records: SearchRecord[], query: string, isMonetary: boolean = false): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    // Get due date or fallback to updatedAt\n    const getDueDate = (record: SearchRecord): Date => {\n      if (isFinancialRecord(record) && record.dueDate) {\n        return new Date(record.dueDate);\n      }\n      return new Date(record.updatedAt);\n    };\n    \n    const dueDateA = getDueDate(a);\n    const dueDateB = getDueDate(b);\n    \n    // Primary sort by due date (descending - latest first)\n    if (dueDateA.getTime() !== dueDateB.getTime()) {\n      return dueDateB.getTime() - dueDateA.getTime();\n    }\n    \n    // Secondary sort by relevance as tiebreaker\n    let scoreA: number;\n    let scoreB: number;\n    \n    const isBoolean = isBooleanQuery(query);\n    const parsedQuery = isBoolean ? parseBooleanQuery(query) : null;\n    \n    if (isBoolean && parsedQuery) {\n      scoreA = calculateBooleanRelevanceScore(a, parsedQuery);\n      scoreB = calculateBooleanRelevanceScore(b, parsedQuery);\n    } else if (isMonetary) {\n      scoreA = calculateMonetaryRelevanceScore(a, query);\n      scoreB = calculateMonetaryRelevanceScore(b, query);\n    } else if (hasMonetaryPotential(query)) {\n      scoreA = calculateHybridRelevanceScore(a, query);\n      scoreB = calculateHybridRelevanceScore(b, query);\n    } else {\n      scoreA = calculateRelevanceScore(a, query);\n      scoreB = calculateRelevanceScore(b, query);\n    }\n    \n    return scoreB - scoreA;\n  });\n}\n\nasync function filterRecords({ query, selections, isMonetarySearch }: SearchOptions): Promise<SearchRecord[]> {\n  console.log('\uD83D\uDD0D filterRecords called with:', {\n    query,\n    selections: Object.keys(selections || {}),\n    isMonetarySearch\n  });\n  \n  const { isMonetary, searchQuery } = parseMonetaryQuery(query);\n  \n  const corpus = await loadCorpus();\n  \n  // First, check for Buildertrend matches (exact trigger query matches)\n  const buildertrendMatches: SearchRecord[] = [];\n  const otherMatches: SearchRecord[] = [];\n  \n  console.log('\uD83D\uDD0D Starting search for:', searchQuery, 'with corpus size:', corpus.length);\n  console.log('\uD83D\uDD0D Original query:', query);\n  console.log('\uD83D\uDD0D Is monetary:', isMonetary);\n  \n  // Check if this is a boolean query\n  const isBoolean = isBooleanQuery(searchQuery);\n  const parsedQuery = isBoolean ? parseBooleanQuery(searchQuery) : null;\n  \n  console.log('\uD83D\uDD0D Is boolean query:', isBoolean);\n  if (isBoolean && parsedQuery) {\n    console.log('\uD83D\uDD0D Parsed boolean query:', JSON.stringify(parsedQuery, null, 2));\n  }\n  \n  corpus.forEach((record, index) => {\n    let matchesQueryResult: boolean;\n    \n    // Check for Buildertrend trigger query matches first\n    if (isBuildertrendRecord(record)) {\n      console.log(`Checking Buildertrend record ${index}:`, record.title, 'triggerQueries:', record.triggerQueries);\n      matchesQueryResult = record.triggerQueries.some(triggerQuery => {\n        const match = triggerQuery.toLowerCase() === searchQuery.toLowerCase();\n        if (match) {\n          console.log('Found exact match:', triggerQuery, '===', searchQuery);\n        }\n        return match;\n      });\n      if (matchesQueryResult) {\n        console.log('Buildertrend match found:', record.title, 'for query:', searchQuery);\n        buildertrendMatches.push(record);\n      }\n      return; // Always skip regular matching for Buildertrend records\n    }\n    \n    // Determine which matching logic to use\n    if (isBoolean && parsedQuery) {\n      // Boolean search\n      matchesQueryResult = matchesBooleanQuery(record, parsedQuery);\n    } else if (isMonetary) {\n      // Explicit monetary search (query starts with $)\n      matchesQueryResult = matchesMonetaryQuery(record, searchQuery);\n    } else if (hasMonetaryPotential(searchQuery)) {\n      // Hybrid search for queries with numeric potential (like \"123\")\n      matchesQueryResult = matchesHybridQuery(record, searchQuery);\n    } else {\n      // Regular text search for non-numeric queries\n      matchesQueryResult = matchesQuery(record, searchQuery);\n    }\n    \n    if (matchesQueryResult && matchesSelections(record, selections)) {\n      otherMatches.push(record);\n    }\n  });\n  \n  // Sort other matches by relevance (default sorting)\n  const sortedOtherMatches = searchQuery.trim() ? sortByRelevance(otherMatches, searchQuery, isMonetary) : sortByRecency(otherMatches);\n  \n  console.log('Search results for \"' + searchQuery + '\":', {\n    buildertrendMatches: buildertrendMatches.length,\n    otherMatches: sortedOtherMatches.length,\n    total: buildertrendMatches.length + sortedOtherMatches.length,\n    isBoolean: isBoolean\n  });\n  \n  // Return Buildertrend matches first, then other matches\n  return [...buildertrendMatches, ...sortedOtherMatches];\n}\n\nfunction determineGroupEntityType(records: SearchRecord[]): SearchEntityType {\n  if (records.length === 0) {\n    return 'Document';\n  }\n  \n  // If all records have the same entity type, use that\n  const firstType = records[0].entityType;\n  if (records.every(record => record.entityType === firstType)) {\n    return firstType;\n  }\n  \n  // If records are mixed types, use the most common type\n  const typeCounts = new Map<SearchEntityType, number>();\n  records.forEach(record => {\n    typeCounts.set(record.entityType, (typeCounts.get(record.entityType) || 0) + 1);\n  });\n  \n  let mostCommonType: SearchEntityType = 'Document';\n  let maxCount = 0;\n  \n  for (const [type, count] of typeCounts.entries()) {\n    if (count > maxCount) {\n      maxCount = count;\n      mostCommonType = type;\n    }\n  }\n  \n  return mostCommonType;\n}\n\nfunction buildGroups(records: SearchRecord[], groupBy?: string): SearchGroup[] {\n  if (!groupBy || groupBy === 'None') {\n    // When not grouping, create separate groups for each entity type\n    // This allows us to apply individual limits to each type\n    const typeGroups = new Map<SearchEntityType, SearchRecord[]>();\n    \n    records.forEach((record) => {\n      if (!typeGroups.has(record.entityType)) {\n        typeGroups.set(record.entityType, []);\n      }\n      typeGroups.get(record.entityType)!.push(record);\n    });\n    \n    // Convert to SearchGroup array, sorted by entity type\n    return Array.from(typeGroups.entries())\n      .sort((a, b) => {\n        const orderA = GROUP_ORDER.indexOf(a[0]);\n        const orderB = GROUP_ORDER.indexOf(b[0]);\n        if (orderA !== -1 || orderB !== -1) {\n          const safeOrderA = orderA === -1 ? Number.MAX_SAFE_INTEGER : orderA;\n          const safeOrderB = orderB === -1 ? Number.MAX_SAFE_INTEGER : orderB;\n          if (safeOrderA !== safeOrderB) {\n            return safeOrderA - safeOrderB;\n          }\n        }\n        return a[0].localeCompare(b[0]);\n      })\n      .map(([entityType, items]) => ({\n        entityType,\n        items,\n        groupTitle: entityType,\n      }));\n  }\n\n  const map = new Map<string, SearchRecord[]>();\n\n  records.forEach((record) => {\n    let groupKey: string;\n    \n    switch (groupBy) {\n      case 'Type':\n        groupKey = record.entityType;\n        break;\n      case 'Project':\n        groupKey = record.project || 'No Project';\n        break;\n      case 'Status':\n        groupKey = record.status || 'No Status';\n        break;\n      case 'Client':\n        groupKey = record.client || 'No Client';\n        break;\n      default:\n        groupKey = record.entityType;\n    }\n\n    if (!map.has(groupKey)) {\n      map.set(groupKey, []);\n    }\n    map.get(groupKey)!.push(record);\n  });\n\n  // Sort groups by key name for consistent ordering\n  const sortedEntries = Array.from(map.entries()).sort((a, b) => {\n    // Handle \"No X\" groups by putting them at the end\n    const aIsEmpty = a[0].startsWith('No ');\n    const bIsEmpty = b[0].startsWith('No ');\n    \n    if (aIsEmpty && !bIsEmpty) return 1;\n    if (!aIsEmpty && bIsEmpty) return -1;\n    \n    if (groupBy === 'Type') {\n      const orderA = GROUP_ORDER.indexOf(a[0] as SearchEntityType);\n      const orderB = GROUP_ORDER.indexOf(b[0] as SearchEntityType);\n      if (orderA !== -1 || orderB !== -1) {\n        const safeOrderA = orderA === -1 ? Number.MAX_SAFE_INTEGER : orderA;\n        const safeOrderB = orderB === -1 ? Number.MAX_SAFE_INTEGER : orderB;\n        if (safeOrderA !== safeOrderB) {\n          return safeOrderA - safeOrderB;\n        }\n      }\n    }\n    return a[0].localeCompare(b[0]);\n  });\n\n  return sortedEntries.map(([groupKey, items]) => ({\n    entityType: groupBy === 'Type' ? groupKey as SearchEntityType : determineGroupEntityType(items),\n    items,\n    groupTitle: groupKey,\n  })).filter((group) => group.items.length > 0);\n}\n\nfunction applyGroupLimits(groups: SearchGroup[], limits: Record<string, number>): SearchGroup[] {\n  return groups\n    .map((group) => {\n      const limit = limits[group.entityType] ?? limits['Document'] ?? 4;\n      return {\n        entityType: group.entityType,\n        items: group.items.slice(0, Math.max(0, limit)),\n      } satisfies SearchGroup;\n    })\n    .filter((group) => group.items.length > 0);\n}\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => {\n    if (ms <= 0) {\n      resolve();\n      return;\n    }\n    globalThis.setTimeout(resolve, ms);\n  });\n}\n\n/**\n * Generate a normally distributed random number using Box-Muller transform\n * @param mean - The mean of the distribution\n * @param variance - The variance of the distribution\n * @returns A random number from the normal distribution\n */\nfunction generateNormalRandom(mean: number, variance: number): number {\n  // Box-Muller transform\n  const u1 = Math.random();\n  const u2 = Math.random();\n  const z0 = Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\n  \n  // Convert to our desired mean and variance\n  return mean + z0 * Math.sqrt(variance);\n}\n\nexport async function runSearch(\n  options: SearchOptions,\n  overrides?: {\n    delayMs?: number;\n    groupLimits?: Record<string, number>;\n  },\n): Promise<SearchResponse> {\n  console.log('\uD83D\uDE80 runSearch called with options:', {\n    query: options.query,\n    selections: Object.keys(options.selections || {}),\n    isMonetarySearch: options.isMonetarySearch\n  });\n  \n  const settings = settingsStore.getState();\n  const meanDelay = overrides?.delayMs ?? settings.searchDelayMs;\n  const variance = settings.searchDelayVarianceMs;\n  const groupLimits = overrides?.groupLimits ?? settings.groupLimits;\n\n  const { isMonetary } = parseMonetaryQuery(options.query);\n  const searchOptions = { ...options, isMonetarySearch: isMonetary };\n  \n  const records = await filterRecords(searchOptions);\n  console.log('\uD83D\uDCCA filterRecords returned', records.length, 'records');\n  \n  const facets = computeFacets(records);\n  console.log('\uD83C\uDFAF computeFacets returned facets for keys:', Object.keys(facets));\n  \n  // Determine grouping option from selections\n  const groupBy = options.selections?.groupBy?.values().next().value;\n  const isGrouped = groupBy && groupBy !== 'None';\n  \n  const fullGroups = buildGroups(records, groupBy);\n  const limitedGroups = applyGroupLimits(fullGroups, groupLimits);\n\n  // Generate random delay using normal distribution\n  const randomDelay = generateNormalRandom(meanDelay, variance);\n  // Ensure delay is non-negative and reduce for short queries\n  const effectiveDelay = Math.max(0, options.query.trim().length < 3 ? Math.min(randomDelay, 50) : randomDelay);\n  await wait(effectiveDelay);\n\n  return {\n    query: options.query,\n    totalResults: records.length,\n    limitedGroups,\n    fullGroups,\n    facets,\n    records,\n    isGrouped: !!isGrouped,\n  };\n}\n\nexport async function getCorpus(): Promise<SearchRecord[]> {\n  const corpus = await loadCorpus();\n  return [...corpus];\n}\n\n/**\n * Get relationships for a specific entity\n */\nexport async function getEntityRelationships(\n  entityId: string, \n  options?: {\n    type?: string;\n    confidence?: string;\n    includeInferred?: boolean;\n  }\n): Promise<Relationship[]> {\n  await loadCorpus();\n  if (!RELATIONSHIP_ENGINE) {\n    console.warn('Relationship engine not available');\n    return [];\n  }\n  \n  try {\n    return RELATIONSHIP_ENGINE.getRelationships(entityId, {\n      type: options?.type as any,\n      confidence: options?.confidence as any,\n      includeInferred: options?.includeInferred\n    });\n  } catch (error) {\n    console.warn('Error getting relationships for', entityId, ':', error);\n    return [];\n  }\n}\n\n/**\n * Get smart actions for a specific entity\n */\nexport async function getEntitySmartActions(\n  entity: SearchRecord,\n  includeInferred: boolean = true\n): Promise<SmartAction[]> {\n  await loadCorpus();\n  if (!RELATIONSHIP_ENGINE) {\n    console.warn('Relationship engine not available');\n    return [];\n  }\n  \n  try {\n    return RELATIONSHIP_ENGINE.getSmartActions(entity, includeInferred);\n  } catch (error) {\n    console.warn('Error getting smart actions for', entity.id, ':', error);\n    return [];\n  }\n}\n\n/**\n * Get related entities for a specific entity\n */\nexport async function getRelatedEntities(\n  entityId: string,\n  options?: {\n    type?: string;\n    confidence?: string;\n    includeInferred?: boolean;\n    limit?: number;\n  }\n): Promise<SearchRecord[]> {\n  await loadCorpus();\n  if (!RELATIONSHIP_ENGINE) {\n    console.warn('Relationship engine not available');\n    return [];\n  }\n  \n  try {\n    return RELATIONSHIP_ENGINE.getRelatedEntities(entityId, {\n      type: options?.type as any,\n      confidence: options?.confidence as any,\n      includeInferred: options?.includeInferred,\n      limit: options?.limit\n    });\n  } catch (error) {\n    console.warn('Error getting related entities for', entityId, ':', error);\n    return [];\n  }\n}\n\n/**\n * Get relationship engine statistics\n */\nexport async function getRelationshipStats(): Promise<{\n  total: number;\n  byType: Record<string, number>;\n  byConfidence: Record<string, number>;\n}> {\n  await loadCorpus();\n  if (!RELATIONSHIP_ENGINE) {\n    return { total: 0, byType: {}, byConfidence: {} };\n  }\n  \n  return RELATIONSHIP_ENGINE.getStats();\n}\n", "import {\n  BuildertrendRecord,\n  FacetKey,\n  FacetSelectionState,\n  FacetValue,\n  SearchGroup,\n  SearchRecord,\n  SearchResponse,\n  SortOption,\n  isBuildertrendRecord,\n  isFinancialRecord,\n  isOrganizationRecord,\n  isPersonRecord,\n} from '../types';\n\n// Client-side sorting functions\nfunction sortRecordsByMostRecent(records: SearchRecord[]): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    // Get the most recent date for each record (updatedAt or createdAt/issuedDate)\n    const getMostRecentDate = (record: SearchRecord): Date => {\n      const updatedDate = new Date(record.updatedAt);\n      let createdDate: Date;\n      \n      if (isFinancialRecord(record)) {\n        // For financial records, use issuedDate as created date\n        createdDate = new Date(record.issuedDate);\n      } else {\n        // For other records, use createdAt\n        createdDate = new Date(record.createdAt);\n      }\n      \n      return updatedDate > createdDate ? updatedDate : createdDate;\n    };\n    \n    const dateA = getMostRecentDate(a);\n    const dateB = getMostRecentDate(b);\n    \n    // Sort by date (descending - most recent first)\n    return dateB.getTime() - dateA.getTime();\n  });\n}\n\nfunction sortRecordsByDueFirst(records: SearchRecord[]): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    // Get due date or fallback to updatedAt\n    const getDueDate = (record: SearchRecord): Date => {\n      if (isFinancialRecord(record) && record.dueDate) {\n        return new Date(record.dueDate);\n      }\n      return new Date(record.updatedAt);\n    };\n    \n    const dueDateA = getDueDate(a);\n    const dueDateB = getDueDate(b);\n    \n    // Sort by due date (ascending - soonest first)\n    return dueDateA.getTime() - dueDateB.getTime();\n  });\n}\n\nfunction sortRecordsByDueLast(records: SearchRecord[]): SearchRecord[] {\n  return [...records].sort((a, b) => {\n    // Get due date or fallback to updatedAt\n    const getDueDate = (record: SearchRecord): Date => {\n      if (isFinancialRecord(record) && record.dueDate) {\n        return new Date(record.dueDate);\n      }\n      return new Date(record.updatedAt);\n    };\n    \n    const dueDateA = getDueDate(a);\n    const dueDateB = getDueDate(b);\n    \n    // Sort by due date (descending - latest first)\n    return dueDateB.getTime() - dueDateA.getTime();\n  });\n}\n\nfunction sortRecords(records: SearchRecord[], sortBy: SortOption): SearchRecord[] {\n  console.log('\uD83D\uDD04 Client-side sorting with sortBy:', sortBy, 'for', records.length, 'records');\n  \n  switch (sortBy) {\n    case 'mostRecent':\n      return sortRecordsByMostRecent(records);\n    case 'dueFirst':\n      return sortRecordsByDueFirst(records);\n    case 'dueLast':\n      return sortRecordsByDueLast(records);\n    case 'relevance':\n    default:\n      // For relevance, keep the original order (already sorted by relevance from server)\n      return records;\n  }\n}\n\n// Declare Lucide global\ndeclare global {\n  interface Window {\n    lucide?: {\n      createIcons: () => void;\n    };\n  }\n}\nimport { formatCurrency, formatDate, formatEntityType } from '../utils/format';\nimport { SearchStatus } from '../state/appState';\nimport { findBestMatch, getContextSnippet, highlightText, highlightMonetaryValues, highlightHybrid, highlightMonetaryValuesWithPartialMatches } from '../utils/highlight';\nimport { settingsStore, LineItemBehavior } from '../state/settingsStore';\nimport { MIN_EFFECTIVE_QUERY_LENGTH, isQueryTooShort } from '../utils/query';\nimport { getEntityRelationships, getEntitySmartActions, getRelatedEntities } from '../data/searchService';\nimport { Relationship, SmartAction } from '../utils/relationshipEngine';\n\n// Helper function to detect if a query has monetary potential (for hybrid highlighting)\nfunction hasMonetaryPotential(query: string): boolean {\n  const tokens = query.toLowerCase().split(/\\s+/).filter(Boolean);\n  return tokens.some(token => {\n    return /^\\d+(,\\d{3})*(\\.\\d+)?$/.test(token) || \n           /^\\d+(\\.\\d+)?$/.test(token) ||\n           /^\\$?\\d+(,\\d{3})*(\\.\\d+)?$/.test(token) ||\n           /\\d/.test(token); // Any token containing a digit\n  });\n}\n\n// Helper function to determine which highlighting function to use\nfunction getHighlightFunction(query: string, isMonetarySearch: boolean) {\n  if (isMonetarySearch) {\n    return highlightMonetaryValuesWithPartialMatches;\n  } else {\n    // For non-monetary searches, always use regular text highlighting\n    // This prevents monetary highlighting classes from being applied to non-monetary searches\n    return highlightText;\n  }\n}\n\n  const FACET_LABELS: Record<FacetKey, string> = {\n  entityType: 'Type',\n  project: 'Project',\n  status: 'Status',\n  documentType: 'Document Type',\n  client: 'Client',\n  issuedDate: 'Issued',\n  totalValue: 'Total',\n  groupBy: 'Group by',\n  personType: 'Person Type',\n  contactOrganization: 'Contact Organization',\n  organizationType: 'Organization Type',\n  tradeFocus: 'Trade Focus',\n  costCodeCategory: 'Cost Code Category',\n  costCode: 'Cost Code',\n};\n\nexport interface ResultsViewOptions {\n  onFacetToggle(key: FacetKey, value: string): void;\n  onClearFacets?(): void;\n  onSortByChange?(sortBy: SortOption): void;\n}\n\nexport interface ResultsRenderContext {\n  response: SearchResponse | null;\n  selections: FacetSelectionState;\n  sortBy: SortOption;\n  status: SearchStatus;\n  query: string;\n  errorMessage?: string;\n  isMonetarySearch?: boolean;\n}\n\nexport interface ResultsViewHandles {\n  element: HTMLElement;\n  render(context: ResultsRenderContext): void;\n}\n\nexport function createResultsView(options: ResultsViewOptions): ResultsViewHandles {\n  const container = document.createElement('section');\n  container.className = 'results-view';\n\n  const header = document.createElement('header');\n  header.className = 'results-view__header';\n  header.innerHTML = `\n    <div>\n      <h1>Search Results</h1>\n      <p class=\"results-view__summary\" id=\"results-summary\"></p>\n    </div>\n    <div class=\"results-view__actions\">\n      <button type=\"button\" class=\"clear-facets\" hidden>Clear filters</button>\n    </div>\n  `;\n\n  const mainContent = document.createElement('div');\n  mainContent.className = 'results-view__main';\n\n  const facetsContainer = document.createElement('aside');\n  facetsContainer.className = 'results-view__facets';\n\n  const resultsContainer = document.createElement('div');\n  resultsContainer.className = 'results-view__groups';\n\n  mainContent.append(facetsContainer, resultsContainer);\n  container.append(header, mainContent);\n\n  const summaryEl = header.querySelector<HTMLParagraphElement>('#results-summary')!;\n  const clearButton = header.querySelector<HTMLButtonElement>('.clear-facets')!;\n\n  clearButton.addEventListener('click', () => {\n    options.onClearFacets?.();\n  });\n\n\n  // Track previous context to avoid unnecessary re-renders\n  let previousContext: ResultsRenderContext | null = null;\n\n  const render = (context: ResultsRenderContext) => {\n    const { response, selections, sortBy, status, query, errorMessage, isMonetarySearch } = context;\n\n    // Only update summary if relevant state changed\n    const summaryChanged = !previousContext ||\n      previousContext.status !== status ||\n      previousContext.response !== response ||\n      previousContext.query !== query ||\n      previousContext.errorMessage !== errorMessage ||\n      previousContext.sortBy !== sortBy;\n\n    if (summaryChanged) {\n      renderSummary(summaryEl, status, response, query, errorMessage, sortBy, options.onSortByChange);\n    }\n\n    // Only update facets if relevant state changed\n    const facetsChanged = !previousContext ||\n      previousContext.status !== status ||\n      previousContext.response !== response ||\n      previousContext.selections !== selections;\n\n    if (facetsChanged) {\n      renderFacets(facetsContainer, status, response, selections, options);\n    }\n\n\n    // Only update results if relevant state changed\n    const resultsChanged = !previousContext ||\n      previousContext.status !== status ||\n      previousContext.response !== response ||\n      previousContext.query !== query ||\n      previousContext.errorMessage !== errorMessage ||\n      previousContext.isMonetarySearch !== isMonetarySearch ||\n      previousContext.sortBy !== sortBy;\n\n    if (resultsChanged) {\n      // Use requestAnimationFrame to defer heavy DOM operations\n      requestAnimationFrame(() => {\n        renderGroups(resultsContainer, status, response, query, errorMessage, isMonetarySearch, sortBy);\n      });\n    }\n\n    // Only update clear button if selections changed\n    const selectionsChanged = !previousContext || previousContext.selections !== selections;\n    if (selectionsChanged) {\n      const hasSelections = selections && Object.keys(selections).length > 0;\n      clearButton.hidden = !hasSelections;\n    }\n\n    previousContext = context;\n  };\n\n  return {\n    element: container,\n    render,\n  };\n}\n\nfunction renderSummary(\n  target: HTMLElement,\n  status: SearchStatus,\n  response: SearchResponse | null,\n  query: string,\n  errorMessage?: string,\n  sortBy?: SortOption,\n  onSortByChange?: (sortBy: SortOption) => void,\n) {\n  target.innerHTML = '';\n\n  switch (status) {\n    case 'idle':\n      if (isQueryTooShort(query)) {\n        target.textContent = `Enter at least ${MIN_EFFECTIVE_QUERY_LENGTH} characters to see results.`;\n      } else {\n        target.textContent = 'Type a query to explore results and filters.';\n      }\n      return;\n    case 'loading':\n      target.textContent = query ? `Searching for \"${query}\"\u2026` : 'Searching\u2026';\n      return;\n    case 'error':\n      target.textContent = errorMessage ?? 'Search failed. Try again.';\n      return;\n    case 'ready':\n      if (!response) {\n        target.textContent = 'No results.';\n        return;\n      }\n      \n      // Create the summary with integrated sort control\n      const resultText = response.totalResults === 1 ? 'result' : 'results';\n      const shouldShowSort = response.totalResults > 1 && sortBy && onSortByChange;\n      \n      if (shouldShowSort) {\n        // Create container for text and sort control\n        const container = document.createElement('div');\n        container.className = 'results-summary-with-sort';\n        \n        // Create text span\n        const textSpan = document.createElement('span');\n        textSpan.textContent = `${response.totalResults} ${resultText} for \"${response.query}\" sorted by `;\n        \n        // Create sort select\n        const sortSelect = document.createElement('select');\n        sortSelect.className = 'results-summary__sort-select';\n        \n        // Define sort options with labels\n        const sortOptions = [\n          { value: 'relevance', label: 'Relevance' },\n          { value: 'mostRecent', label: 'Most Recent' },\n          { value: 'dueFirst', label: 'Due First' },\n          { value: 'dueLast', label: 'Due Last' },\n        ];\n        \n        // Add options to select\n        sortOptions.forEach(option => {\n          const optionElement = document.createElement('option');\n          optionElement.value = option.value;\n          optionElement.textContent = option.label;\n          sortSelect.appendChild(optionElement);\n        });\n        \n        // Set current selection\n        sortSelect.value = sortBy;\n        \n        // Add change event listener\n        sortSelect.addEventListener('change', () => {\n          const newSort = sortSelect.value as SortOption;\n          console.log('\uD83D\uDD04 Sort By changed from', sortBy, 'to', newSort);\n          if (newSort !== sortBy) {\n            console.log('\uD83C\uDFAF Calling onSortByChange for sortBy:', newSort);\n            onSortByChange(newSort);\n          }\n        });\n        \n        container.append(textSpan, sortSelect);\n        target.appendChild(container);\n      } else {\n        // Simple text for single result or no sort control\n        target.textContent = `${response.totalResults} ${resultText} for \"${response.query}\".`;\n      }\n      return;\n    default:\n      target.textContent = '';\n  }\n}\n\nfunction renderFacets(\n  container: HTMLElement,\n  status: SearchStatus,\n  response: SearchResponse | null,\n  selections: FacetSelectionState,\n  options: ResultsViewOptions,\n) {\n  container.innerHTML = '';\n\n  if (status === 'idle') {\n    container.classList.add('is-empty');\n    // Show pro tips instead of simple helper text\n    container.innerHTML = renderFacetProTips('idle');\n    return;\n  }\n\n  if (status === 'loading') {\n    container.classList.add('is-empty');\n    container.textContent = 'Calculating facets\u2026';\n    return;\n  }\n\n  if (status === 'error') {\n    container.classList.add('is-empty');\n    container.textContent = 'Facets unavailable while search is failing.';\n    return;\n  }\n\n  if (!response || !response.facets) {\n    container.classList.add('is-empty');\n    // Show pro tips instead of simple helper text\n    container.innerHTML = renderFacetProTips('empty');\n    return;\n  }\n\n  const facetsEntries = Object.entries(response.facets) as [FacetKey, FacetValue[]][];\n  if (facetsEntries.length === 0) {\n    container.classList.add('is-empty');\n    // Show pro tips instead of simple helper text\n    container.innerHTML = renderFacetProTips('no-results');\n    return;\n  }\n\n  container.classList.remove('is-empty');\n\n  const settings = settingsStore.getState();\n  const maxFacetValues = settings.maxFacetValues;\n\n  facetsEntries.forEach(([key, values]) => {\n    const block = document.createElement('section');\n    block.className = 'results-view__facet-block';\n\n    const heading = document.createElement('h3');\n    heading.textContent = FACET_LABELS[key] ?? key;\n    block.append(heading);\n\n    const list = document.createElement('ul');\n    list.className = 'results-view__facet-list';\n\n    // Determine how many values to show initially\n    const shouldLimit = maxFacetValues > 0 && values.length > maxFacetValues;\n    const initialCount = shouldLimit ? maxFacetValues : values.length;\n    const hiddenCount = values.length - initialCount;\n\n    // Create facet items\n    values.forEach((facet, index) => {\n      const listItem = document.createElement('li');\n      listItem.className = 'results-view__facet-item';\n      \n      // Hide items beyond the initial count\n      if (shouldLimit && index >= initialCount) {\n        listItem.classList.add('facet-item--hidden');\n      }\n\n      const label = document.createElement('label');\n      label.className = 'facet-checkbox';\n\n      const checkbox = document.createElement('input');\n      checkbox.type = 'checkbox';\n      checkbox.className = 'facet-checkbox__input';\n      checkbox.dataset.key = key;\n      checkbox.dataset.value = facet.value;\n\n      const isSelected = selections[key]?.has(facet.value) ?? false;\n      checkbox.checked = isSelected;\n\n      const text = document.createElement('span');\n      text.className = 'facet-checkbox__text';\n      // Format entity type facet values for better display\n      if (key === 'entityType') {\n        text.textContent = formatEntityType(facet.value as any);\n      } else {\n        text.textContent = facet.value;\n      }\n\n      const count = document.createElement('span');\n      count.className = 'facet-checkbox__count';\n      count.textContent = String(facet.count);\n\n      label.append(checkbox, text, count);\n      listItem.append(label);\n      list.append(listItem);\n\n      checkbox.addEventListener('change', () => {\n        options.onFacetToggle(key, facet.value);\n      });\n    });\n\n    block.append(list);\n\n    // Add show more/less toggle if needed\n    if (shouldLimit && hiddenCount > 0) {\n      const toggleContainer = document.createElement('div');\n      toggleContainer.className = 'facet-toggle-container';\n\n      const toggleButton = document.createElement('button');\n      toggleButton.type = 'button';\n      toggleButton.className = 'facet-toggle-button';\n      toggleButton.textContent = `Show ${hiddenCount} more${hiddenCount === 1 ? '' : '...'}`;\n      toggleButton.dataset.facetKey = key;\n\n      toggleContainer.append(toggleButton);\n      block.append(toggleContainer);\n\n      // Add toggle functionality\n      toggleButton.addEventListener('click', () => {\n        const isExpanded = toggleButton.classList.contains('is-expanded');\n        const allItems = list.querySelectorAll('.results-view__facet-item');\n        \n        if (isExpanded) {\n          // Collapse: hide items beyond initial count\n          allItems.forEach((item, index) => {\n            if (index >= initialCount) {\n              item.classList.add('facet-item--hidden');\n            }\n          });\n          toggleButton.textContent = `Show ${hiddenCount} more${hiddenCount === 1 ? '' : '...'}`;\n          toggleButton.classList.remove('is-expanded');\n        } else {\n          // Expand: show all items\n          allItems.forEach(item => item.classList.remove('facet-item--hidden'));\n          toggleButton.textContent = 'Show less';\n          toggleButton.classList.add('is-expanded');\n        }\n      });\n    }\n\n    container.append(block);\n  });\n}\n\nfunction renderGroups(\n  container: HTMLElement,\n  status: SearchStatus,\n  response: SearchResponse | null,\n  query: string,\n  errorMessage?: string,\n  isMonetarySearch?: boolean,\n  sortBy?: SortOption,\n) {\n  container.innerHTML = '';\n\n  if (status === 'idle') {\n    if (isQueryTooShort(query)) {\n      // Show pro tips for short queries - hide facets entirely\n      const message = `Enter at least ${MIN_EFFECTIVE_QUERY_LENGTH} characters to see matching records.`;\n      container.innerHTML = renderProTipsState(message, 'idle');\n      // Hide the facets container for idle state\n      const facetsContainer = container.closest('.results-view__main')?.querySelector('.results-view__facets') as HTMLElement;\n      if (facetsContainer) {\n        facetsContainer.style.display = 'none';\n      }\n    } else {\n      // Show empty state with pro tips - no heading message\n      container.innerHTML = renderProTipsState('', 'empty');\n      // Hide the facets container for empty state\n      const facetsContainer = container.closest('.results-view__main')?.querySelector('.results-view__facets') as HTMLElement;\n      if (facetsContainer) {\n        facetsContainer.style.display = 'none';\n      }\n    }\n    return;\n  }\n\n  if (status === 'loading') {\n    container.innerHTML = '<p class=\"results-view__empty\">Fetching results\u2026</p>';\n    return;\n  }\n\n  if (status === 'error') {\n    container.innerHTML = `<p class=\"results-view__empty\">${\n      errorMessage ?? 'Something went wrong while searching.'\n    }</p>`;\n    return;\n  }\n\n  if (!response || !response.fullGroups.length) {\n    // Show no results state with pro tips instead of simple message - hide facets entirely\n    container.innerHTML = renderProTipsState('No results found', 'no-results', query);\n    // Hide the facets container for no results state\n    const facetsContainer = container.closest('.results-view__main')?.querySelector('.results-view__facets') as HTMLElement;\n    if (facetsContainer) {\n      facetsContainer.style.display = 'none';\n    }\n    return;\n  }\n\n  // Show facets container again when we have results\n  const facetsContainer = container.closest('.results-view__main')?.querySelector('.results-view__facets') as HTMLElement;\n  if (facetsContainer) {\n    facetsContainer.style.display = '';\n  }\n\n  // Apply client-side sorting if sortBy is specified and not relevance\n  let sortedResponse = response;\n  if (sortBy && sortBy !== 'relevance') {\n    console.log('\uD83D\uDD04 Applying client-side sorting:', sortBy);\n    \n    // Sort the records\n    const sortedRecords = sortRecords(response.records, sortBy);\n    \n    // Create a new response with sorted records\n    sortedResponse = {\n      ...response,\n      records: sortedRecords,\n      // Also sort the groups if they exist\n      fullGroups: response.fullGroups.map(group => ({\n        ...group,\n        items: sortRecords(group.items, sortBy)\n      })),\n      limitedGroups: response.limitedGroups.map(group => ({\n        ...group,\n        items: sortRecords(group.items, sortBy)\n      }))\n    };\n  }\n\n  // If results are grouped, render groups; otherwise render as flat list\n  if (sortedResponse.isGrouped) {\n    sortedResponse.fullGroups.forEach((group) => {\n      container.append(renderGroup(group, group.groupTitle, query, isMonetarySearch));\n    });\n  } else {\n    // Render as flat list without group headers\n    const flatList = document.createElement('div');\n    flatList.className = 'results-list';\n    \n    // Use Promise.all to handle async rendering properly\n    Promise.all(sortedResponse.records.map(async (record) => {\n      const card = await renderResultCard(record, query, isMonetarySearch);\n      return { record, card };\n    })).then(results => {\n      results.forEach(({ card }) => {\n        flatList.append(card);\n      });\n    });\n    \n    container.append(flatList);\n  }\n}\n\nfunction renderGroup(group: SearchGroup, groupTitle?: string, query?: string, isMonetarySearch?: boolean): HTMLElement {\n  const section = document.createElement('section');\n  section.className = 'results-group';\n\n  const heading = document.createElement('header');\n  heading.className = 'results-group__header';\n  \n  const title = groupTitle || formatEntityType(group.entityType, { plural: true });\n  heading.innerHTML = `\n    <h2>${title}</h2>\n    <span class=\"results-group__count\">${group.items.length}</span>\n  `;\n\n  const list = document.createElement('div');\n  list.className = 'results-group__list';\n\n  // Use Promise.all to handle async rendering properly\n  Promise.all(group.items.map(async (item) => {\n    const card = await renderResultCard(item, query, isMonetarySearch);\n    return { item, card };\n  })).then(results => {\n    results.forEach(({ card }) => {\n      list.append(card);\n    });\n  });\n\n  section.append(heading, list);\n  return section;\n}\n\nasync function renderResultCard(item: SearchRecord, query?: string, isMonetarySearch?: boolean): Promise<HTMLElement> {\n  const card = document.createElement('article');\n  \n  // Add document ID metadata for debugging\n  card.setAttribute('data-document-id', item.id);\n  \n  // Add Buildertrend-specific styling\n  if (isBuildertrendRecord(item)) {\n    card.className = 'result-card result-card--buildertrend';\n    card.setAttribute('data-url', item.url);\n    card.setAttribute('tabindex', '0');\n    card.setAttribute('role', 'button');\n    card.setAttribute('aria-label', `Navigate to ${item.title}`);\n    \n    // Add click handler for navigation\n    card.addEventListener('click', () => {\n      // TODO: Implement navigation logic\n      console.log('Navigate to:', item.url);\n    });\n    \n    // Add keyboard support\n    card.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        console.log('Navigate to:', item.url);\n      }\n    });\n  } else {\n    card.className = 'result-card';\n  }\n\n  const header = document.createElement('div');\n  header.className = 'result-card__header';\n\n  const highlightFn = query ? getHighlightFunction(query, isMonetarySearch || false) : null;\n\n  const title = document.createElement('h3');\n  title.innerHTML = query && highlightFn ? highlightFn(item.title, query) : item.title;\n\n  // Add icon for Buildertrend records\n  if (isBuildertrendRecord(item)) {\n    const icon = document.createElement('i');\n    icon.className = 'result-card__icon';\n    icon.setAttribute('data-lucide', item.icon);\n    header.append(icon, title);\n    \n    // Update icons after DOM is ready\n    requestAnimationFrame(() => {\n      if (window.lucide) {\n        try {\n          window.lucide.createIcons();\n        } catch (error) {\n          console.warn('Error updating icons:', error);\n        }\n      }\n    });\n  } else {\n    header.append(title);\n  }\n\n  const badge = document.createElement('span');\n  badge.className = 'result-card__badge';\n  badge.textContent = formatEntityType(item.entityType);\n\n  header.append(badge);\n\n  const summary = document.createElement('p');\n  summary.className = 'result-card__summary';\n  summary.innerHTML = query && highlightFn ? highlightFn(item.summary, query) : item.summary;\n\n  const metaList = document.createElement('ul');\n  metaList.className = 'result-card__meta';\n  metaList.append(...buildMetaItems(item, query, isMonetarySearch));\n\n  card.append(header, summary, metaList);\n\n  // Add context line if the match is not in title, summary, or line items\n  if (query) {\n    const match = findBestMatch(item, query);\n    if (match && match.field !== 'title' && match.field !== 'summary' && !match.field.startsWith('lineItem')) {\n      const context = document.createElement('div');\n      context.className = 'search-context';\n      const highlightedSnippet = isMonetarySearch ? highlightMonetaryValuesWithPartialMatches(match.content, query) : getContextSnippet(match, 120, query);\n      context.innerHTML = `<strong>Matched in ${getFieldLabel(match.field)}:</strong> ${highlightedSnippet}`;\n      card.append(context);\n    }\n  }\n\n  if (isFinancialRecord(item)) {\n    const lineItemsBlock = renderLineItems(item, query, isMonetarySearch);\n    if (lineItemsBlock) {\n      card.append(lineItemsBlock);\n    }\n  }\n\n  // Add related items and smart actions\n  const settings = settingsStore.getState();\n  const includeInferred = settings.showInferredRelationships ?? true;\n  \n  try {\n    // Get related entities\n    const relatedEntities = await getRelatedEntities(item.id, {\n      includeInferred,\n      limit: 3\n    });\n\n    // Get smart actions\n    const smartActions = await getEntitySmartActions(item, includeInferred);\n\n    // Render related items if any exist\n    if (relatedEntities.length > 0) {\n      const relatedSection = renderRelatedItems(relatedEntities, item.id);\n      card.append(relatedSection);\n    }\n\n    // Render smart actions if any exist\n    if (smartActions.length > 0) {\n      const actionsSection = renderSmartActions(smartActions, item);\n      card.append(actionsSection);\n    }\n  } catch (error) {\n    console.warn('Error loading relationships for', item.id, ':', error);\n  }\n\n  return card;\n}\n\nfunction buildMetaItems(item: SearchRecord, query?: string, isMonetarySearch?: boolean): HTMLLIElement[] {\n  const metas: HTMLLIElement[] = [];\n\n  const highlightFn = query ? getHighlightFunction(query, isMonetarySearch || false) : null;\n  const highlightValue = (value: string) => (highlightFn ? highlightFn(value, query!) : value);\n\n  const pushMeta = (label: string, value?: string) => {\n    if (!value) {\n      return;\n    }\n    const entry = document.createElement('li');\n    entry.innerHTML = `<span>${label}</span><strong>${highlightValue(value)}</strong>`;\n    metas.push(entry);\n  };\n\n  if (isBuildertrendRecord(item)) {\n    pushMeta('Navigate To', item.path);\n    pushMeta('Description', item.description);\n    return metas;\n  }\n\n  pushMeta('Project', item.project);\n  pushMeta('Status', item.status);\n\n  if (item.entityType === 'Document') {\n    const doc = item as any;\n    pushMeta('Type', doc.documentType);\n    pushMeta('Updated', formatDate(item.updatedAt));\n    return metas;\n  }\n\n  if (isFinancialRecord(item)) {\n    pushMeta('Issued', formatDate(item.issuedDate));\n    if (item.dueDate) {\n      pushMeta('Due', formatDate(item.dueDate));\n    }\n    pushMeta('Total', formatCurrency(item.totalValue));\n    return metas;\n  }\n\n  if (isPersonRecord(item)) {\n    pushMeta('Person Type', item.personType);\n    pushMeta('Role', item.jobTitle);\n    pushMeta('Organization', item.associatedOrganization);\n    pushMeta('Location', item.location);\n    pushMeta('Email', item.email);\n    pushMeta('Phone', item.phone);\n    pushMeta('Trade Focus', item.tradeFocus ?? undefined);\n    return metas;\n  }\n\n  if (isOrganizationRecord(item)) {\n    pushMeta('Business Type', item.organizationType);\n    pushMeta('Trade', item.tradeFocus);\n    pushMeta('Service Area', item.serviceArea);\n    pushMeta('Primary Contact', item.primaryContact);\n    pushMeta('Phone', item.phone);\n    pushMeta('Email', item.email);\n    pushMeta('Website', item.website ?? undefined);\n    return metas;\n  }\n\n  return metas;\n}\n\nfunction hasLineItemMatches(item: SearchRecord, query?: string, isMonetarySearch?: boolean): boolean {\n  if (!query || !isFinancialRecord(item)) return false;\n  \n  const items = item.lineItems ?? [];\n  if (items.length === 0) return false;\n\n  const highlightFn = getHighlightFunction(query, isMonetarySearch || false);\n\n  // Check if any line item has actual highlighting matches\n  return items.some((lineItem) => {\n    let searchableFields: string[] = [];\n    \n    if (isMonetarySearch) {\n      // For monetary searches, ONLY check actual monetary value fields\n      // Never check quantities, descriptions, or other non-monetary fields\n      const monetaryFields: string[] = [];\n      \n      // Only include unit price and total as these are the actual monetary values\n      monetaryFields.push(formatCurrency(lineItem.lineItemUnitPrice));\n      monetaryFields.push(formatCurrency(lineItem.lineItemTotal));\n      \n      searchableFields = monetaryFields.filter(field => field && field.trim() !== '');\n    } else {\n      // For non-monetary searches, check all fields (backward compatibility)\n      searchableFields = [\n        lineItem.lineItemTitle,\n        lineItem.lineItemDescription,\n        lineItem.lineItemType,\n        lineItem.lineItemQuantity?.toString(),\n        lineItem.lineItemQuantityUnitOfMeasure,\n        formatCurrency(lineItem.lineItemUnitPrice),\n        formatCurrency(lineItem.lineItemTotal),\n        // Add cost code fields for matching\n        lineItem.costCode,\n        lineItem.costCodeName,\n        lineItem.costCodeCategory,\n        lineItem.costCodeCategoryName\n      ].filter((field): field is string => field != null && field.trim() !== '');\n    }\n    \n    return searchableFields.some((value) => {\n      if (!value) return false;\n      \n      const highlighted = highlightFn(value, query);\n      return highlighted.includes('<mark');\n    });\n  });\n}\n\nfunction getMatchingLineItemIndices(item: SearchRecord, query?: string, isMonetarySearch?: boolean): number[] {\n  if (!query || !isFinancialRecord(item)) return [];\n  \n  const items = item.lineItems ?? [];\n  if (items.length === 0) return [];\n\n  const matchingIndices: number[] = [];\n  const highlightFn = getHighlightFunction(query, isMonetarySearch || false);\n  \n  items.forEach((lineItem: any, index: number) => {\n    let searchableFields: string[] = [];\n    \n    if (isMonetarySearch) {\n      // For monetary searches, ONLY check actual monetary value fields\n      // Never check quantities, descriptions, or other non-monetary fields\n      const monetaryFields: string[] = [];\n      \n      // Only include unit price and total as these are the actual monetary values\n      monetaryFields.push(formatCurrency(lineItem.lineItemUnitPrice));\n      monetaryFields.push(formatCurrency(lineItem.lineItemTotal));\n      \n      searchableFields = monetaryFields.filter(field => field && field.trim() !== '');\n    } else {\n      // For non-monetary searches, check all fields (backward compatibility)\n      searchableFields = [\n        lineItem.lineItemTitle,\n        lineItem.lineItemDescription,\n        lineItem.lineItemType,\n        lineItem.lineItemQuantity?.toString(),\n        lineItem.lineItemQuantityUnitOfMeasure,\n        formatCurrency(lineItem.lineItemUnitPrice),\n        formatCurrency(lineItem.lineItemTotal),\n        // Add cost code fields for matching\n        lineItem.costCode,\n        lineItem.costCodeName,\n        lineItem.costCodeCategory,\n        lineItem.costCodeCategoryName\n      ].filter((field): field is string => field != null && field.trim() !== '');\n    }\n    \n    const hasMatch = searchableFields.some((value) => {\n      if (!value) return false;\n      \n      const highlighted = highlightFn(value, query);\n      return highlighted.includes('<mark');\n    });\n    \n    if (hasMatch) {\n      matchingIndices.push(index);\n    }\n  });\n  \n  return matchingIndices;\n}\n\ninterface MatchGroup {\n  startIndex: number;\n  endIndex: number;\n  indices: number[];\n}\n\nfunction groupMatchingLineItems(matchingIndices: number[], collapseThreshold: number): MatchGroup[] {\n  if (matchingIndices.length === 0) return [];\n  \n  const groups: MatchGroup[] = [];\n  let currentGroup: MatchGroup = {\n    startIndex: matchingIndices[0],\n    endIndex: matchingIndices[0],\n    indices: [matchingIndices[0]]\n  };\n  \n  for (let i = 1; i < matchingIndices.length; i++) {\n    const currentIndex = matchingIndices[i];\n    const lastIndex = matchingIndices[i - 1];\n    \n    // If the gap is within the threshold, add to current group\n    if (currentIndex - lastIndex <= collapseThreshold) {\n      currentGroup.endIndex = currentIndex;\n      currentGroup.indices.push(currentIndex);\n    } else {\n      // Gap is too large, start a new group\n      groups.push(currentGroup);\n      currentGroup = {\n        startIndex: currentIndex,\n        endIndex: currentIndex,\n        indices: [currentIndex]\n      };\n    }\n  }\n  \n  // Add the last group\n  groups.push(currentGroup);\n  \n  return groups;\n}\n\nfunction calculateDisplayRanges(\n  groups: MatchGroup[], \n  contextCount: number, \n  totalItems: number\n): Array<{ start: number; end: number; isCollapsed?: boolean }> {\n  if (groups.length === 0) return [];\n  \n  const ranges: Array<{ start: number; end: number; isCollapsed?: boolean }> = [];\n  \n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    \n    // Calculate the range for this group with context\n    const start = Math.max(0, group.startIndex - contextCount);\n    const end = Math.min(totalItems - 1, group.endIndex + contextCount);\n    \n    ranges.push({ start, end });\n    \n    // Add collapsed range between groups (except after the last group)\n    if (i < groups.length - 1) {\n      const nextGroup = groups[i + 1];\n      const gapStart = end + 1;\n      const gapEnd = Math.max(0, nextGroup.startIndex - contextCount) - 1;\n      \n      if (gapStart <= gapEnd) {\n        ranges.push({ start: gapStart, end: gapEnd, isCollapsed: true });\n      }\n    }\n  }\n  \n  return ranges;\n}\n\n// Helper function to extract context count from behavior setting\nfunction getContextCountFromBehavior(behavior: LineItemBehavior): number {\n  switch (behavior) {\n    case 'show-matched-only':\n      return 0;\n    case 'show-matched-with-context-1':\n      return 1;\n    case 'show-matched-with-context-2':\n      return 2;\n    case 'show-matched-with-context-3':\n      return 3;\n    case 'show-matched-with-context-5':\n      return 5;\n    case 'show-all-always':\n    case 'hide-all-always':\n      return 0; // Not used for these behaviors\n    default:\n      return 3;\n  }\n}\n\nfunction renderLineItems(item: SearchRecord, query?: string, isMonetarySearch?: boolean): HTMLElement | null {\n  if (!isFinancialRecord(item)) {\n    return null;\n  }\n\n  const items = item.lineItems ?? [];\n  if (items.length === 0) {\n    return null;\n  }\n\n  const settings = settingsStore.getState();\n  const hasMatches = hasLineItemMatches(item, query, isMonetarySearch);\n  \n  // Determine behavior based on the new setting\n  const behavior = settings.lineItemBehavior;\n  const shouldShowLineItems = behavior !== 'hide-all-always';\n  const shouldShowAllItems = behavior === 'show-all-always';\n  const contextCount = getContextCountFromBehavior(behavior);\n  \n\n  const wrapper = document.createElement('div');\n  wrapper.className = 'result-card__line-items';\n\n\n  // Helper function to group line items by cost code category\n  const groupLineItemsByCostCode = (items: any[]): Record<string, { categoryName: string; items: any[] }> => {\n    const groups: Record<string, { categoryName: string; items: any[] }> = {};\n    \n    items.forEach(item => {\n      const categoryId = item.costCodeCategory || 'buildertrend-default';\n      const categoryName = item.costCodeCategoryName || 'Buildertrend Default';\n      \n      if (!groups[categoryId]) {\n        groups[categoryId] = { categoryName, items: [] };\n      }\n      groups[categoryId].items.push(item);\n    });\n    \n    return groups;\n  };\n\n  // Helper function to render a line item row\n  const renderLineItemRow = (line: any, index: number): HTMLTableRowElement => {\n    const row = document.createElement('tr');\n    const unitPrice = formatCurrency(line.lineItemUnitPrice);\n    const total = formatCurrency(line.lineItemTotal);\n    const quantity = `${line.lineItemQuantity} ${line.lineItemQuantityUnitOfMeasure}`;\n    const highlightFn = query ? getHighlightFunction(query, isMonetarySearch || false) : null;\n    \n    // Add cost code column if available\n    const costCodeDisplay = line.costCodeName || line.costCode || '';\n    \n    // For monetary searches, only highlight monetary fields (unit price and total)\n    // For non-monetary searches, highlight all fields\n    const shouldHighlightDescription = query && highlightFn && !isMonetarySearch;\n    const shouldHighlightCostCode = query && highlightFn && !isMonetarySearch;\n    const shouldHighlightType = query && highlightFn && !isMonetarySearch;\n    const shouldHighlightQuantity = query && highlightFn && !isMonetarySearch;\n    const shouldHighlightUnitPrice = query && highlightFn; // Always highlight monetary fields\n    const shouldHighlightTotal = query && highlightFn; // Always highlight monetary fields\n    \n    row.innerHTML = `\n      <td class=\"line-item__description\">${shouldHighlightDescription ? highlightFn(line.lineItemTitle, query) : line.lineItemTitle}</td>\n      ${costCodeDisplay ? `<td class=\"line-item__cost-code\">${shouldHighlightCostCode ? highlightFn(costCodeDisplay, query) : costCodeDisplay}</td>` : ''}\n      <td class=\"line-item__type\">${shouldHighlightType ? highlightFn(line.lineItemType, query) : line.lineItemType}</td>\n      <td class=\"line-item__quantity\">${shouldHighlightQuantity ? highlightFn(quantity, query) : quantity}</td>\n      <td class=\"line-item__unit-price\">${shouldHighlightUnitPrice ? highlightFn(unitPrice, query) : unitPrice}</td>\n      <td class=\"line-item__total\">${shouldHighlightTotal ? highlightFn(total, query) : total}</td>\n    `;\n    return row;\n  };\n\n  // Function to render table content (supports both grouped and ungrouped views)\n  const renderTableContent = (container?: HTMLElement, forceShowAll: boolean = false) => {\n    const targetContainer = container || wrapper;\n    // Remove existing table if it exists\n    const existingTable = targetContainer.querySelector('.line-items-table');\n    if (existingTable) {\n      existingTable.remove();\n    }\n    \n    const table = document.createElement('table');\n    table.className = 'line-items-table';\n    \n    // Check if any line item has cost code data\n    const hasCostCodes = items.some((item: any) => item.costCode || item.costCodeName);\n    \n    // Create table header\n    const thead = document.createElement('thead');\n    const headerRow = document.createElement('tr');\n    \n    headerRow.innerHTML = `\n      <th>Description</th>\n      ${hasCostCodes ? '<th>Cost Code</th>' : ''}\n      <th>Type</th>\n      <th>Quantity</th>\n      <th>Unit Price</th>\n      <th>Total</th>\n    `;\n    thead.append(headerRow);\n    table.append(thead);\n    \n    // Create table body\n    const tbody = document.createElement('tbody');\n    \n    if (hasCostCodes) {\n      // Render grouped by cost code category, but respect context settings\n      const highlightFn = query ? getHighlightFunction(query, isMonetarySearch || false) : null;\n      \n      // Determine which items to show based on behavior setting\n      let itemsToShow: any[] = [];\n      \n      if (forceShowAll || shouldShowAllItems) {\n        // Show all items when forceShowAll is true or behavior is show-all-always\n        itemsToShow = items;\n      } else if (behavior === 'hide-all-always') {\n        // Don't show any items when behavior is hide-all-always\n        itemsToShow = [];\n      } else if (hasMatches && (behavior === 'show-matched-only' || behavior.startsWith('show-matched-with-context'))) {\n        const matchingIndices = getMatchingLineItemIndices(item as any, query, isMonetarySearch);\n        \n        if (matchingIndices.length > 0) {\n          if (settings.collapseIrrelevantLineItems && matchingIndices.length > 1) {\n            // Use smart grouping logic\n            const groups = groupMatchingLineItems(matchingIndices, settings.lineItemsCollapseThreshold);\n            const displayRanges = calculateDisplayRanges(groups, contextCount, items.length);\n            \n            // Get items from display ranges\n            displayRanges.forEach(range => {\n              if (!range.isCollapsed) {\n                for (let i = range.start; i <= range.end; i++) {\n                  itemsToShow.push(items[i]);\n                }\n              }\n            });\n          } else {\n            // Original logic: show all items between first and last match\n            const minIndex = Math.min(...matchingIndices);\n            const maxIndex = Math.max(...matchingIndices);\n            \n            const startIndex = Math.max(0, minIndex - contextCount);\n            const endIndex = Math.min(items.length, maxIndex + contextCount + 1);\n            \n            itemsToShow = items.slice(startIndex, endIndex);\n          }\n        } else {\n          // No matches found, don't show any items for matched-only behaviors\n          itemsToShow = [];\n        }\n      } else {\n        // No matches or behavior doesn't require matches: show all items\n        itemsToShow = items;\n      }\n      \n      // Now group the filtered items by cost code category\n      const groups = groupLineItemsByCostCode(itemsToShow);\n      const sortedCategories = Object.keys(groups).sort((a, b) => {\n        // Sort categories by their numeric order (1000-1999, 2000-2999, etc.)\n        const getNumericOrder = (categoryId: string) => {\n          if (categoryId === 'buildertrend-default') return 9999; // Put at end\n          const match = categoryId.match(/(\\d+)/);\n          return match ? parseInt(match[1]) : 9999;\n        };\n        return getNumericOrder(a) - getNumericOrder(b);\n      });\n      \n      sortedCategories.forEach(categoryId => {\n        const group = groups[categoryId];\n        \n        // Add category header row\n        const categoryRow = document.createElement('tr');\n        categoryRow.className = 'line-item__category-header';\n        const colspan = hasCostCodes ? 6 : 5;\n        categoryRow.innerHTML = `<td colspan=\"${colspan}\" class=\"line-item__category-title\">${group.categoryName}</td>`;\n        tbody.append(categoryRow);\n        \n        // Add line items for this category\n        group.items.forEach((item: any, index: number) => {\n          const row = renderLineItemRow(item, index);\n          tbody.append(row);\n        });\n      });\n      \n      // Add \"Show all\" button if there are hidden items\n      if (itemsToShow.length < items.length) {\n        const showAllRow = document.createElement('tr');\n        showAllRow.className = 'line-item__show-all';\n        const colspan = hasCostCodes ? 6 : 5;\n        showAllRow.innerHTML = `\n          <td colspan=\"${colspan}\" class=\"line-item__show-all-content\">\n            <button type=\"button\" class=\"line-item__show-all-button\">\n              Show all ${items.length} item${items.length === 1 ? '' : 's'}\n            </button>\n          </td>\n        `;\n        tbody.append(showAllRow);\n        \n        const showAllButton = showAllRow.querySelector('.line-item__show-all-button') as HTMLButtonElement;\n        showAllButton.addEventListener('click', () => {\n          // Re-render with all items\n          renderTableContent(targetContainer, true);\n        });\n      }\n    } else {\n      // Render ungrouped (original logic)\n      const highlightFn = query ? getHighlightFunction(query, isMonetarySearch || false) : null;\n      \n      // Determine which items to show initially\n      let displayRanges: Array<{ start: number; end: number; isCollapsed?: boolean }> = [];\n      let hiddenItems: any[] = [];\n      \n      if (forceShowAll || shouldShowAllItems) {\n        // Show all items when forceShowAll is true or behavior is show-all-always\n        displayRanges = [{ start: 0, end: items.length - 1 }];\n        hiddenItems = [];\n      } else if (behavior === 'hide-all-always') {\n        // Don't show any items when behavior is hide-all-always\n        displayRanges = [];\n        hiddenItems = items;\n      } else if (hasMatches && (behavior === 'show-matched-only' || behavior.startsWith('show-matched-with-context'))) {\n        const matchingIndices = getMatchingLineItemIndices(item as any, query, isMonetarySearch);\n        \n        if (matchingIndices.length > 0) {\n          if (settings.collapseIrrelevantLineItems && matchingIndices.length > 1) {\n            // Use smart grouping logic\n            const groups = groupMatchingLineItems(matchingIndices, settings.lineItemsCollapseThreshold);\n            displayRanges = calculateDisplayRanges(groups, contextCount, items.length);\n            \n            // Calculate hidden items (items in collapsed ranges)\n            hiddenItems = [];\n            displayRanges.forEach(range => {\n              if (range.isCollapsed) {\n                for (let i = range.start; i <= range.end; i++) {\n                  hiddenItems.push(items[i]);\n                }\n              }\n            });\n          } else {\n            // Original logic: show all items between first and last match\n            const minIndex = Math.min(...matchingIndices);\n            const maxIndex = Math.max(...matchingIndices);\n            \n            const startIndex = Math.max(0, minIndex - contextCount);\n            const endIndex = Math.min(items.length, maxIndex + contextCount + 1);\n            \n            displayRanges = [{ start: startIndex, end: endIndex - 1 }];\n            hiddenItems = [\n              ...items.slice(0, startIndex),\n              ...items.slice(endIndex)\n            ];\n          }\n        } else {\n          // No matches found, don't show any items for matched-only behaviors\n          displayRanges = [];\n          hiddenItems = items;\n        }\n      } else {\n        // No matches or behavior doesn't require matches: show all items\n        displayRanges = [{ start: 0, end: items.length - 1 }];\n        hiddenItems = [];\n      }\n      \n      // Track collapsed rows and their replacement content\n      const collapsedRows: HTMLTableRowElement[] = [];\n      const collapsedContent: HTMLTableRowElement[][] = [];\n\n      // Render items according to display ranges\n      displayRanges.forEach((range) => {\n        if (range.isCollapsed) {\n          // Add collapsed placeholder row\n          const collapsedRow = document.createElement('tr');\n          collapsedRow.className = 'line-item__collapsed';\n          const itemCount = range.end - range.start + 1;\n          const colspan = hasCostCodes ? 6 : 5;\n          collapsedRow.innerHTML = `\n            <td colspan=\"${colspan}\" class=\"line-item__collapsed-content\">\n              <span class=\"line-item__collapsed-text\">...</span>\n              <span class=\"line-item__collapsed-count\">${itemCount} item${itemCount === 1 ? '' : 's'}</span>\n            </td>\n          `;\n          tbody.append(collapsedRow);\n          collapsedRows.push(collapsedRow);\n          \n          // Create the actual content rows for this collapsed range\n          const contentRows: HTMLTableRowElement[] = [];\n          for (let i = range.start; i <= range.end; i++) {\n            const lineItemRow = renderLineItemRow(items[i], i);\n            lineItemRow.style.display = 'none'; // Initially hidden\n            tbody.append(lineItemRow);\n            contentRows.push(lineItemRow);\n          }\n          collapsedContent.push(contentRows);\n          \n          // Add click handler to expand/collapse\n          collapsedRow.addEventListener('click', () => {\n            const isExpanded = contentRows[0].style.display !== 'none';\n            if (isExpanded) {\n              // Collapse\n              contentRows.forEach(row => row.style.display = 'none');\n              collapsedRow.innerHTML = `\n                <td colspan=\"${colspan}\" class=\"line-item__collapsed-content\">\n                  <span class=\"line-item__collapsed-text\">...</span>\n                  <span class=\"line-item__collapsed-count\">${itemCount} item${itemCount === 1 ? '' : 's'}</span>\n                </td>\n              `;\n            } else {\n              // Expand\n              contentRows.forEach(row => row.style.display = '');\n              collapsedRow.innerHTML = `\n                <td colspan=\"${colspan}\" class=\"line-item__collapsed-content\">\n                  <span class=\"line-item__collapsed-text\">\u2191</span>\n                  <span class=\"line-item__collapsed-count\">Hide ${itemCount} item${itemCount === 1 ? '' : 's'}</span>\n                </td>\n              `;\n            }\n          });\n        } else {\n          // Add regular rows for this range\n          for (let i = range.start; i <= range.end; i++) {\n            const row = renderLineItemRow(items[i], i);\n            tbody.append(row);\n          }\n        }\n      });\n\n      // Add \"Show all\" button if there are hidden items\n      if (hiddenItems.length > 0) {\n        const showAllRow = document.createElement('tr');\n        showAllRow.className = 'line-item__show-all';\n        const colspan = hasCostCodes ? 6 : 5;\n        showAllRow.innerHTML = `\n          <td colspan=\"${colspan}\" class=\"line-item__show-all-content\">\n            <button type=\"button\" class=\"line-item__show-all-button\">\n              Show all ${items.length} item${items.length === 1 ? '' : 's'}\n            </button>\n          </td>\n        `;\n        tbody.append(showAllRow);\n        \n        const showAllButton = showAllRow.querySelector('.line-item__show-all-button') as HTMLButtonElement;\n        showAllButton.addEventListener('click', () => {\n          // Re-render with all items\n          renderTableContent(targetContainer, true);\n        });\n      }\n    }\n    \n    table.append(tbody);\n    targetContainer.append(table);\n  };\n\n  // Handle the hide-all-always behavior\n  if (behavior === 'hide-all-always') {\n    const toggleLink = document.createElement('button');\n    toggleLink.className = 'line-items-toggle';\n    toggleLink.textContent = `Show line item${items.length === 1 ? '' : 's'} (${items.length})`;\n    toggleLink.type = 'button';\n    \n    const tableContainer = document.createElement('div');\n    tableContainer.style.display = 'none';\n    \n    toggleLink.addEventListener('click', () => {\n      if (tableContainer.style.display === 'none') {\n        tableContainer.style.display = 'block';\n        toggleLink.textContent = `Hide line item${items.length === 1 ? '' : 's'}`;\n        // Render table content when first shown\n        if (!tableContainer.querySelector('.line-items-table')) {\n          renderTableContent(tableContainer);\n        }\n      } else {\n        tableContainer.style.display = 'none';\n        toggleLink.textContent = `Show line item${items.length === 1 ? '' : 's'} (${items.length})`;\n      }\n    });\n    \n    wrapper.append(toggleLink, tableContainer);\n    return wrapper;\n  }\n\n  // For matched-only behaviors without matches, show a toggle link\n  if ((behavior === 'show-matched-only' || behavior.startsWith('show-matched-with-context')) && !hasMatches) {\n    const toggleLink = document.createElement('button');\n    toggleLink.className = 'line-items-toggle';\n    toggleLink.textContent = `Show line item${items.length === 1 ? '' : 's'} (${items.length})`;\n    toggleLink.type = 'button';\n    \n    const tableContainer = document.createElement('div');\n    tableContainer.style.display = 'none';\n    \n    toggleLink.addEventListener('click', () => {\n      if (tableContainer.style.display === 'none') {\n        tableContainer.style.display = 'block';\n        toggleLink.textContent = `Hide line item${items.length === 1 ? '' : 's'}`;\n        // Render table content when first shown\n        if (!tableContainer.querySelector('.line-items-table')) {\n          renderTableContent(tableContainer);\n        }\n      } else {\n        tableContainer.style.display = 'none';\n        toggleLink.textContent = `Show line item${items.length === 1 ? '' : 's'} (${items.length})`;\n      }\n    });\n    \n    wrapper.append(toggleLink, tableContainer);\n    return wrapper;\n  }\n\n  // Show line items normally (for show-all-always or when there are matches for matched behaviors)\n  // Render the table content using the new function\n  renderTableContent();\n\n  return wrapper;\n}\n\nfunction getFieldLabel(field: string): string {\n  const labels: Record<string, string> = {\n    title: 'Title',\n    summary: 'Summary',\n    project: 'Project',\n    client: 'Client',\n    status: 'Status',\n    documentType: 'Document Type',\n    author: 'Author',\n    tags: 'Tags',\n  };\n\n  if (field.startsWith('lineItem') && field.includes('_')) {\n    const [, index, type] = field.split('_');\n    const typeLabels: Record<string, string> = {\n      title: 'Line Item Title',\n      description: 'Line Item Description',\n      type: 'Line Item Type',\n    };\n    return typeLabels[type] || 'Line Item';\n  }\n\n  if (field.startsWith('metadata_')) {\n    return 'Metadata';\n  }\n\n  return labels[field] || field;\n}\n\nfunction renderProTipsState(message: string, state: 'idle' | 'empty' | 'no-results', query?: string): string {\n  const proTips = getProTips(state, query);\n  \n  return `\n    <div class=\"pro-tips-state\">\n      ${message ? `\n        <div class=\"pro-tips-state__header\">\n          <h2 class=\"pro-tips-state__title\">${message}</h2>\n        </div>\n      ` : ''}\n      <div class=\"pro-tips-state__content\">\n        <div class=\"pro-tips\">\n          <h3 class=\"pro-tips__title\">Pro Tips & Tricks</h3>\n          <div class=\"pro-tips__grid\">\n            ${proTips.map(tip => `\n              <div class=\"pro-tip\">\n                <div class=\"pro-tip__content\">\n                  <h4 class=\"pro-tip__title\">\n                    <span class=\"pro-tip__icon\">${tip.icon}</span>\n                    ${tip.title}\n                  </h4>\n                  <p class=\"pro-tip__description\">${tip.description}</p>\n                  <div class=\"pro-tip__examples\">\n                    ${tip.examples.map(example => `\n                      <code class=\"pro-tip__example\">${example}</code>\n                    `).join('')}\n                  </div>\n                </div>\n              </div>\n            `).join('')}\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction getProTips(state: 'idle' | 'empty' | 'no-results', query?: string): Array<{\n  icon: string;\n  title: string;\n  description: string;\n  examples: string[];\n}> {\n  const tips: Array<{\n    icon: string;\n    title: string;\n    description: string;\n    examples: string[];\n  }> = [];\n\n  // Always include basic search tips\n  tips.push({\n    icon: '\uD83D\uDD0D',\n    title: 'Basic Text Search',\n    description: 'Search for any text in titles, summaries, projects, clients, and more.',\n    examples: ['kitchen renovation', 'John Smith', 'Project Alpha']\n  });\n\n  // Add monetary search tips\n  tips.push({\n    icon: '\uD83D\uDCB0',\n    title: 'Monetary Searches',\n    description: 'Find invoices, bills, and receipts by exact amounts or ranges.',\n    examples: ['$1234.56', '$500-$1000', '1234.56', '1000 to 2000']\n  });\n\n  // Add range search tips\n  tips.push({\n    icon: '\uD83D\uDCCA',\n    title: 'Range Queries',\n    description: 'Search for amounts within specific ranges using various formats.',\n    examples: ['$500-$1000', '1000 to 2000', '$50k-$100k']\n  });\n\n  // Add entity type tips\n  tips.push({\n    icon: '\uD83D\uDCCB',\n    title: 'Entity Types',\n    description: 'Search for specific types of records and documents.',\n    examples: ['invoices', 'contracts', 'people', 'organizations']\n  });\n\n  // Add project/client tips\n  tips.push({\n    icon: '\uD83C\uDFD7\uFE0F',\n    title: 'Project & Client Search',\n    description: 'Find records related to specific projects or clients.',\n    examples: ['Project Alpha', 'Smith Construction', 'residential']\n  });\n\n  // Add date-based tips\n  tips.push({\n    icon: '\uD83D\uDCC5',\n    title: 'Date-Based Search',\n    description: 'Search for records by date ranges, recent activity, or time periods.',\n    examples: ['recent', 'last month', '2024', 'Q1 2024']\n  });\n\n  // Add Buildertrend-specific tips\n  tips.push({\n    icon: '\u26A1',\n    title: 'Buildertrend Navigation',\n    description: 'Use trigger queries to quickly navigate to specific Buildertrend sections.',\n    examples: ['schedule', 'estimates', 'change orders', 'punch list']\n  });\n\n  // Add line item tips\n  tips.push({\n    icon: '\uD83D\uDCDD',\n    title: 'Line Item Details',\n    description: 'Search within detailed line items of invoices and purchase orders.',\n    examples: ['lumber', 'labor', 'materials', 'equipment']\n  });\n\n  // Add status-based tips\n  tips.push({\n    icon: '\uD83D\uDCCA',\n    title: 'Status Filters',\n    description: 'Find records by their current status or workflow stage.',\n    examples: ['pending', 'approved', 'paid', 'overdue']\n  });\n\n  // Add advanced search tips\n  tips.push({\n    icon: '\uD83C\uDFAF',\n    title: 'Advanced Techniques',\n    description: 'Combine multiple search terms and use facets to refine results.',\n    examples: ['kitchen AND renovation', 'invoice AND pending', 'Smith OR Johnson']\n  });\n\n  // Customize tips based on state\n  if (state === 'no-results' && query) {\n    // Add troubleshooting tips for no results\n    tips.unshift({\n      icon: '\uD83D\uDD27',\n      title: 'No Results? Try These',\n      description: 'Adjust your search strategy when no results are found.',\n      examples: [\n        'Use fewer keywords',\n        'Check spelling',\n        'Try broader terms',\n        'Use different formats'\n      ]\n    });\n  }\n\n  if (state === 'idle') {\n    // For idle state, emphasize getting started\n    tips.unshift({\n      icon: '\uD83D\uDE80',\n      title: 'Get Started',\n      description: 'Begin your search with any of these popular search types.',\n      examples: ['$5000', 'kitchen', 'Smith Construction', 'recent invoices']\n    });\n  }\n\n  return tips;\n}\n\n/**\n * Render related items section\n */\nfunction renderRelatedItems(relatedEntities: SearchRecord[], sourceEntityId: string): HTMLElement {\n  const section = document.createElement('div');\n  section.className = 'result-card__related-items';\n\n  const header = document.createElement('h4');\n  header.className = 'related-items__header';\n  header.textContent = 'Related Items';\n\n  const itemsList = document.createElement('div');\n  itemsList.className = 'related-items__list';\n\n  relatedEntities.forEach(entity => {\n    const item = document.createElement('div');\n    item.className = 'related-item';\n    \n    // Add confidence class for styling\n    const confidence = getRelationshipConfidence(sourceEntityId, entity.id);\n    if (confidence) {\n      item.classList.add(`related-item--${confidence}`);\n    }\n\n    const title = document.createElement('span');\n    title.className = 'related-item__title';\n    title.textContent = entity.title;\n\n    const type = document.createElement('span');\n    type.className = 'related-item__type';\n    type.textContent = formatEntityType(entity.entityType);\n\n    item.append(title, type);\n    itemsList.append(item);\n  });\n\n  section.append(header, itemsList);\n  return section;\n}\n\n/**\n * Render smart actions section\n */\nfunction renderSmartActions(smartActions: SmartAction[], entity: SearchRecord): HTMLElement {\n  const section = document.createElement('div');\n  section.className = 'result-card__smart-actions';\n\n  const header = document.createElement('h4');\n  header.className = 'smart-actions__header';\n  header.textContent = 'Quick Actions';\n\n  const actionsList = document.createElement('div');\n  actionsList.className = 'smart-actions__list';\n\n  smartActions.forEach((action, index) => {\n    const actionElement = document.createElement('a');\n    actionElement.href = action.href;\n    actionElement.className = index === 0 ? 'smart-action smart-action--primary' : 'smart-action smart-action--secondary';\n    actionElement.textContent = action.label;\n    actionElement.title = action.description || action.label;\n    \n    // Add data attributes for future functionality\n    actionElement.setAttribute('data-action-id', action.id);\n    actionElement.setAttribute('data-entity-id', entity.id);\n    actionElement.setAttribute('data-entity-type', entity.entityType);\n\n    actionsList.append(actionElement);\n  });\n\n  section.append(header, actionsList);\n  return section;\n}\n\n/**\n * Get relationship confidence for styling (simplified for now)\n */\nfunction getRelationshipConfidence(sourceId: string, targetId: string): string | null {\n  // This is a simplified version - in a real implementation, you'd look up the actual relationship\n  // For now, we'll use a simple heuristic based on entity types\n  return 'explicit'; // Default to explicit for now\n}\n\nfunction renderFacetProTips(state: 'idle' | 'empty' | 'no-results'): string {\n  const facetTips = getFacetProTips(state);\n  \n  return `\n    <div class=\"facet-pro-tips\">\n      <h3 class=\"facet-pro-tips__title\">Filter & Refine</h3>\n      <div class=\"facet-pro-tips__list\">\n        ${facetTips.map(tip => `\n          <div class=\"facet-pro-tip\">\n            <div class=\"facet-pro-tip__icon\">${tip.icon}</div>\n            <div class=\"facet-pro-tip__content\">\n              <h4 class=\"facet-pro-tip__title\">${tip.title}</h4>\n              <p class=\"facet-pro-tip__description\">${tip.description}</p>\n            </div>\n          </div>\n        `).join('')}\n      </div>\n    </div>\n  `;\n}\n\nfunction getFacetProTips(state: 'idle' | 'empty' | 'no-results'): Array<{\n  icon: string;\n  title: string;\n  description: string;\n}> {\n  const tips: Array<{\n    icon: string;\n    title: string;\n    description: string;\n  }> = [];\n\n  if (state === 'idle') {\n    tips.push({\n      icon: '\uD83D\uDD0D',\n      title: 'Search First',\n      description: 'Run a search to see filter options and refine your results.'\n    });\n    \n    tips.push({\n      icon: '\u26A1',\n      title: 'Quick Filters',\n      description: 'Use facets to narrow down results by type, project, status, and more.'\n    });\n  } else {\n    tips.push({\n      icon: '\uD83D\uDCCA',\n      title: 'Type Filters',\n      description: 'Filter by Document, Invoice, Person, Organization, or Buildertrend records.'\n    });\n    \n    tips.push({\n      icon: '\uD83C\uDFD7\uFE0F',\n      title: 'Project & Client',\n      description: 'Narrow results to specific projects or clients.'\n    });\n    \n    tips.push({\n      icon: '\uD83D\uDCB0',\n      title: 'Amount Ranges',\n      description: 'Filter financial records by total value ranges.'\n    });\n    \n    tips.push({\n      icon: '\uD83D\uDCC5',\n      title: 'Date Filters',\n      description: 'Find records by issue date ranges (last week, month, year).'\n    });\n    \n    tips.push({\n      icon: '\uD83D\uDCCB',\n      title: 'Status Filters',\n      description: 'Filter by record status like pending, approved, or paid.'\n    });\n    \n    tips.push({\n      icon: '\uD83C\uDFAF',\n      title: 'Advanced Grouping',\n      description: 'Group results by type, project, status, or client for better organization.'\n    });\n  }\n\n  return tips;\n}\n", "import { settingsStore, LineItemBehavior } from '../state/settingsStore';\nimport { formatEntityType } from '../utils/format';\nimport { SearchEntityType } from '../types';\n\nexport interface SettingsViewHandles {\n  element: HTMLElement;\n  render(): void;\n}\n\nexport function createSettingsView(): SettingsViewHandles {\n  const container = document.createElement('section');\n  container.className = 'settings-view';\n\n  const heading = document.createElement('header');\n  heading.innerHTML = `\n    <h1>Prototype Settings</h1>\n    <p>Adjust prototype behaviors. Changes save to the browser local storage and reload the experience.</p>\n  `;\n\n  const form = document.createElement('form');\n  form.className = 'settings-form';\n\n  // Overall Settings Section\n  const overallSection = document.createElement('fieldset');\n  overallSection.className = 'settings-group';\n  overallSection.innerHTML = `\n    <legend>Overall</legend>\n  `;\n\n  const delayField = document.createElement('div');\n  delayField.className = 'settings-field';\n  delayField.innerHTML = `\n    <label for=\"search-delay\">Simulated search delay mean (ms)</label>\n  `;\n\n  const delayInput = document.createElement('input');\n  delayInput.id = 'search-delay';\n  delayInput.type = 'number';\n  delayInput.min = '0';\n  delayInput.step = '10';\n\n  delayField.append(delayInput);\n  overallSection.append(delayField);\n\n  const varianceField = document.createElement('div');\n  varianceField.className = 'settings-field';\n  varianceField.innerHTML = `\n    <label for=\"search-delay-variance\">Search delay variance (ms)</label>\n  `;\n\n  const varianceInput = document.createElement('input');\n  varianceInput.id = 'search-delay-variance';\n  varianceInput.type = 'number';\n  varianceInput.min = '0';\n  varianceInput.step = '1';\n\n  varianceField.append(varianceInput);\n  overallSection.append(varianceField);\n\n  const recentSearchesField = document.createElement('div');\n  recentSearchesField.className = 'settings-field';\n  recentSearchesField.innerHTML = `\n    <label for=\"recent-searches-limit\">Recent searches to display</label>\n  `;\n\n  const recentSearchesSelect = document.createElement('select');\n  recentSearchesSelect.id = 'recent-searches-limit';\n  recentSearchesSelect.innerHTML = `\n    <option value=\"3\">3 searches</option>\n    <option value=\"5\">5 searches</option>\n    <option value=\"7\">7 searches</option>\n    <option value=\"10\">10 searches</option>\n    <option value=\"15\">15 searches</option>\n  `;\n\n  recentSearchesField.append(recentSearchesSelect);\n  overallSection.append(recentSearchesField);\n\n  // Full Results Page Settings Section\n  const resultsSection = document.createElement('fieldset');\n  resultsSection.className = 'settings-group';\n  resultsSection.innerHTML = `\n    <legend>Full Results Page</legend>\n  `;\n\n\n  const lineItemBehaviorField = document.createElement('div');\n  lineItemBehaviorField.className = 'settings-field';\n  lineItemBehaviorField.innerHTML = `\n    <label for=\"line-item-behavior\">Line item behavior on results page</label>\n  `;\n\n  const lineItemBehaviorSelect = document.createElement('select');\n  lineItemBehaviorSelect.id = 'line-item-behavior';\n  lineItemBehaviorSelect.innerHTML = `\n    <option value=\"show-matched-only\">Show only matched line items</option>\n    <option value=\"show-matched-with-context-1\">Show matched line items with 1 additional line of context before/after</option>\n    <option value=\"show-matched-with-context-2\">Show matched line items with 2 additional lines of context before/after</option>\n    <option value=\"show-matched-with-context-3\">Show matched line items with 3 additional lines of context before/after</option>\n    <option value=\"show-matched-with-context-5\">Show matched line items with 5 additional lines of context before/after</option>\n    <option value=\"show-all-always\">Always show all line items</option>\n    <option value=\"hide-all-always\">Always hide all line items, including matched</option>\n  `;\n\n  lineItemBehaviorField.append(lineItemBehaviorSelect);\n  resultsSection.append(lineItemBehaviorField);\n\n  const collapseLineItemsField = document.createElement('div');\n  collapseLineItemsField.className = 'settings-field settings-field--checkbox';\n\n  const collapseLineItemsCheckbox = document.createElement('input');\n  collapseLineItemsCheckbox.id = 'collapse-irrelevant-line-items';\n  collapseLineItemsCheckbox.type = 'checkbox';\n\n  const collapseLineItemsLabel = document.createElement('label');\n  collapseLineItemsLabel.htmlFor = 'collapse-irrelevant-line-items';\n  collapseLineItemsLabel.textContent = 'Collapse irrelevant line items between results (shows \"...\" for large gaps between matches)';\n\n  collapseLineItemsField.append(collapseLineItemsCheckbox, collapseLineItemsLabel);\n  resultsSection.append(collapseLineItemsField);\n\n  const collapseThresholdField = document.createElement('div');\n  collapseThresholdField.className = 'settings-field';\n  collapseThresholdField.innerHTML = `\n    <label for=\"line-items-collapse-threshold\">Collapse threshold</label>\n  `;\n\n  const collapseThresholdSelect = document.createElement('select');\n  collapseThresholdSelect.id = 'line-items-collapse-threshold';\n  collapseThresholdSelect.innerHTML = `\n    <option value=\"3\">3 items</option>\n    <option value=\"5\">5 items</option>\n    <option value=\"7\">7 items</option>\n    <option value=\"10\">10 items</option>\n  `;\n\n  collapseThresholdField.append(collapseThresholdSelect);\n  resultsSection.append(collapseThresholdField);\n\n  const maxFacetValuesField = document.createElement('div');\n  maxFacetValuesField.className = 'settings-field';\n  maxFacetValuesField.innerHTML = `\n    <label for=\"max-facet-values\">Max facet values to show</label>\n  `;\n\n  const maxFacetValuesSelect = document.createElement('select');\n  maxFacetValuesSelect.id = 'max-facet-values';\n  maxFacetValuesSelect.innerHTML = `\n    <option value=\"3\">3 values</option>\n    <option value=\"5\">5 values</option>\n    <option value=\"7\">7 values</option>\n    <option value=\"10\">10 values</option>\n    <option value=\"15\">15 values</option>\n    <option value=\"20\">20 values</option>\n    <option value=\"0\">Show all</option>\n  `;\n\n  maxFacetValuesField.append(maxFacetValuesSelect);\n  resultsSection.append(maxFacetValuesField);\n\n  const groupSection = document.createElement('fieldset');\n  groupSection.className = 'settings-group';\n  groupSection.innerHTML = `\n    <legend>Mini results group sizes</legend>\n  `;\n\n  const groupFields = document.createElement('div');\n  groupFields.className = 'settings-group__grid';\n  groupSection.append(groupFields);\n\n  const actions = document.createElement('div');\n  actions.className = 'settings-actions';\n\n  const saveButton = document.createElement('button');\n  saveButton.type = 'submit';\n  saveButton.className = 'primary';\n  saveButton.textContent = 'Save & Reload';\n\n  const resetButton = document.createElement('button');\n  resetButton.type = 'button';\n  resetButton.className = 'secondary';\n  resetButton.textContent = 'Restore defaults';\n\n  actions.append(saveButton, resetButton);\n\n  form.append(overallSection, resultsSection, groupSection, actions);\n  container.append(heading, form);\n\n  const groupInputs = new Map<string, HTMLInputElement>();\n\n  const renderGroupInputs = (groupLimits: Record<string, number>) => {\n    groupFields.innerHTML = '';\n    groupInputs.clear();\n\n    Object.entries(groupLimits).forEach(([key, value]) => {\n      const field = document.createElement('label');\n      field.className = 'settings-field';\n      field.htmlFor = `group-${key}`;\n\n      const title = document.createElement('span');\n      title.textContent = formatEntityType(key as SearchEntityType, { plural: true });\n\n      const input = document.createElement('input');\n      input.type = 'number';\n      input.min = '1';\n      input.step = '1';\n      input.id = `group-${key}`;\n      input.value = String(value);\n\n      field.append(title, input);\n      groupFields.append(field);\n      groupInputs.set(key, input);\n    });\n  };\n\n  const render = () => {\n    const state = settingsStore.getState();\n    delayInput.value = String(state.searchDelayMs);\n    varianceInput.value = String(state.searchDelayVarianceMs);\n    recentSearchesSelect.value = String(state.recentSearchesDisplayLimit);\n    lineItemBehaviorSelect.value = state.lineItemBehavior;\n    collapseLineItemsCheckbox.checked = state.collapseIrrelevantLineItems;\n    collapseThresholdSelect.value = String(state.lineItemsCollapseThreshold);\n    maxFacetValuesSelect.value = String(state.maxFacetValues);\n    renderGroupInputs(state.groupLimits);\n  };\n\n  form.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const nextDelay = Number.parseInt(delayInput.value, 10);\n    const resolvedDelay = Number.isFinite(nextDelay) && nextDelay >= 0 ? nextDelay : 0;\n\n    const nextVariance = Number.parseInt(varianceInput.value, 10);\n    const resolvedVariance = Number.isFinite(nextVariance) && nextVariance >= 0 ? nextVariance : 10;\n\n    const collapseThreshold = Number.parseInt(collapseThresholdSelect.value, 10);\n    const resolvedCollapseThreshold = Number.isFinite(collapseThreshold) && collapseThreshold >= 0 ? collapseThreshold : 5;\n\n    const maxFacetValues = Number.parseInt(maxFacetValuesSelect.value, 10);\n    const resolvedMaxFacetValues = Number.isFinite(maxFacetValues) && maxFacetValues >= 0 ? maxFacetValues : 5;\n\n    const recentSearchesLimit = Number.parseInt(recentSearchesSelect.value, 10);\n    const resolvedRecentSearchesLimit = Number.isFinite(recentSearchesLimit) && recentSearchesLimit >= 0 ? recentSearchesLimit : 5;\n\n    const groupLimits: Record<string, number> = {};\n    groupInputs.forEach((input, key) => {\n      const parsed = Number.parseInt(input.value, 10);\n      groupLimits[key] = Number.isFinite(parsed) && parsed > 0 ? parsed : 1;\n    });\n\n    settingsStore.update({\n      searchDelayMs: resolvedDelay,\n      searchDelayVarianceMs: resolvedVariance,\n      lineItemBehavior: lineItemBehaviorSelect.value as LineItemBehavior,\n      collapseIrrelevantLineItems: collapseLineItemsCheckbox.checked,\n      lineItemsCollapseThreshold: resolvedCollapseThreshold,\n      maxFacetValues: resolvedMaxFacetValues,\n      recentSearchesDisplayLimit: resolvedRecentSearchesLimit,\n      groupLimits,\n    });\n\n    window.location.reload();\n  });\n\n  resetButton.addEventListener('click', () => {\n    settingsStore.reset();\n    render();\n    window.location.reload();\n  });\n\n  render();\n\n  return {\n    element: container,\n    render,\n  };\n}\n", "/**\n * Reusable skeleton screen components for loading states\n * Based on the Nielsen Norman Group skeleton screen guidelines\n * https://www.nngroup.com/articles/skeleton-screens/\n */\n\nexport interface SkeletonOptions {\n  width?: string;\n  height?: string;\n  className?: string;\n  animated?: boolean;\n}\n\n/**\n * Creates a skeleton line element\n */\nexport function createSkeletonLine(options: SkeletonOptions = {}): HTMLElement {\n  const { width = '100%', height = '1rem', className = '', animated = true } = options;\n  \n  const line = document.createElement('div');\n  line.className = `skeleton-line ${animated ? 'skeleton-animated' : ''} ${className}`.trim();\n  line.style.width = width;\n  line.style.height = height;\n  \n  return line;\n}\n\n/**\n * Creates a skeleton rectangle element\n */\nexport function createSkeletonRect(options: SkeletonOptions = {}): HTMLElement {\n  const { width = '100%', height = '4rem', className = '', animated = true } = options;\n  \n  const rect = document.createElement('div');\n  rect.className = `skeleton-rect ${animated ? 'skeleton-animated' : ''} ${className}`.trim();\n  rect.style.width = width;\n  rect.style.height = height;\n  \n  return rect;\n}\n\n/**\n * Creates a skeleton circle element\n */\nexport function createSkeletonCircle(options: SkeletonOptions = {}): HTMLElement {\n  const { width = '2rem', height = '2rem', className = '', animated = true } = options;\n  \n  const circle = document.createElement('div');\n  circle.className = `skeleton-circle ${animated ? 'skeleton-animated' : ''} ${className}`.trim();\n  circle.style.width = width;\n  circle.style.height = height;\n  \n  return circle;\n}\n\n/**\n * Creates a skeleton card with multiple elements\n */\nexport function createSkeletonCard(options: {\n  title?: boolean;\n  subtitle?: boolean;\n  content?: number; // number of content lines\n  avatar?: boolean;\n  actions?: number; // number of action buttons\n  className?: string;\n} = {}): HTMLElement {\n  const { title = true, subtitle = true, content = 2, avatar = false, actions = 1, className = '' } = options;\n  \n  const card = document.createElement('div');\n  card.className = `skeleton-card ${className}`.trim();\n  \n  const header = document.createElement('div');\n  header.className = 'skeleton-card__header';\n  \n  if (avatar) {\n    const avatarEl = createSkeletonCircle({ width: '2.5rem', height: '2.5rem' });\n    header.appendChild(avatarEl);\n  }\n  \n  const headerContent = document.createElement('div');\n  headerContent.className = 'skeleton-card__header-content';\n  \n  if (title) {\n    const titleEl = createSkeletonLine({ width: '60%', height: '1.25rem' });\n    headerContent.appendChild(titleEl);\n  }\n  \n  if (subtitle) {\n    const subtitleEl = createSkeletonLine({ width: '40%', height: '0.875rem' });\n    headerContent.appendChild(subtitleEl);\n  }\n  \n  header.appendChild(headerContent);\n  card.appendChild(header);\n  \n  if (content > 0) {\n    const contentEl = document.createElement('div');\n    contentEl.className = 'skeleton-card__content';\n    \n    for (let i = 0; i < content; i++) {\n      const lineWidth = i === content - 1 ? '75%' : '100%';\n      const lineEl = createSkeletonLine({ width: lineWidth, height: '0.875rem' });\n      contentEl.appendChild(lineEl);\n    }\n    \n    card.appendChild(contentEl);\n  }\n  \n  if (actions > 0) {\n    const actionsEl = document.createElement('div');\n    actionsEl.className = 'skeleton-card__actions';\n    \n    for (let i = 0; i < actions; i++) {\n      const buttonEl = createSkeletonRect({ width: '4rem', height: '2rem' });\n      actionsEl.appendChild(buttonEl);\n    }\n    \n    card.appendChild(actionsEl);\n  }\n  \n  return card;\n}\n\n/**\n * Creates a skeleton list with multiple items\n */\nexport function createSkeletonList(options: {\n  items?: number;\n  avatar?: boolean;\n  title?: boolean;\n  subtitle?: boolean;\n  className?: string;\n} = {}): HTMLElement {\n  const { items = 3, avatar = false, title = true, subtitle = true, className = '' } = options;\n  \n  const list = document.createElement('div');\n  list.className = `skeleton-list ${className}`.trim();\n  \n  for (let i = 0; i < items; i++) {\n    const item = document.createElement('div');\n    item.className = 'skeleton-list__item';\n    \n    if (avatar) {\n      const avatarEl = createSkeletonCircle({ width: '2rem', height: '2rem' });\n      item.appendChild(avatarEl);\n    }\n    \n    const content = document.createElement('div');\n    content.className = 'skeleton-list__content';\n    \n    if (title) {\n      const titleEl = createSkeletonLine({ width: '70%', height: '1rem' });\n      content.appendChild(titleEl);\n    }\n    \n    if (subtitle) {\n      const subtitleEl = createSkeletonLine({ width: '50%', height: '0.75rem' });\n      content.appendChild(subtitleEl);\n    }\n    \n    item.appendChild(content);\n    list.appendChild(item);\n  }\n  \n  return list;\n}\n\n/**\n * Creates a skeleton grid layout\n */\nexport function createSkeletonGrid(options: {\n  columns?: number;\n  rows?: number;\n  gap?: string;\n  className?: string;\n} = {}): HTMLElement {\n  const { columns = 3, rows = 2, gap = '1rem', className = '' } = options;\n  \n  const grid = document.createElement('div');\n  grid.className = `skeleton-grid ${className}`.trim();\n  grid.style.display = 'grid';\n  grid.style.gridTemplateColumns = `repeat(${columns}, 1fr)`;\n  grid.style.gap = gap;\n  \n  for (let i = 0; i < columns * rows; i++) {\n    const card = createSkeletonCard({ content: 1, actions: 0 });\n    grid.appendChild(card);\n  }\n  \n  return grid;\n}\n\n/**\n * Creates a skeleton table\n */\nexport function createSkeletonTable(options: {\n  rows?: number;\n  columns?: number;\n  header?: boolean;\n  className?: string;\n} = {}): HTMLElement {\n  const { rows = 5, columns = 4, header = true, className = '' } = options;\n  \n  const table = document.createElement('div');\n  table.className = `skeleton-table ${className}`.trim();\n  \n  if (header) {\n    const headerRow = document.createElement('div');\n    headerRow.className = 'skeleton-table__header';\n    \n    for (let i = 0; i < columns; i++) {\n      const headerCell = createSkeletonLine({ width: '80%', height: '1rem' });\n      headerRow.appendChild(headerCell);\n    }\n    \n    table.appendChild(headerRow);\n  }\n  \n  for (let row = 0; row < rows; row++) {\n    const tableRow = document.createElement('div');\n    tableRow.className = 'skeleton-table__row';\n    \n    for (let col = 0; col < columns; col++) {\n      const cell = createSkeletonLine({ width: '90%', height: '0.875rem' });\n      tableRow.appendChild(cell);\n    }\n    \n    table.appendChild(tableRow);\n  }\n  \n  return table;\n}\n\n/**\n * Creates a skeleton sidebar layout\n */\nexport function createSkeletonSidebar(options: {\n  sections?: number;\n  className?: string;\n} = {}): HTMLElement {\n  const { sections = 3, className = '' } = options;\n  \n  const sidebar = document.createElement('div');\n  sidebar.className = `skeleton-sidebar ${className}`.trim();\n  \n  for (let i = 0; i < sections; i++) {\n    const section = document.createElement('div');\n    section.className = 'skeleton-sidebar__section';\n    \n    const title = createSkeletonLine({ width: '60%', height: '1rem' });\n    section.appendChild(title);\n    \n    const list = createSkeletonList({ items: 3, avatar: false, title: true, subtitle: false });\n    section.appendChild(list);\n    \n    sidebar.appendChild(section);\n  }\n  \n  return sidebar;\n}\n", "/**\n * Home page skeleton screen component\n * Creates a wireframe-like layout inspired by the project management interface\n * Based on Nielsen Norman Group skeleton screen guidelines\n */\n\nimport { \n  createSkeletonLine, \n  createSkeletonRect, \n  createSkeletonCircle \n} from './skeletonComponents';\n\nexport function createHomeSkeleton(): HTMLElement {\n  const container = document.createElement('div');\n  container.className = 'skeleton-home';\n\n  // Project Overview Header Section\n  const header = document.createElement('div');\n  header.className = 'skeleton-home__header';\n\n  // Project title and status\n  const titleSection = document.createElement('div');\n  titleSection.className = 'skeleton-home__title-section';\n  \n  const projectTitle = createSkeletonLine({ width: '12rem', height: '1.5rem' });\n  const statusBadge = createSkeletonRect({ width: '4rem', height: '1.5rem', className: 'skeleton-home__status-badge' });\n  \n  titleSection.appendChild(projectTitle);\n  titleSection.appendChild(statusBadge);\n  header.appendChild(titleSection);\n\n  // Address and clock-in info\n  const infoLines = document.createElement('div');\n  infoLines.className = 'skeleton-home__info-lines';\n  \n  const addressLine = createSkeletonLine({ width: '16rem', height: '1rem' });\n  const clockInLine = createSkeletonLine({ width: '14rem', height: '1rem' });\n  const actionLink = createSkeletonLine({ width: '8rem', height: '1rem', className: 'skeleton-home__action-link' });\n  \n  infoLines.appendChild(addressLine);\n  infoLines.appendChild(clockInLine);\n  infoLines.appendChild(actionLink);\n  header.appendChild(infoLines);\n\n  // People section (clients and project managers)\n  const peopleSection = document.createElement('div');\n  peopleSection.className = 'skeleton-home__people-section';\n\n  // Clients group\n  const clientsGroup = document.createElement('div');\n  clientsGroup.className = 'skeleton-home__people-group';\n  \n  const clientsLabel = createSkeletonLine({ width: '3rem', height: '1rem' });\n  const clientsAvatars = document.createElement('div');\n  clientsAvatars.className = 'skeleton-home__people-avatars';\n  \n  const clientAvatar = createSkeletonCircle({ width: '2.5rem', height: '2.5rem' });\n  clientsAvatars.appendChild(clientAvatar);\n  \n  clientsGroup.appendChild(clientsLabel);\n  clientsGroup.appendChild(clientsAvatars);\n  peopleSection.appendChild(clientsGroup);\n\n  // Project managers group\n  const managersGroup = document.createElement('div');\n  managersGroup.className = 'skeleton-home__people-group';\n  \n  const managersLabel = createSkeletonLine({ width: '6rem', height: '1rem' });\n  const managersAvatars = document.createElement('div');\n  managersAvatars.className = 'skeleton-home__people-avatars';\n  \n  const managerAvatar1 = createSkeletonCircle({ width: '2rem', height: '2rem' });\n  const managerAvatar2 = createSkeletonCircle({ width: '2rem', height: '2rem' });\n  managersAvatars.appendChild(managerAvatar1);\n  managersAvatars.appendChild(managerAvatar2);\n  \n  managersGroup.appendChild(managersLabel);\n  managersGroup.appendChild(managersAvatars);\n  peopleSection.appendChild(managersGroup);\n\n  header.appendChild(peopleSection);\n  container.appendChild(header);\n\n  // Main content area\n  const mainContent = document.createElement('div');\n  mainContent.className = 'skeleton-home__main-content';\n\n  // Central panel\n  const centralPanel = document.createElement('div');\n  centralPanel.className = 'skeleton-home__central-panel';\n\n  // Task overview section\n  const taskOverview = document.createElement('div');\n  taskOverview.className = 'skeleton-home__task-overview';\n\n  // Past due column\n  const pastDueColumn = document.createElement('div');\n  pastDueColumn.className = 'skeleton-home__task-column';\n  const pastDueHeader = createSkeletonLine({ width: '4rem', height: '1rem' });\n  pastDueColumn.appendChild(pastDueHeader);\n  taskOverview.appendChild(pastDueColumn);\n\n  // Due today column\n  const dueTodayColumn = document.createElement('div');\n  dueTodayColumn.className = 'skeleton-home__task-column';\n  const dueTodayHeader = createSkeletonLine({ width: '5rem', height: '1rem' });\n  const thumbsUpIcon = createSkeletonRect({ width: '3rem', height: '3rem', className: 'skeleton-home__task-icon' });\n  const motivationalMessage = createSkeletonLine({ width: '8rem', height: '1rem' });\n  \n  dueTodayColumn.appendChild(dueTodayHeader);\n  dueTodayColumn.appendChild(thumbsUpIcon);\n  dueTodayColumn.appendChild(motivationalMessage);\n  taskOverview.appendChild(dueTodayColumn);\n\n  // Action items column\n  const actionItemsColumn = document.createElement('div');\n  actionItemsColumn.className = 'skeleton-home__task-column';\n  const actionItemsHeader = createSkeletonLine({ width: '6rem', height: '1rem' });\n  actionItemsColumn.appendChild(actionItemsHeader);\n  taskOverview.appendChild(actionItemsColumn);\n\n  centralPanel.appendChild(taskOverview);\n\n  // Recent activity section\n  const activitySection = document.createElement('div');\n  activitySection.className = 'skeleton-home__activity-section';\n\n  const activityHeader = document.createElement('div');\n  activityHeader.className = 'skeleton-home__activity-header';\n  \n  const activityTitle = createSkeletonLine({ width: '12rem', height: '1.25rem' });\n  const activityFilter = createSkeletonRect({ width: '3rem', height: '2rem', className: 'skeleton-home__activity-filter' });\n  \n  activityHeader.appendChild(activityTitle);\n  activityHeader.appendChild(activityFilter);\n  activitySection.appendChild(activityHeader);\n\n  const activityList = document.createElement('div');\n  activityList.className = 'skeleton-home__activity-list';\n\n  // Activity date separator\n  const activityDate = createSkeletonLine({ width: '6rem', height: '1.25rem', className: 'skeleton-home__activity-date' });\n  activityList.appendChild(activityDate);\n\n  // Activity items\n  const activityItems = document.createElement('div');\n  activityItems.className = 'skeleton-home__activity-items';\n\n  // Create 3 activity items\n  for (let i = 0; i < 3; i++) {\n    const activityItem = document.createElement('div');\n    activityItem.className = 'skeleton-home__activity-item';\n\n    const avatar = createSkeletonCircle({ width: '2rem', height: '2rem', className: 'skeleton-home__activity-avatar' });\n    const content = document.createElement('div');\n    content.className = 'skeleton-home__activity-content';\n\n    const primaryLine = createSkeletonLine({ width: '14rem', height: '1rem' });\n    const actionLine = createSkeletonLine({ width: '10rem', height: '0.875rem' });\n    \n    // Add a third line for some items\n    if (i < 2) {\n      const detailLine = createSkeletonLine({ width: '8rem', height: '0.875rem' });\n      content.appendChild(detailLine);\n    }\n\n    content.appendChild(primaryLine);\n    content.appendChild(actionLine);\n\n    activityItem.appendChild(avatar);\n    activityItem.appendChild(content);\n    activityItems.appendChild(activityItem);\n  }\n\n  activityList.appendChild(activityItems);\n  activitySection.appendChild(activityList);\n  centralPanel.appendChild(activitySection);\n\n  mainContent.appendChild(centralPanel);\n\n  // Right sidebar\n  const sidebar = document.createElement('div');\n  sidebar.className = 'skeleton-home__sidebar';\n\n  // Updates section\n  const updatesSection = document.createElement('div');\n  updatesSection.className = 'skeleton-home__updates-section';\n\n  const updatesMetric = createSkeletonRect({ width: '4rem', height: '4rem', className: 'skeleton-home__updates-metric' });\n  const updatesDescription = createSkeletonLine({ width: '10rem', height: '1rem' });\n  \n  const updatesActions = document.createElement('div');\n  updatesActions.className = 'skeleton-home__updates-actions';\n  const clientUpdatesBtn = createSkeletonRect({ width: '5rem', height: '2rem' });\n  const dailyLogsBtn = createSkeletonRect({ width: '4rem', height: '2rem' });\n  updatesActions.appendChild(clientUpdatesBtn);\n  updatesActions.appendChild(dailyLogsBtn);\n\n  updatesSection.appendChild(updatesMetric);\n  updatesSection.appendChild(updatesDescription);\n  updatesSection.appendChild(updatesActions);\n  sidebar.appendChild(updatesSection);\n\n  // Agenda section\n  const agendaSection = document.createElement('div');\n  agendaSection.className = 'skeleton-home__agenda-section';\n\n  const agendaHeader = document.createElement('div');\n  agendaHeader.className = 'skeleton-home__agenda-header';\n  \n  const agendaTitle = createSkeletonLine({ width: '8rem', height: '1.25rem' });\n  const agendaLink = createSkeletonLine({ width: '6rem', height: '1rem', className: 'skeleton-home__agenda-link' });\n  \n  agendaHeader.appendChild(agendaTitle);\n  agendaHeader.appendChild(agendaLink);\n  agendaSection.appendChild(agendaHeader);\n\n  const agendaList = document.createElement('div');\n  agendaList.className = 'skeleton-home__agenda-list';\n\n  // Create agenda items for the week\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  for (let i = 0; i < days.length; i++) {\n    const agendaItem = document.createElement('div');\n    agendaItem.className = 'skeleton-home__agenda-item';\n\n    const dateIndicator = createSkeletonRect({ width: '2rem', height: '2rem', className: 'skeleton-home__agenda-date' });\n    const content = document.createElement('div');\n    content.className = 'skeleton-home__agenda-content';\n\n    const dayLine = createSkeletonLine({ width: '4rem', height: '1rem' });\n    const dateLine = createSkeletonLine({ width: '3rem', height: '0.875rem' });\n    \n    content.appendChild(dayLine);\n    content.appendChild(dateLine);\n\n    // Add non-workday indicator for weekend\n    if (i >= 5) {\n      const nonWorkdayLine = createSkeletonLine({ width: '5rem', height: '0.75rem' });\n      content.appendChild(nonWorkdayLine);\n    }\n\n    agendaItem.appendChild(dateIndicator);\n    agendaItem.appendChild(content);\n    agendaList.appendChild(agendaItem);\n  }\n\n  agendaSection.appendChild(agendaList);\n  sidebar.appendChild(agendaSection);\n\n  mainContent.appendChild(sidebar);\n  container.appendChild(mainContent);\n\n  return container;\n}\n", "import { FacetKey, FacetSelectionState, ScreenRoute, SearchResponse, SortOption } from '../types';\nimport { createStore } from './store';\n\nexport type SearchStatus = 'idle' | 'loading' | 'ready' | 'error';\n\nexport interface AppState {\n  route: ScreenRoute;\n  searchQuery: string;\n  lastSubmittedQuery: string;\n  facetSelections: FacetSelectionState;\n  sortBy: SortOption;\n  recentResponse: SearchResponse | null;\n  searchStatus: SearchStatus;\n  dialogOpen: boolean;\n  errorMessage?: string;\n}\n\nconst initialState: AppState = {\n  route: 'home',\n  searchQuery: '',\n  lastSubmittedQuery: '',\n  facetSelections: {},\n  sortBy: 'relevance',\n  recentResponse: null,\n  searchStatus: 'idle',\n  dialogOpen: false,\n  errorMessage: undefined,\n};\n\nfunction cloneSelections(selections: FacetSelectionState): FacetSelectionState {\n  const next: FacetSelectionState = {};\n  for (const key of Object.keys(selections) as FacetKey[]) {\n    const values = selections[key];\n    if (values && values.size > 0) {\n      next[key] = new Set(values);\n    }\n  }\n  return next;\n}\n\nconst store = createStore<AppState>(initialState);\n\nexport const appState = {\n  getState: store.getState,\n  subscribe: store.subscribe,\n  setRoute(route: ScreenRoute) {\n    store.setState({ route });\n  },\n  setSearchQuery(searchQuery: string) {\n    store.setState({ searchQuery });\n  },\n  setDialogOpen(dialogOpen: boolean) {\n    store.setState({ dialogOpen });\n  },\n  setStatus(status: SearchStatus, errorMessage?: string) {\n    store.setState({ searchStatus: status, errorMessage });\n  },\n  setResponse(response: SearchResponse | null) {\n    store.setState({ recentResponse: response });\n  },\n  setLastSubmittedQuery(query: string) {\n    store.setState({ lastSubmittedQuery: query });\n  },\n  setSortBy(sortBy: SortOption) {\n    console.log('\uD83D\uDD04 setSortBy called:', sortBy);\n    store.setState({ sortBy });\n  },\n  clearFacets() {\n    store.setState({ facetSelections: {} });\n  },\n  toggleFacet(key: FacetKey, value: string) {\n    console.log('\uD83D\uDD04 toggleFacet called:', { key, value });\n    store.setState((prev) => {\n      const selections = cloneSelections(prev.facetSelections);\n      console.log('\uD83D\uDD04 Previous selections:', Object.keys(selections).map(k => ({ key: k, values: Array.from(selections[k] || []) })));\n      \n      // Special handling for groupBy facet - only one option can be selected at a time\n      if (key === 'groupBy') {\n        if (selections[key]?.has(value)) {\n          // If the same value is selected, deselect it\n          console.log('\uD83D\uDD04 Deselecting', key, value);\n          delete selections[key];\n        } else {\n          // Select the new value and clear any other groupBy selections\n          console.log('\uD83D\uDD04 Selecting', key, value);\n          selections[key] = new Set([value]);\n        }\n      } else {\n        // Normal facet behavior - multiple selections allowed\n        const current = selections[key] ?? new Set<string>();\n\n        if (current.has(value)) {\n          current.delete(value);\n        } else {\n          current.add(value);\n        }\n\n        if (current.size === 0) {\n          delete selections[key];\n        } else {\n          selections[key] = current;\n        }\n      }\n\n      console.log('\uD83D\uDD04 New selections:', Object.keys(selections).map(k => ({ key: k, values: Array.from(selections[k] || []) })));\n      return {\n        ...prev,\n        facetSelections: selections,\n      };\n    });\n  },\n  replaceFacets(nextSelections: FacetSelectionState) {\n    const clone = cloneSelections(nextSelections);\n    store.setState({ facetSelections: clone });\n  },\n  reset() {\n    store.setState(initialState);\n  },\n};\n\nexport type AppStateStore = typeof appState;\n", "import './tokens.css';\nimport './styles.css';\nimport { createHeader } from './components/header';\nimport { createSearchDialog } from './components/searchDialog';\nimport { createResultsView } from './components/resultsView';\nimport { createSettingsView } from './components/settingsView';\nimport { createHomeSkeleton } from './components/homeSkeleton';\nimport { appState, AppState } from './state/appState';\nimport { runSearch } from './data/searchService';\nimport { recentSearches } from './data/recentSearches';\nimport { ScreenRoute } from './types';\nimport { getEffectiveQueryLength, MIN_EFFECTIVE_QUERY_LENGTH } from './utils/query';\n\n// Declare Lucide global\ndeclare global {\n  interface Window {\n    lucide?: {\n      createIcons: () => void;\n    };\n  }\n}\n\nfunction isMonetaryQuery(query: string): boolean {\n  return query.trim().startsWith('$');\n}\n\nconst root = document.querySelector<HTMLDivElement>('#app');\nif (!root) {\n  throw new Error('Root container #app not found');\n}\n\nconst main = document.createElement('main');\nmain.className = 'app-main';\n\nlet activeSearchToken = 0;\nlet searchDebounceTimer: number | null = null;\n\n// Debounce search operations to reduce UI blocking\nfunction debouncedSearch(value: string, options: { openDialog?: boolean; updateSubmitted?: boolean }) {\n  if (searchDebounceTimer) {\n    clearTimeout(searchDebounceTimer);\n  }\n  \n  // For very short queries, search immediately to provide instant feedback\n  const effectiveLength = getEffectiveQueryLength(value.trim());\n  const delay = effectiveLength < 2 ? 0 : 150; // 150ms debounce for longer queries\n  \n  searchDebounceTimer = window.setTimeout(() => {\n    void performSearch(value, options);\n    searchDebounceTimer = null;\n  }, delay);\n}\n\nconst header = createHeader({\n  onNavigate: (route) => navigate(route),\n  onHome: () => {\n    // Reset search state but keep settings\n    appState.setSearchQuery('');\n    appState.setLastSubmittedQuery('');\n    appState.setResponse(null);\n    appState.setStatus('idle');\n    appState.setDialogOpen(false);\n    appState.clearFacets();\n    navigate('home');\n  },\n  onSearchChange: (value) => {\n    const currentState = appState.getState();\n    const previousQuery = currentState.lastSubmittedQuery || currentState.searchQuery;\n    \n    // Clear filters if the search query has changed from the last submitted query\n    if (value.trim() !== previousQuery.trim()) {\n      appState.clearFacets();\n    }\n    \n    // Update search query immediately for responsive UI\n    appState.setSearchQuery(value);\n    \n    // Set monetary search mode based on query\n    header.setMonetarySearchMode(isMonetaryQuery(value));\n    \n    const isHome = appState.getState().route === 'home';\n    debouncedSearch(value, { openDialog: isHome, updateSubmitted: !isHome });\n  },\n  onSearchSubmit: () => {\n    navigate('results');\n    void performSearch(appState.getState().searchQuery, { openDialog: false });\n  },\n  onSearchFocus: () => {\n    if (appState.getState().route !== 'home') {\n      return;\n    }\n    // Use requestAnimationFrame to defer heavy operations and keep UI responsive\n    requestAnimationFrame(() => {\n      appState.setDialogOpen(true);\n      const query = appState.getState().searchQuery;\n      if (query.trim()) {\n        // Use debounced search for focus events too\n        debouncedSearch(query, { openDialog: true, updateSubmitted: false });\n      }\n    });\n  },\n  onSearchBlur: () => {\n    // Defer closing to outside-click + escape handlers.\n  },\n  onSearchKeyDown: (event) => {\n    console.log('\uD83D\uDD0D Header onSearchKeyDown:', {\n      key: event.key,\n      target: event.target,\n      dialogOpen: appState.getState().dialogOpen\n    });\n\n    // Handle CMD/CTRL+Enter for \"See all results\" when search input is focused\n    if (event.key === 'Enter' && (event.metaKey || event.ctrlKey) && appState.getState().dialogOpen) {\n      event.preventDefault();\n      event.stopPropagation();\n      navigate('results');\n      void performSearch(appState.getState().searchQuery, { openDialog: false });\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      console.log('\uD83C\uDFAF Header: handling Escape');\n      appState.setDialogOpen(false);\n      header.searchInput.blur();\n    }\n\n          // Handle arrow keys when dialog is open and we have results\n          if (appState.getState().dialogOpen && appState.getState().recentResponse &&\n              (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n            console.log('\uD83C\uDFAF Header: handling arrow key, blurring input');\n            event.preventDefault();\n            event.stopPropagation();\n\n            // Blur the input to remove focus\n            header.searchInput.blur();\n\n            // Focus the dialog so it can receive subsequent keyboard events\n            const dialog = document.querySelector('.search-dialog') as HTMLElement;\n            if (dialog) {\n              dialog.focus();\n            }\n\n            // Let the search dialog handle the navigation\n            // We'll dispatch a custom event to trigger navigation\n            const customEvent = new KeyboardEvent('keydown', {\n              key: event.key,\n              bubbles: true,\n              cancelable: true\n            });\n            document.dispatchEvent(customEvent);\n          }\n  },\n});\n\nconst searchDialog = createSearchDialog(header.dialogHost, {\n  onSeeAllResults: () => {\n    navigate('results');\n    void performSearch(appState.getState().searchQuery, { openDialog: false });\n  },\n});\n\n// Initialize dialog as hidden\nsearchDialog.setState({\n  visible: false,\n  status: appState.getState().searchStatus,\n  query: appState.getState().searchQuery,\n  response: appState.getState().recentResponse,\n  selectedIndex: -1,\n});\n\nconst resultsView = createResultsView({\n  onFacetToggle: (key, value) => {\n    console.log('\uD83C\uDFAF onFacetToggle called:', { key, value });\n    appState.toggleFacet(key, value);\n    const query = (appState.getState().lastSubmittedQuery || appState.getState().searchQuery).trim();\n    console.log('\uD83D\uDD0D Triggering search after facet toggle with query:', query);\n    if (query) {\n      void performSearch(query, { openDialog: false });\n    }\n  },\n  onClearFacets: () => {\n    appState.clearFacets();\n    const query = (appState.getState().lastSubmittedQuery || appState.getState().searchQuery).trim();\n    if (query) {\n      void performSearch(query, { openDialog: false });\n    }\n  },\n  onSortByChange: (sortBy) => {\n    console.log('\uD83C\uDFAF onSortByChange called:', sortBy);\n    appState.setSortBy(sortBy);\n    // No need to trigger a new search - just update the sort state\n  },\n});\n\nconst settingsView = createSettingsView();\n\nconst homeScreen = document.createElement('section');\nhomeScreen.id = 'screen-home';\nhomeScreen.dataset.screen = 'home';\nhomeScreen.className = 'screen screen--home';\nhomeScreen.appendChild(createHomeSkeleton());\n\nconst resultsScreen = document.createElement('section');\nresultsScreen.id = 'screen-results';\nresultsScreen.dataset.screen = 'results';\nresultsScreen.className = 'screen screen--results';\nresultsScreen.append(resultsView.element);\n\nconst settingsScreen = document.createElement('section');\nsettingsScreen.id = 'screen-settings';\nsettingsScreen.dataset.screen = 'settings';\nsettingsScreen.className = 'screen screen--settings';\nsettingsScreen.append(settingsView.element);\n\nmain.append(homeScreen, resultsScreen, settingsScreen);\nroot.append(header.element, main);\n\n// Initialize icons after header is in DOM\nrequestAnimationFrame(() => {\n  if (window.lucide) {\n    try {\n      window.lucide.createIcons();\n    } catch (error) {\n      console.warn('Error initializing header icons:', error);\n    }\n  }\n});\n\nconst screens: Record<ScreenRoute, HTMLElement> = {\n  home: homeScreen,\n  results: resultsScreen,\n  settings: settingsScreen,\n};\n\nfunction navigate(route: ScreenRoute) {\n  const previousRoute = appState.getState().route;\n  appState.setRoute(route);\n\n  if (route !== 'home') {\n    appState.setDialogOpen(false);\n  }\n\n  if (route === 'results') {\n    const query = (appState.getState().lastSubmittedQuery || appState.getState().searchQuery).trim();\n    if (query && previousRoute !== 'results') {\n      void performSearch(query, { openDialog: false });\n    }\n  }\n}\n\nasync function performSearch(\n  query: string,\n  options: { openDialog?: boolean; updateSubmitted?: boolean } = {},\n): Promise<void> {\n  const { openDialog = false, updateSubmitted = true } = options;\n  const trimmed = query.trim();\n  const effectiveLength = getEffectiveQueryLength(trimmed);\n\n  if (openDialog && appState.getState().route === 'home') {\n    appState.setDialogOpen(true);\n  }\n\n  if (effectiveLength === 0) {\n    activeSearchToken += 1;\n    if (updateSubmitted) {\n      appState.setLastSubmittedQuery('');\n    }\n    appState.setStatus('idle');\n    appState.setResponse(null);\n    return;\n  }\n\n  if (effectiveLength < MIN_EFFECTIVE_QUERY_LENGTH) {\n    activeSearchToken += 1;\n    if (updateSubmitted) {\n      appState.setLastSubmittedQuery('');\n    }\n    appState.setStatus('idle');\n    appState.setResponse(null);\n    return;\n  }\n\n  const requestId = ++activeSearchToken;\n  appState.setStatus('loading');\n\n  try {\n    const facetSelections = appState.getState().facetSelections;\n    \n    console.log('\uD83D\uDD0D performSearch - facetSelections:', {\n      allSelections: Object.keys(facetSelections).map(key => ({\n        key,\n        values: Array.from(facetSelections[key] || [])\n      }))\n    });\n    \n    const response = await runSearch({\n      query: trimmed,\n      selections: facetSelections,\n    });\n\n    if (requestId !== activeSearchToken) {\n      return;\n    }\n\n    appState.setResponse(response);\n    appState.setStatus('ready');\n\n    if (updateSubmitted) {\n      appState.setLastSubmittedQuery(trimmed);\n      // Record the search in recent searches when it's a submitted query\n      recentSearches.addSearch(trimmed, response.totalResults);\n    }\n\n    if (openDialog && appState.getState().route === 'home') {\n      appState.setDialogOpen(true);\n    }\n  } catch (error) {\n    if (requestId !== activeSearchToken) {\n      return;\n    }\n\n    console.error('Search failed', error);\n    appState.setStatus('error', 'Unable to complete search. Try again.');\n  }\n}\n\nfunction focusSearchBar() {\n  header.searchInput.focus();\n  header.searchInput.select();\n  const isHome = appState.getState().route === 'home';\n  if (isHome) {\n    appState.setDialogOpen(true);\n    const query = appState.getState().searchQuery;\n    if (query.trim()) {\n      void performSearch(query, { openDialog: true, updateSubmitted: false });\n    }\n  } else {\n    appState.setDialogOpen(false);\n  }\n}\n\nfunction handleGlobalKeydown(event: KeyboardEvent) {\n  console.log('\uD83C\uDF0D Global keydown:', {\n    key: event.key,\n    target: event.target,\n    dialogOpen: appState.getState().dialogOpen\n  });\n\n  const target = event.target as HTMLElement | null;\n  const isEditable =\n    target &&\n    (target.tagName === 'INPUT' ||\n      target.tagName === 'TEXTAREA' ||\n      target.isContentEditable);\n\n  if (event.key === '/' && !event.metaKey && !event.ctrlKey && !event.altKey && !isEditable) {\n    console.log('\uD83C\uDFAF Global: handling / key');\n    event.preventDefault();\n    focusSearchBar();\n    return;\n  }\n\n  if ((event.metaKey || event.ctrlKey) && event.key.toLowerCase() === 'k') {\n    console.log('\uD83C\uDFAF Global: handling Cmd/Ctrl+K');\n    event.preventDefault();\n    focusSearchBar();\n    return;\n  }\n\n  if (event.key === 'Escape' && appState.getState().dialogOpen) {\n    console.log('\uD83C\uDFAF Global: handling Escape');\n    appState.setDialogOpen(false);\n    header.searchInput.blur();\n  }\n\n  // Handle arrow keys when dialog is open\n  if (appState.getState().dialogOpen && (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n    console.log('\uD83C\uDFAF Global: handling arrow key in dialog');\n    // Don't prevent default here, let the search dialog handle it\n  }\n}\n\nfunction handleDocumentClick(event: MouseEvent) {\n  if (!appState.getState().dialogOpen) {\n    return;\n  }\n\n  const target = event.target as Node | null;\n  if (target && header.element.contains(target)) {\n    return;\n  }\n\n  appState.setDialogOpen(false);\n}\n\n// Track previous state to avoid unnecessary re-renders\nlet previousState: AppState | null = null;\n\nappState.subscribe((state) => {\n  // Only update route visibility if route changed\n  if (!previousState || previousState.route !== state.route) {\n    Object.entries(screens).forEach(([route, element]) => {\n      element.hidden = route !== state.route;\n    });\n  }\n\n  // Only update search input if query changed\n  if (!previousState || previousState.searchQuery !== state.searchQuery) {\n    header.searchInput.value = state.searchQuery;\n  }\n\n  // Only update active route if route changed\n  if (!previousState || previousState.route !== state.route) {\n    header.setActiveRoute(state.route);\n  }\n\n  // Only update search dialog if relevant state changed\n  const dialogStateChanged = !previousState || \n    previousState.dialogOpen !== state.dialogOpen ||\n    previousState.route !== state.route ||\n    previousState.searchStatus !== state.searchStatus ||\n    previousState.searchQuery !== state.searchQuery ||\n    previousState.recentResponse !== state.recentResponse;\n\n  if (dialogStateChanged) {\n    // Only reset selectedIndex if the query actually changed\n    const queryChanged = !previousState || previousState.searchQuery !== state.searchQuery;\n    searchDialog.setState({\n      visible: state.dialogOpen && state.route === 'home',\n      status: state.searchStatus,\n      query: state.searchQuery,\n      response: state.recentResponse,\n      isMonetarySearch: isMonetaryQuery(state.searchQuery),\n      selectedIndex: queryChanged ? -1 : (previousState?.selectedIndex ?? -1), // Preserve existing selection or default to -1\n    });\n  }\n\n  // Only update results view if relevant state changed\n  const resultsStateChanged = !previousState ||\n    previousState.recentResponse !== state.recentResponse ||\n    previousState.facetSelections !== state.facetSelections ||\n    previousState.sortBy !== state.sortBy ||\n    previousState.searchStatus !== state.searchStatus ||\n    previousState.lastSubmittedQuery !== state.lastSubmittedQuery ||\n    previousState.searchQuery !== state.searchQuery ||\n    previousState.errorMessage !== state.errorMessage;\n\n  if (resultsStateChanged) {\n    resultsView.render({\n      response: state.recentResponse,\n      selections: state.facetSelections,\n      sortBy: state.sortBy,\n      status: state.searchStatus,\n      query: state.lastSubmittedQuery || state.searchQuery,\n      errorMessage: state.errorMessage,\n      isMonetarySearch: isMonetaryQuery(state.lastSubmittedQuery || state.searchQuery),\n    });\n  }\n\n  previousState = state;\n});\n\ndocument.addEventListener('keydown', handleGlobalKeydown);\ndocument.addEventListener('mousedown', handleDocumentClick);\n\n// Handle custom search-query events from recent searches\nfunction handleSearchQueryEvent(event: CustomEvent) {\n  const query = event.detail?.query;\n  if (query && typeof query === 'string') {\n    // Set the search query and trigger a search\n    appState.setSearchQuery(query);\n    header.setMonetarySearchMode(isMonetaryQuery(query));\n    navigate('results');\n    void performSearch(query, { openDialog: false });\n  }\n}\n\n// Register event listener on both document and window\ndocument.addEventListener('search-query', handleSearchQueryEvent, true);\nwindow.addEventListener('search-query', handleSearchQueryEvent, true);\n\n// Initialize Lucide icons - simplified to prevent loops\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (window.lucide) {\n    try {\n      window.lucide.createIcons();\n    } catch (error) {\n      console.warn('Error initializing Lucide icons:', error);\n    }\n  }\n});\n\n// Simple icon update function - called manually when needed\nfunction updateIcons() {\n  if (window.lucide) {\n    try {\n      window.lucide.createIcons();\n    } catch (error) {\n      console.warn('Error updating Lucide icons:', error);\n    }\n  }\n}\n\n// Initial render\nappState.setRoute('home');\n"],
  "mappings": "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",
  "names": ["header", "obj", "header", "floatMultiply", "getFactor", "decimalPosition", "mergeTags", "getRatesFromRestApi", "Dinero", "create", "options", "assertSameCurrency", "precision", "currency", "initialState", "STORAGE_KEY", "previousState", "footer", "shortcutsContainer", "escShortcut", "escKey", "escText", "enterShortcut", "enterKey", "enterText", "arrowsShortcut", "arrowsContainer", "upArrow", "downArrow", "arrowsText", "header", "escapeHtml", "isBooleanQuery", "extractMonetaryTokens", "parseRangeQuery", "result", "rightMatch", "matchesMonetaryQuery", "isBooleanQuery", "isBooleanQuery", "matchesMonetaryQuery", "getHighlightFunction", "header", "facetsContainer", "renderGroup", "items", "item", "groups", "header", "initialState", "store"]
}
